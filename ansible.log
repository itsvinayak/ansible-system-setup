2024-05-18 12:44:37,942 p=51022 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-18 12:44:38,074 p=51022 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 12:44:38,082 p=51022 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 12:44:38,862 p=51022 u=root n=ansible | ok: [localhost]
2024-05-18 12:44:38,884 p=51022 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 12:44:39,685 p=51022 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716016458, "cache_updated": false, "changed": false}
2024-05-18 12:44:39,691 p=51022 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 12:44:39,703 p=51022 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 12:44:39,715 p=51022 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 12:44:39,736 p=51022 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 12:44:39,774 p=51022 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 12:44:42,417 p=51022 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716016482, "cache_updated": true, "changed": true}
2024-05-18 12:44:42,424 p=51022 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 12:44:42,437 p=51022 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 12:44:42,444 p=51022 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 12:44:42,453 p=51022 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 12:44:42,461 p=51022 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 12:44:42,472 p=51022 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 12:44:42,503 p=51022 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 12:44:42,504 p=51022 u=root n=ansible | localhost                  : ok=4    changed=1    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
2024-05-18 12:44:52,025 p=52203 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 12:44:52,031 p=52203 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 12:44:52,801 p=52203 u=root n=ansible | ok: [localhost]
2024-05-18 12:44:52,821 p=52203 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 12:44:53,629 p=52203 u=root n=ansible | ok: [localhost]
2024-05-18 12:44:53,636 p=52203 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 12:44:53,645 p=52203 u=root n=ansible | skipping: [localhost]
2024-05-18 12:44:53,675 p=52203 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 12:44:53,686 p=52203 u=root n=ansible | skipping: [localhost]
2024-05-18 12:44:53,692 p=52203 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 12:44:56,029 p=52203 u=root n=ansible | changed: [localhost]
2024-05-18 12:44:56,035 p=52203 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 12:44:56,050 p=52203 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 12:44:56,057 p=52203 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 12:44:56,073 p=52203 u=root n=ansible | skipping: [localhost]
2024-05-18 12:44:56,083 p=52203 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 12:44:56,091 p=52203 u=root n=ansible | skipping: [localhost]
2024-05-18 12:44:56,123 p=52203 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 12:44:56,123 p=52203 u=root n=ansible | localhost                  : ok=4    changed=1    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
2024-05-18 21:21:37,756 p=83713 u=root n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  found unacceptable key (unhashable type: 'AnsibleMapping')

The error appears to be in '/home/vinayak/ansible_config/roles/setup/tasks/neovim.yml': line 21, column 16, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      git:
        repo: {{ neovim_config_repo }}
               ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes. Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2024-05-18 21:22:36,316 p=83981 u=root n=ansible | ERROR! conflicting action statements: hosts, gather_facts

The error appears to be in '/home/vinayak/ansible_config/roles/setup/tasks/neovim.yml': line 1, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Install Neovim
  ^ here

2024-05-18 21:23:07,058 p=84169 u=root n=ansible | ERROR! conflicting action statements: hosts, tasks

The error appears to be in '/home/vinayak/ansible_config/roles/setup/tasks/neovim.yml': line 1, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Install Neovim
  ^ here

2024-05-18 21:26:58,156 p=84586 u=root n=ansible | ERROR! conflicting action statements: hosts, gather_facts

The error appears to be in '/home/vinayak/ansible_config/roles/setup/tasks/neovim.yml': line 1, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Install Neovim
  ^ here

2024-05-18 21:27:57,267 p=84867 u=root n=ansible | ERROR! unexpected parameter type in action: <class 'ansible.parsing.yaml.objects.AnsibleSequence'>

The error appears to be in '/home/vinayak/ansible_config/roles/setup/tasks/neovim.yml': line 1, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Install Neovim
  ^ here

2024-05-18 21:33:54,601 p=91766 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 21:33:54,611 p=91766 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 21:33:55,672 p=91766 u=root n=ansible | ok: [localhost]
2024-05-18 21:33:55,706 p=91766 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 21:33:57,005 p=91766 u=root n=ansible | ok: [localhost]
2024-05-18 21:33:57,014 p=91766 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 21:33:57,026 p=91766 u=root n=ansible | skipping: [localhost]
2024-05-18 21:33:57,042 p=91766 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 21:33:57,056 p=91766 u=root n=ansible | skipping: [localhost]
2024-05-18 21:33:57,070 p=91766 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 21:33:59,915 p=91766 u=root n=ansible | changed: [localhost]
2024-05-18 21:33:59,923 p=91766 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 21:33:59,938 p=91766 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 21:33:59,946 p=91766 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 21:33:59,956 p=91766 u=root n=ansible | skipping: [localhost]
2024-05-18 21:33:59,964 p=91766 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 21:33:59,974 p=91766 u=root n=ansible | skipping: [localhost]
2024-05-18 21:34:00,003 p=91766 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 21:34:00,016 p=91766 u=root n=ansible | ok: [localhost]
2024-05-18 21:34:00,025 p=91766 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 21:34:01,253 p=91766 u=root n=ansible | ok: [localhost]
2024-05-18 21:34:01,261 p=91766 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 21:34:01,271 p=91766 u=root n=ansible | skipping: [localhost]
2024-05-18 21:34:01,279 p=91766 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 21:34:04,023 p=91766 u=root n=ansible | ERROR! The requested handler 'Reload neovim' was not found in either the main handlers list nor in the listening handlers list
2024-05-18 21:37:07,064 p=94349 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 21:37:07,071 p=94349 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 21:37:07,840 p=94349 u=root n=ansible | ok: [localhost]
2024-05-18 21:37:07,861 p=94349 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 21:37:08,828 p=94349 u=root n=ansible | ok: [localhost]
2024-05-18 21:37:08,856 p=94349 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 21:37:08,865 p=94349 u=root n=ansible | skipping: [localhost]
2024-05-18 21:37:08,873 p=94349 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 21:37:08,883 p=94349 u=root n=ansible | skipping: [localhost]
2024-05-18 21:37:08,893 p=94349 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 21:37:11,940 p=94349 u=root n=ansible | changed: [localhost]
2024-05-18 21:37:11,948 p=94349 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 21:37:11,961 p=94349 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 21:37:11,969 p=94349 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 21:37:11,979 p=94349 u=root n=ansible | skipping: [localhost]
2024-05-18 21:37:11,987 p=94349 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 21:37:11,996 p=94349 u=root n=ansible | skipping: [localhost]
2024-05-18 21:37:12,012 p=94349 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 21:37:12,024 p=94349 u=root n=ansible | ok: [localhost]
2024-05-18 21:37:12,031 p=94349 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 21:37:12,815 p=94349 u=root n=ansible | ok: [localhost]
2024-05-18 21:37:12,823 p=94349 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 21:37:12,832 p=94349 u=root n=ansible | skipping: [localhost]
2024-05-18 21:37:12,846 p=94349 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 21:37:13,120 p=94349 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": false, "msg": "Unsupported parameters for (ansible.builtin.git) module: creates. Supported parameters include: accept_hostkey, accept_newhostkey, archive, archive_prefix, bare, clone, depth, dest, executable, force, gpg_whitelist, key_file, recursive, reference, refspec, remote, repo, separate_git_dir, single_branch, ssh_opts, track_submodules, umask, update, verify_commit, version (name)."}
2024-05-18 21:37:13,121 p=94349 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 21:37:13,121 p=94349 u=root n=ansible | localhost                  : ok=6    changed=1    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2024-05-18 21:40:25,519 p=97027 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 21:40:25,527 p=97027 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 21:40:26,488 p=97027 u=root n=ansible | ok: [localhost]
2024-05-18 21:40:26,518 p=97027 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 21:40:27,538 p=97027 u=root n=ansible | ok: [localhost]
2024-05-18 21:40:27,545 p=97027 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 21:40:27,555 p=97027 u=root n=ansible | skipping: [localhost]
2024-05-18 21:40:27,563 p=97027 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 21:40:27,572 p=97027 u=root n=ansible | skipping: [localhost]
2024-05-18 21:40:27,581 p=97027 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 21:40:31,612 p=97027 u=root n=ansible | changed: [localhost]
2024-05-18 21:40:31,620 p=97027 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 21:40:31,633 p=97027 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 21:40:31,641 p=97027 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 21:40:31,651 p=97027 u=root n=ansible | skipping: [localhost]
2024-05-18 21:40:31,660 p=97027 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 21:40:31,669 p=97027 u=root n=ansible | skipping: [localhost]
2024-05-18 21:40:31,684 p=97027 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 21:40:31,699 p=97027 u=root n=ansible | ok: [localhost]
2024-05-18 21:40:31,707 p=97027 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 21:40:32,569 p=97027 u=root n=ansible | ok: [localhost]
2024-05-18 21:40:32,577 p=97027 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 21:40:32,587 p=97027 u=root n=ansible | skipping: [localhost]
2024-05-18 21:40:32,597 p=97027 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 21:40:33,527 p=97027 u=root n=ansible | ok: [localhost]
2024-05-18 21:40:33,536 p=97027 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-18 21:40:33,546 p=97027 u=root n=ansible | skipping: [localhost]
2024-05-18 21:40:33,554 p=97027 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-18 21:40:33,567 p=97027 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-18 21:40:33,624 p=97027 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 21:40:33,624 p=97027 u=root n=ansible | localhost                  : ok=8    changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2024-05-18 21:50:06,549 p=99834 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 21:50:06,561 p=99834 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 21:50:07,539 p=99834 u=root n=ansible | ok: [localhost]
2024-05-18 21:50:07,561 p=99834 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 21:50:08,599 p=99834 u=root n=ansible | ok: [localhost]
2024-05-18 21:50:08,609 p=99834 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 21:50:08,622 p=99834 u=root n=ansible | skipping: [localhost]
2024-05-18 21:50:08,632 p=99834 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 21:50:08,645 p=99834 u=root n=ansible | skipping: [localhost]
2024-05-18 21:50:08,656 p=99834 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 21:50:14,332 p=99834 u=root n=ansible | changed: [localhost]
2024-05-18 21:50:14,342 p=99834 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 21:50:14,360 p=99834 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 21:50:14,370 p=99834 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 21:50:14,381 p=99834 u=root n=ansible | skipping: [localhost]
2024-05-18 21:50:14,390 p=99834 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 21:50:14,401 p=99834 u=root n=ansible | skipping: [localhost]
2024-05-18 21:50:14,420 p=99834 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 21:50:14,432 p=99834 u=root n=ansible | ok: [localhost]
2024-05-18 21:50:14,443 p=99834 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 21:50:15,388 p=99834 u=root n=ansible | ok: [localhost]
2024-05-18 21:50:15,396 p=99834 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 21:50:15,408 p=99834 u=root n=ansible | skipping: [localhost]
2024-05-18 21:50:15,416 p=99834 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 21:50:16,424 p=99834 u=root n=ansible | ok: [localhost]
2024-05-18 21:50:16,431 p=99834 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-18 21:50:16,444 p=99834 u=root n=ansible | skipping: [localhost]
2024-05-18 21:50:16,454 p=99834 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-18 21:50:16,467 p=99834 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-18 21:50:16,506 p=99834 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 21:50:16,507 p=99834 u=root n=ansible | localhost                  : ok=8    changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2024-05-18 21:53:53,370 p=101496 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 21:53:53,380 p=101496 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 21:53:54,331 p=101496 u=root n=ansible | ok: [localhost]
2024-05-18 21:53:54,353 p=101496 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 21:53:55,391 p=101496 u=root n=ansible | ok: [localhost]
2024-05-18 21:53:55,399 p=101496 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 21:53:55,412 p=101496 u=root n=ansible | skipping: [localhost]
2024-05-18 21:53:55,420 p=101496 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 21:53:55,434 p=101496 u=root n=ansible | skipping: [localhost]
2024-05-18 21:53:55,445 p=101496 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 21:53:57,822 p=101496 u=root n=ansible | changed: [localhost]
2024-05-18 21:53:57,830 p=101496 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 21:53:57,846 p=101496 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 21:53:57,855 p=101496 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 21:53:57,866 p=101496 u=root n=ansible | skipping: [localhost]
2024-05-18 21:53:57,877 p=101496 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 21:53:57,888 p=101496 u=root n=ansible | skipping: [localhost]
2024-05-18 21:53:57,906 p=101496 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 21:53:57,917 p=101496 u=root n=ansible | ok: [localhost]
2024-05-18 21:53:57,927 p=101496 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 21:53:58,796 p=101496 u=root n=ansible | ok: [localhost]
2024-05-18 21:53:58,803 p=101496 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 21:53:58,816 p=101496 u=root n=ansible | skipping: [localhost]
2024-05-18 21:53:58,826 p=101496 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 21:53:59,824 p=101496 u=root n=ansible | ok: [localhost]
2024-05-18 21:53:59,831 p=101496 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-18 21:53:59,844 p=101496 u=root n=ansible | skipping: [localhost]
2024-05-18 21:53:59,851 p=101496 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-18 21:53:59,869 p=101496 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-18 21:53:59,909 p=101496 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 21:53:59,909 p=101496 u=root n=ansible | localhost                  : ok=8    changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2024-05-18 21:56:48,652 p=102964 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 21:56:48,660 p=102964 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 21:56:49,705 p=102964 u=root n=ansible | ok: [localhost]
2024-05-18 21:56:49,726 p=102964 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 21:56:50,790 p=102964 u=root n=ansible | ok: [localhost]
2024-05-18 21:56:50,797 p=102964 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 21:56:50,812 p=102964 u=root n=ansible | skipping: [localhost]
2024-05-18 21:56:50,824 p=102964 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 21:56:50,835 p=102964 u=root n=ansible | skipping: [localhost]
2024-05-18 21:56:50,843 p=102964 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 21:56:54,361 p=102964 u=root n=ansible | changed: [localhost]
2024-05-18 21:56:54,370 p=102964 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 21:56:54,386 p=102964 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 21:56:54,394 p=102964 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 21:56:54,406 p=102964 u=root n=ansible | skipping: [localhost]
2024-05-18 21:56:54,415 p=102964 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 21:56:54,426 p=102964 u=root n=ansible | skipping: [localhost]
2024-05-18 21:56:54,442 p=102964 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 21:56:54,454 p=102964 u=root n=ansible | ok: [localhost]
2024-05-18 21:56:54,462 p=102964 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 21:56:55,456 p=102964 u=root n=ansible | ok: [localhost]
2024-05-18 21:56:55,464 p=102964 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 21:56:55,475 p=102964 u=root n=ansible | skipping: [localhost]
2024-05-18 21:56:55,486 p=102964 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-18 21:56:55,796 p=102964 u=root n=ansible | ok: [localhost]
2024-05-18 21:56:55,806 p=102964 u=root n=ansible | TASK [setup : Debug Neovim configuration directory] **************************************************************************************************
2024-05-18 21:56:55,821 p=102964 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: ~/.config/nvim"
}
2024-05-18 21:56:55,828 p=102964 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 21:56:56,826 p=102964 u=root n=ansible | ok: [localhost]
2024-05-18 21:56:56,837 p=102964 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-18 21:56:56,846 p=102964 u=root n=ansible | skipping: [localhost]
2024-05-18 21:56:56,858 p=102964 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-18 21:56:56,877 p=102964 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-18 21:56:56,917 p=102964 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 21:56:56,918 p=102964 u=root n=ansible | localhost                  : ok=10   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2024-05-18 21:59:56,516 p=104420 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 21:59:56,524 p=104420 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 21:59:57,555 p=104420 u=root n=ansible | ok: [localhost]
2024-05-18 21:59:57,580 p=104420 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 21:59:58,671 p=104420 u=root n=ansible | ok: [localhost]
2024-05-18 21:59:58,680 p=104420 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 21:59:58,690 p=104420 u=root n=ansible | skipping: [localhost]
2024-05-18 21:59:58,701 p=104420 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 21:59:58,714 p=104420 u=root n=ansible | skipping: [localhost]
2024-05-18 21:59:58,721 p=104420 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:00:02,395 p=104420 u=root n=ansible | changed: [localhost]
2024-05-18 22:00:02,404 p=104420 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 22:00:02,422 p=104420 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 22:00:02,433 p=104420 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 22:00:02,446 p=104420 u=root n=ansible | skipping: [localhost]
2024-05-18 22:00:02,454 p=104420 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 22:00:02,466 p=104420 u=root n=ansible | skipping: [localhost]
2024-05-18 22:00:02,482 p=104420 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 22:00:02,496 p=104420 u=root n=ansible | ok: [localhost]
2024-05-18 22:00:02,504 p=104420 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 22:00:03,406 p=104420 u=root n=ansible | ok: [localhost]
2024-05-18 22:00:03,416 p=104420 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 22:00:03,431 p=104420 u=root n=ansible | skipping: [localhost]
2024-05-18 22:00:03,438 p=104420 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-18 22:00:03,731 p=104420 u=root n=ansible | ok: [localhost]
2024-05-18 22:00:03,739 p=104420 u=root n=ansible | TASK [setup : Debug Neovim configuration directory] **************************************************************************************************
2024-05-18 22:00:03,756 p=104420 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: ~/.config/nvim"
}
2024-05-18 22:00:03,766 p=104420 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 22:00:04,769 p=104420 u=root n=ansible | ok: [localhost]
2024-05-18 22:00:04,779 p=104420 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-18 22:00:04,789 p=104420 u=root n=ansible | skipping: [localhost]
2024-05-18 22:00:04,802 p=104420 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-18 22:00:04,818 p=104420 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-18 22:00:04,857 p=104420 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 22:00:04,858 p=104420 u=root n=ansible | localhost                  : ok=10   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2024-05-18 22:02:21,933 p=105824 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:02:21,945 p=105824 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:02:22,922 p=105824 u=root n=ansible | ok: [localhost]
2024-05-18 22:02:22,947 p=105824 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:02:24,010 p=105824 u=root n=ansible | ok: [localhost]
2024-05-18 22:02:24,017 p=105824 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:02:24,031 p=105824 u=root n=ansible | skipping: [localhost]
2024-05-18 22:02:24,041 p=105824 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:02:24,050 p=105824 u=root n=ansible | skipping: [localhost]
2024-05-18 22:02:24,060 p=105824 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:02:28,053 p=105824 u=root n=ansible | changed: [localhost]
2024-05-18 22:02:28,063 p=105824 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 22:02:28,078 p=105824 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 22:02:28,087 p=105824 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 22:02:28,100 p=105824 u=root n=ansible | skipping: [localhost]
2024-05-18 22:02:28,111 p=105824 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 22:02:28,122 p=105824 u=root n=ansible | skipping: [localhost]
2024-05-18 22:02:28,140 p=105824 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 22:02:28,152 p=105824 u=root n=ansible | ok: [localhost]
2024-05-18 22:02:28,163 p=105824 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 22:02:29,098 p=105824 u=root n=ansible | ok: [localhost]
2024-05-18 22:02:29,108 p=105824 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 22:02:29,122 p=105824 u=root n=ansible | skipping: [localhost]
2024-05-18 22:02:29,130 p=105824 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-18 22:02:29,437 p=105824 u=root n=ansible | ok: [localhost]
2024-05-18 22:02:29,449 p=105824 u=root n=ansible | TASK [setup : Debug Neovim configuration directory] **************************************************************************************************
2024-05-18 22:02:29,463 p=105824 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: ~/.config/nvim"
}
2024-05-18 22:02:29,471 p=105824 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 22:02:30,464 p=105824 u=root n=ansible | ok: [localhost]
2024-05-18 22:02:30,474 p=105824 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-18 22:02:30,485 p=105824 u=root n=ansible | skipping: [localhost]
2024-05-18 22:02:30,497 p=105824 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-18 22:02:30,513 p=105824 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-18 22:02:30,584 p=105824 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 22:02:30,584 p=105824 u=root n=ansible | localhost                  : ok=10   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2024-05-18 22:04:31,812 p=107239 u=root n=ansible | [WARNING]: While constructing a mapping from /home/vinayak/ansible_config/roles/setup/tasks/neovim.yml, line 3, column 5, found a duplicate dict key
(msg). Using last defined value only.

2024-05-18 22:04:31,826 p=107239 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:04:31,834 p=107239 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:04:32,850 p=107239 u=root n=ansible | ok: [localhost]
2024-05-18 22:04:32,874 p=107239 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:04:33,944 p=107239 u=root n=ansible | ok: [localhost]
2024-05-18 22:04:33,951 p=107239 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:04:33,964 p=107239 u=root n=ansible | skipping: [localhost]
2024-05-18 22:04:33,976 p=107239 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:04:33,986 p=107239 u=root n=ansible | skipping: [localhost]
2024-05-18 22:04:33,999 p=107239 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:04:38,198 p=107239 u=root n=ansible | changed: [localhost]
2024-05-18 22:04:38,208 p=107239 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 22:04:38,225 p=107239 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 22:04:38,234 p=107239 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 22:04:38,246 p=107239 u=root n=ansible | skipping: [localhost]
2024-05-18 22:04:38,255 p=107239 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 22:04:38,267 p=107239 u=root n=ansible | skipping: [localhost]
2024-05-18 22:04:38,284 p=107239 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 22:04:38,301 p=107239 u=root n=ansible | ok: [localhost]
2024-05-18 22:04:38,312 p=107239 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-18 22:04:38,326 p=107239 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-18 22:04:38,334 p=107239 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 22:04:39,241 p=107239 u=root n=ansible | ok: [localhost]
2024-05-18 22:04:39,249 p=107239 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 22:04:39,264 p=107239 u=root n=ansible | skipping: [localhost]
2024-05-18 22:04:39,274 p=107239 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-18 22:04:39,552 p=107239 u=root n=ansible | ok: [localhost]
2024-05-18 22:04:39,563 p=107239 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 22:04:40,552 p=107239 u=root n=ansible | ok: [localhost]
2024-05-18 22:04:40,563 p=107239 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-18 22:04:40,576 p=107239 u=root n=ansible | skipping: [localhost]
2024-05-18 22:04:40,584 p=107239 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-18 22:04:40,601 p=107239 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-18 22:04:40,638 p=107239 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 22:04:40,638 p=107239 u=root n=ansible | localhost                  : ok=10   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2024-05-18 22:05:51,830 p=108642 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:05:51,837 p=108642 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:05:52,800 p=108642 u=root n=ansible | ok: [localhost]
2024-05-18 22:05:52,822 p=108642 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:05:53,834 p=108642 u=root n=ansible | ok: [localhost]
2024-05-18 22:05:53,841 p=108642 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:05:53,854 p=108642 u=root n=ansible | skipping: [localhost]
2024-05-18 22:05:53,868 p=108642 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:05:53,878 p=108642 u=root n=ansible | skipping: [localhost]
2024-05-18 22:05:53,888 p=108642 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:05:56,719 p=108642 u=root n=ansible | changed: [localhost]
2024-05-18 22:05:56,726 p=108642 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 22:05:56,742 p=108642 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 22:05:56,754 p=108642 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 22:05:56,766 p=108642 u=root n=ansible | skipping: [localhost]
2024-05-18 22:05:56,774 p=108642 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 22:05:56,788 p=108642 u=root n=ansible | skipping: [localhost]
2024-05-18 22:05:56,805 p=108642 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 22:05:56,819 p=108642 u=root n=ansible | ok: [localhost]
2024-05-18 22:05:56,828 p=108642 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-18 22:05:56,840 p=108642 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: ~/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-18 22:05:56,852 p=108642 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 22:05:57,734 p=108642 u=root n=ansible | ok: [localhost]
2024-05-18 22:05:57,741 p=108642 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 22:05:57,754 p=108642 u=root n=ansible | skipping: [localhost]
2024-05-18 22:05:57,764 p=108642 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-18 22:05:58,039 p=108642 u=root n=ansible | ok: [localhost]
2024-05-18 22:05:58,049 p=108642 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 22:05:59,075 p=108642 u=root n=ansible | ok: [localhost]
2024-05-18 22:05:59,086 p=108642 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-18 22:05:59,099 p=108642 u=root n=ansible | skipping: [localhost]
2024-05-18 22:05:59,108 p=108642 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-18 22:05:59,126 p=108642 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-18 22:05:59,169 p=108642 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 22:05:59,169 p=108642 u=root n=ansible | localhost                  : ok=10   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2024-05-18 22:09:25,989 p=110271 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:09:25,996 p=110271 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:09:26,947 p=110271 u=root n=ansible | ok: [localhost]
2024-05-18 22:09:26,969 p=110271 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:09:27,943 p=110271 u=root n=ansible | ok: [localhost]
2024-05-18 22:09:27,954 p=110271 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:09:27,965 p=110271 u=root n=ansible | skipping: [localhost]
2024-05-18 22:09:27,974 p=110271 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:09:27,986 p=110271 u=root n=ansible | skipping: [localhost]
2024-05-18 22:09:27,997 p=110271 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:09:31,426 p=110271 u=root n=ansible | changed: [localhost]
2024-05-18 22:09:31,435 p=110271 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 22:09:31,447 p=110271 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 22:09:31,456 p=110271 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 22:09:31,468 p=110271 u=root n=ansible | skipping: [localhost]
2024-05-18 22:09:31,475 p=110271 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 22:09:31,488 p=110271 u=root n=ansible | skipping: [localhost]
2024-05-18 22:09:31,506 p=110271 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 22:09:31,527 p=110271 u=root n=ansible | ok: [localhost]
2024-05-18 22:09:31,544 p=110271 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-18 22:09:31,578 p=110271 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: ~/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-18 22:09:31,601 p=110271 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 22:09:32,525 p=110271 u=root n=ansible | ok: [localhost]
2024-05-18 22:09:32,533 p=110271 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 22:09:32,546 p=110271 u=root n=ansible | skipping: [localhost]
2024-05-18 22:09:32,557 p=110271 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-18 22:09:32,824 p=110271 u=root n=ansible | ok: [localhost]
2024-05-18 22:09:32,833 p=110271 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 22:09:33,808 p=110271 u=root n=ansible | ok: [localhost]
2024-05-18 22:09:33,816 p=110271 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-18 22:09:33,826 p=110271 u=root n=ansible | skipping: [localhost]
2024-05-18 22:09:33,835 p=110271 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-18 22:09:33,851 p=110271 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-18 22:09:33,889 p=110271 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 22:09:33,889 p=110271 u=root n=ansible | localhost                  : ok=10   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2024-05-18 22:14:09,440 p=112022 u=root n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  mapping values are not allowed in this context

The error appears to be in '/home/vinayak/ansible_config/roles/setup/tasks/neovim.yml': line 23, column 9, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

- name: Create a directory on root
    file:
        ^ here

2024-05-18 22:31:18,835 p=112925 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:31:18,841 p=112925 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:31:19,626 p=112925 u=root n=ansible | ok: [localhost]
2024-05-18 22:31:19,646 p=112925 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:31:20,522 p=112925 u=root n=ansible | ok: [localhost]
2024-05-18 22:31:20,529 p=112925 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:31:20,540 p=112925 u=root n=ansible | skipping: [localhost]
2024-05-18 22:31:20,572 p=112925 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:31:20,581 p=112925 u=root n=ansible | skipping: [localhost]
2024-05-18 22:31:20,589 p=112925 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:31:23,670 p=112925 u=root n=ansible | changed: [localhost]
2024-05-18 22:31:23,677 p=112925 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 22:31:23,690 p=112925 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 22:31:23,699 p=112925 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 22:31:23,708 p=112925 u=root n=ansible | skipping: [localhost]
2024-05-18 22:31:23,716 p=112925 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 22:31:23,725 p=112925 u=root n=ansible | skipping: [localhost]
2024-05-18 22:31:23,741 p=112925 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 22:31:23,752 p=112925 u=root n=ansible | ok: [localhost]
2024-05-18 22:31:23,759 p=112925 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-18 22:31:23,771 p=112925 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: ~/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-18 22:31:23,778 p=112925 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 22:31:24,536 p=112925 u=root n=ansible | ok: [localhost]
2024-05-18 22:31:24,543 p=112925 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 22:31:24,552 p=112925 u=root n=ansible | skipping: [localhost]
2024-05-18 22:31:24,560 p=112925 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-18 22:31:24,795 p=112925 u=root n=ansible | ok: [localhost]
2024-05-18 22:31:24,803 p=112925 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 22:31:25,749 p=112925 u=root n=ansible | ok: [localhost]
2024-05-18 22:31:25,756 p=112925 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-18 22:31:25,766 p=112925 u=root n=ansible | skipping: [localhost]
2024-05-18 22:31:25,774 p=112925 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-18 22:31:25,789 p=112925 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-18 22:31:25,823 p=112925 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 22:31:25,823 p=112925 u=root n=ansible | localhost                  : ok=10   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2024-05-18 22:32:50,452 p=114440 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-18 22:32:50,606 p=114440 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:32:50,613 p=114440 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:32:51,371 p=114440 u=root n=ansible | ok: [localhost]
2024-05-18 22:32:51,390 p=114440 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:32:52,258 p=114440 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716051683, "cache_updated": false, "changed": false}
2024-05-18 22:32:52,266 p=114440 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:32:52,276 p=114440 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:32:52,305 p=114440 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:32:52,314 p=114440 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:32:52,326 p=114440 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:33:03,600 p=114440 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716051783, "cache_updated": true, "changed": true}
2024-05-18 22:33:03,607 p=114440 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 22:33:03,620 p=114440 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 22:33:03,628 p=114440 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 22:33:03,638 p=114440 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:33:03,645 p=114440 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 22:33:03,656 p=114440 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:33:03,671 p=114440 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 22:33:03,682 p=114440 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"neovim_config_dir": "~/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-18 22:33:03,692 p=114440 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-18 22:33:03,704 p=114440 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: ~/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-18 22:33:03,711 p=114440 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 22:33:04,467 p=114440 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716051783, "cache_updated": false, "changed": false}
2024-05-18 22:33:04,474 p=114440 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 22:33:04,484 p=114440 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:33:04,492 p=114440 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-18 22:33:04,745 p=114440 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/root/.config/nvim", "size": 4096, "state": "directory", "uid": 0}
2024-05-18 22:33:04,754 p=114440 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 22:33:05,685 p=114440 u=root n=ansible | ok: [localhost] => {"after": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "before": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "changed": false, "remote_url_changed": false}
2024-05-18 22:33:05,693 p=114440 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-18 22:33:05,703 p=114440 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:33:05,711 p=114440 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-18 22:33:05,724 p=114440 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-18 22:33:05,759 p=114440 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 22:33:05,759 p=114440 u=root n=ansible | localhost                  : ok=10   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2024-05-18 22:34:37,238 p=115892 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-18 22:34:37,392 p=115892 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:34:37,398 p=115892 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:34:38,163 p=115892 u=root n=ansible | ok: [localhost]
2024-05-18 22:34:38,213 p=115892 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 22:34:38,213 p=115892 u=root n=ansible | localhost                  : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2024-05-18 22:38:18,549 p=116640 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:38:18,557 p=116640 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:38:19,358 p=116640 u=root n=ansible | ok: [localhost]
2024-05-18 22:38:19,377 p=116640 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:38:20,364 p=116640 u=root n=ansible | ok: [localhost]
2024-05-18 22:38:20,396 p=116640 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:38:20,405 p=116640 u=root n=ansible | skipping: [localhost]
2024-05-18 22:38:20,413 p=116640 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:38:20,425 p=116640 u=root n=ansible | skipping: [localhost]
2024-05-18 22:38:20,432 p=116640 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:38:23,595 p=116640 u=root n=ansible | changed: [localhost]
2024-05-18 22:38:23,602 p=116640 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 22:38:23,615 p=116640 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 22:38:23,625 p=116640 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 22:38:23,635 p=116640 u=root n=ansible | skipping: [localhost]
2024-05-18 22:38:23,642 p=116640 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 22:38:23,652 p=116640 u=root n=ansible | skipping: [localhost]
2024-05-18 22:38:23,666 p=116640 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 22:38:23,679 p=116640 u=root n=ansible | ok: [localhost]
2024-05-18 22:38:23,687 p=116640 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-18 22:38:23,699 p=116640 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: ~/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-18 22:38:23,707 p=116640 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 22:38:24,524 p=116640 u=root n=ansible | ok: [localhost]
2024-05-18 22:38:24,532 p=116640 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 22:38:24,545 p=116640 u=root n=ansible | skipping: [localhost]
2024-05-18 22:38:24,552 p=116640 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-18 22:38:24,798 p=116640 u=root n=ansible | ok: [localhost]
2024-05-18 22:38:24,806 p=116640 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 22:38:25,718 p=116640 u=root n=ansible | ok: [localhost]
2024-05-18 22:38:25,726 p=116640 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-18 22:38:25,736 p=116640 u=root n=ansible | skipping: [localhost]
2024-05-18 22:38:25,746 p=116640 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-18 22:38:25,759 p=116640 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-18 22:38:25,791 p=116640 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 22:38:25,791 p=116640 u=root n=ansible | localhost                  : ok=10   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2024-05-18 22:38:29,661 p=117913 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-18 22:38:29,803 p=117913 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:38:29,810 p=117913 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:38:30,597 p=117913 u=root n=ansible | ok: [localhost]
2024-05-18 22:38:30,615 p=117913 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:38:31,497 p=117913 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716052103, "cache_updated": false, "changed": false}
2024-05-18 22:38:31,504 p=117913 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:38:31,516 p=117913 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:38:31,549 p=117913 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:38:31,560 p=117913 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:38:31,568 p=117913 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:38:34,546 p=117913 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716052114, "cache_updated": true, "changed": true}
2024-05-18 22:38:34,554 p=117913 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 22:38:34,567 p=117913 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 22:38:34,576 p=117913 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 22:38:34,585 p=117913 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:38:34,597 p=117913 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 22:38:34,607 p=117913 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:38:34,623 p=117913 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 22:38:34,633 p=117913 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"neovim_config_dir": "~/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-18 22:38:34,640 p=117913 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-18 22:38:34,652 p=117913 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: ~/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-18 22:38:34,659 p=117913 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 22:38:35,488 p=117913 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716052114, "cache_updated": false, "changed": false}
2024-05-18 22:38:35,498 p=117913 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 22:38:35,509 p=117913 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:38:35,517 p=117913 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-18 22:38:35,764 p=117913 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/root/.config/nvim", "size": 4096, "state": "directory", "uid": 0}
2024-05-18 22:38:35,773 p=117913 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 22:38:36,721 p=117913 u=root n=ansible | ok: [localhost] => {"after": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "before": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "changed": false, "remote_url_changed": false}
2024-05-18 22:38:36,731 p=117913 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-18 22:38:36,745 p=117913 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:38:36,753 p=117913 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-18 22:38:36,770 p=117913 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-18 22:38:36,808 p=117913 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 22:38:36,808 p=117913 u=root n=ansible | localhost                  : ok=10   changed=1    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2024-05-18 22:41:31,951 p=119689 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-18 22:41:32,090 p=119689 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:41:32,096 p=119689 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:41:32,917 p=119689 u=root n=ansible | ok: [localhost]
2024-05-18 22:41:32,937 p=119689 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:41:33,795 p=119689 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716052114, "cache_updated": false, "changed": false}
2024-05-18 22:41:33,827 p=119689 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:41:33,837 p=119689 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:41:33,844 p=119689 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:41:33,855 p=119689 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:41:33,862 p=119689 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:42:32,681 p=119689 u=root n=ansible |  [ERROR]: User interrupted execution

2024-05-18 22:42:35,180 p=120169 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-18 22:42:35,319 p=120169 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:42:35,328 p=120169 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:42:36,140 p=120169 u=root n=ansible | ok: [localhost]
2024-05-18 22:42:36,162 p=120169 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:42:37,151 p=120169 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716052114, "cache_updated": false, "changed": false}
2024-05-18 22:42:37,158 p=120169 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:42:37,168 p=120169 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:42:37,177 p=120169 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:42:37,187 p=120169 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:42:37,194 p=120169 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:43:23,080 p=120169 u=root n=ansible |  [ERROR]: User interrupted execution

2024-05-18 22:44:46,143 p=120733 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-18 22:44:46,280 p=120733 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:44:46,287 p=120733 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:44:47,087 p=120733 u=root n=ansible | ok: [localhost]
2024-05-18 22:44:47,108 p=120733 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:44:48,006 p=120733 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716052114, "cache_updated": false, "changed": false}
2024-05-18 22:44:48,038 p=120733 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:44:48,048 p=120733 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:44:48,056 p=120733 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:44:48,066 p=120733 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:44:48,073 p=120733 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:44:50,719 p=120733 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716052490, "cache_updated": true, "changed": true}
2024-05-18 22:44:50,728 p=120733 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 22:44:50,741 p=120733 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 22:44:50,749 p=120733 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 22:44:50,759 p=120733 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:44:50,766 p=120733 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 22:44:50,777 p=120733 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:44:50,792 p=120733 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 22:44:50,804 p=120733 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-18 22:44:50,814 p=120733 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-18 22:44:50,825 p=120733 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-18 22:44:50,833 p=120733 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 22:44:51,632 p=120733 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716052490, "cache_updated": false, "changed": false}
2024-05-18 22:44:51,639 p=120733 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 22:44:51,649 p=120733 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:44:51,656 p=120733 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-18 22:44:51,905 p=120733 u=root n=ansible | changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 0}
2024-05-18 22:44:51,913 p=120733 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 22:44:52,185 p=120733 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": false, "cmd": "/usr/bin/git ls-remote https://github.com/itsvinayak/TurboNvimConfig.nvim.git -h refs/heads/HEAD", "msg": "fatal: invalid gitfile format: /home/vinayak/.git", "rc": 128, "stderr": "fatal: invalid gitfile format: /home/vinayak/.git\n", "stderr_lines": ["fatal: invalid gitfile format: /home/vinayak/.git"], "stdout": "", "stdout_lines": []}
2024-05-18 22:44:52,186 p=120733 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 22:44:52,186 p=120733 u=root n=ansible | localhost                  : ok=8    changed=2    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2024-05-18 22:46:34,471 p=122128 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-18 22:46:34,609 p=122128 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:46:34,618 p=122128 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:46:35,428 p=122128 u=root n=ansible | ok: [localhost]
2024-05-18 22:46:35,447 p=122128 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:46:36,336 p=122128 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716052490, "cache_updated": false, "changed": false}
2024-05-18 22:46:36,365 p=122128 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:46:36,374 p=122128 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:46:36,383 p=122128 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:46:36,393 p=122128 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:46:36,400 p=122128 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:47:36,876 p=122128 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": false, "msg": "Failed to lock apt for exclusive operation: Failed to lock directory /var/lib/apt/lists/: E:Could not open lock file /var/lib/apt/lists/lock - open (13: Permission denied)"}
2024-05-18 22:47:36,884 p=122128 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 22:47:36,884 p=122128 u=root n=ansible | localhost                  : ok=2    changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2024-05-18 22:51:00,244 p=123208 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-18 22:51:00,444 p=123208 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:51:00,452 p=123208 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:51:01,496 p=123208 u=root n=ansible | ok: [localhost]
2024-05-18 22:51:01,520 p=123208 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:51:02,568 p=123208 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716052490, "cache_updated": false, "changed": false}
2024-05-18 22:51:02,580 p=123208 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:51:02,591 p=123208 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:51:02,599 p=123208 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:51:02,612 p=123208 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:51:02,620 p=123208 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:51:08,409 p=123208 u=root n=ansible |  [ERROR]: User interrupted execution

2024-05-18 22:52:04,659 p=123548 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-18 22:52:04,823 p=123548 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:52:04,830 p=123548 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:52:05,823 p=123548 u=root n=ansible | ok: [localhost]
2024-05-18 22:52:05,845 p=123548 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:52:06,904 p=123548 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716052490, "cache_updated": false, "changed": false}
2024-05-18 22:52:06,913 p=123548 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:52:06,929 p=123548 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:52:06,939 p=123548 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:52:06,951 p=123548 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:52:06,962 p=123548 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:52:24,505 p=123548 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716052943, "cache_updated": true, "changed": true}
2024-05-18 22:52:24,513 p=123548 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 22:52:24,542 p=123548 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 22:52:24,550 p=123548 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 22:52:24,563 p=123548 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:52:24,571 p=123548 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 22:52:24,584 p=123548 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:52:24,603 p=123548 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 22:52:24,615 p=123548 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-18 22:52:24,626 p=123548 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-18 22:52:24,646 p=123548 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-18 22:52:24,655 p=123548 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 22:52:25,607 p=123548 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716052943, "cache_updated": false, "changed": false}
2024-05-18 22:52:25,615 p=123548 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 22:52:25,630 p=123548 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:52:25,639 p=123548 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-18 22:52:25,924 p=123548 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 0}
2024-05-18 22:52:25,932 p=123548 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 22:52:26,273 p=123548 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": false, "cmd": "/usr/bin/git ls-remote https://github.com/itsvinayak/TurboNvimConfig.nvim.git -h refs/heads/HEAD", "msg": "fatal: invalid gitfile format: /home/vinayak/.git", "rc": 128, "stderr": "fatal: invalid gitfile format: /home/vinayak/.git\n", "stderr_lines": ["fatal: invalid gitfile format: /home/vinayak/.git"], "stdout": "", "stdout_lines": []}
2024-05-18 22:52:26,274 p=123548 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 22:52:26,274 p=123548 u=root n=ansible | localhost                  : ok=8    changed=1    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2024-05-18 22:53:43,989 p=124931 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-18 22:53:44,138 p=124931 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:53:44,148 p=124931 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:53:44,950 p=124931 u=root n=ansible | ok: [localhost]
2024-05-18 22:53:44,968 p=124931 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:53:45,877 p=124931 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716052943, "cache_updated": false, "changed": false}
2024-05-18 22:53:45,905 p=124931 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:53:45,919 p=124931 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:53:45,927 p=124931 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:53:45,937 p=124931 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:53:45,945 p=124931 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:53:50,095 p=124931 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716053029, "cache_updated": true, "changed": true}
2024-05-18 22:53:50,103 p=124931 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 22:53:50,119 p=124931 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 22:53:50,127 p=124931 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 22:53:50,136 p=124931 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:53:50,146 p=124931 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 22:53:50,155 p=124931 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:53:50,171 p=124931 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 22:53:50,186 p=124931 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-18 22:53:50,195 p=124931 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-18 22:53:50,210 p=124931 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-18 22:53:50,221 p=124931 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 22:53:51,039 p=124931 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716053029, "cache_updated": false, "changed": false}
2024-05-18 22:53:51,048 p=124931 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 22:53:51,057 p=124931 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:53:51,066 p=124931 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-18 22:53:51,329 p=124931 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 0}
2024-05-18 22:53:51,337 p=124931 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 22:53:54,128 p=124931 u=root n=ansible | changed: [localhost] => {"after": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "before": null, "changed": true}
2024-05-18 22:53:54,136 p=124931 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-18 22:53:54,148 p=124931 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:53:54,155 p=124931 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-18 22:53:54,169 p=124931 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-18 22:53:54,201 p=124931 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 22:53:54,201 p=124931 u=root n=ansible | localhost                  : ok=10   changed=2    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2024-05-18 22:57:09,339 p=128845 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-18 22:57:09,493 p=128845 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:57:09,502 p=128845 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:57:10,282 p=128845 u=root n=ansible | ok: [localhost]
2024-05-18 22:57:10,303 p=128845 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:57:11,196 p=128845 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716053029, "cache_updated": false, "changed": false}
2024-05-18 22:57:11,226 p=128845 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:57:11,238 p=128845 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:57:11,245 p=128845 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:57:11,255 p=128845 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:57:11,262 p=128845 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:57:14,233 p=128845 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716053233, "cache_updated": true, "changed": true}
2024-05-18 22:57:14,240 p=128845 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 22:57:14,253 p=128845 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 22:57:14,260 p=128845 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 22:57:14,273 p=128845 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:57:14,281 p=128845 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 22:57:14,292 p=128845 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:57:14,309 p=128845 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 22:57:14,319 p=128845 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-18 22:57:14,326 p=128845 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-18 22:57:14,342 p=128845 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-18 22:57:14,350 p=128845 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 22:57:15,144 p=128845 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716053233, "cache_updated": false, "changed": false}
2024-05-18 22:57:15,152 p=128845 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 22:57:15,162 p=128845 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:57:15,170 p=128845 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-18 22:57:15,183 p=128845 u=root n=ansible | fatal: [localhost]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'local_user' is undefined. 'local_user' is undefined\n\nThe error appears to be in '/home/vinayak/ansible_config/roles/setup/tasks/neovim.yml': line 17, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Ensure Neovim configuration directory exists\n  ^ here\n"}
2024-05-18 22:57:15,185 p=128845 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 22:57:15,185 p=128845 u=root n=ansible | localhost                  : ok=7    changed=1    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2024-05-18 22:58:31,143 p=130107 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-18 22:58:31,283 p=130107 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-18 22:58:31,292 p=130107 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-18 22:58:32,109 p=130107 u=root n=ansible | ok: [localhost]
2024-05-18 22:58:32,130 p=130107 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-18 22:58:33,099 p=130107 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716053233, "cache_updated": false, "changed": false}
2024-05-18 22:58:33,128 p=130107 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-18 22:58:33,137 p=130107 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:58:33,145 p=130107 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-18 22:58:33,156 p=130107 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:58:33,165 p=130107 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-18 22:58:35,506 p=130107 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716053315, "cache_updated": true, "changed": true}
2024-05-18 22:58:35,513 p=130107 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-18 22:58:35,531 p=130107 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-18 22:58:35,538 p=130107 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-18 22:58:35,548 p=130107 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:58:35,557 p=130107 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-18 22:58:35,566 p=130107 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:58:35,580 p=130107 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-18 22:58:35,594 p=130107 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-18 22:58:35,602 p=130107 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-18 22:58:35,616 p=130107 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-18 22:58:35,626 p=130107 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-18 22:58:36,401 p=130107 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716053315, "cache_updated": false, "changed": false}
2024-05-18 22:58:36,408 p=130107 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-18 22:58:36,417 p=130107 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-18 22:58:36,426 p=130107 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-18 22:58:36,665 p=130107 u=root n=ansible | changed: [localhost] => {"changed": true, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-18 22:58:36,673 p=130107 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-18 22:58:39,321 p=130107 u=root n=ansible | changed: [localhost] => {"after": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "before": null, "changed": true}
2024-05-18 22:58:39,329 p=130107 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-18 22:58:39,339 p=130107 u=root n=ansible | skipping: [localhost] => {}
2024-05-18 22:58:39,346 p=130107 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-18 22:58:39,365 p=130107 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-18 22:58:39,398 p=130107 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-18 22:58:39,398 p=130107 u=root n=ansible | localhost                  : ok=10   changed=3    unreachable=0    failed=0    skipped=6    rescued=0    ignored=0   
2024-05-19 17:08:40,359 p=174996 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-19 17:08:40,549 p=174996 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-19 17:08:40,559 p=174996 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-19 17:08:41,372 p=174996 u=root n=ansible | ok: [localhost]
2024-05-19 17:08:41,392 p=174996 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-19 17:08:41,999 p=174996 u=root n=ansible |  [ERROR]: User interrupted execution

2024-05-19 17:16:35,389 p=177161 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-19 17:16:35,510 p=177161 u=root n=ansible | ERROR! Unable to retrieve file contents
Could not find or access '/home/vinayak/ansible_config/cli-tools.yml' on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2024-05-19 17:17:08,577 p=177361 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-19 17:17:08,704 p=177361 u=root n=ansible | ERROR! Unable to retrieve file contents
Could not find or access '/home/vinayak/ansible_config/cli_tools.yml' on the Ansible Controller.
If you are using a module and expect the file to exist on the remote, see the remote_src option
2024-05-19 17:18:30,066 p=177719 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-19 17:18:30,199 p=177719 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-19 17:18:30,207 p=177719 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-19 17:18:30,974 p=177719 u=root n=ansible | ok: [localhost]
2024-05-19 17:18:30,993 p=177719 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-19 17:18:31,815 p=177719 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716118683, "cache_updated": false, "changed": false}
2024-05-19 17:18:31,824 p=177719 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-19 17:18:31,834 p=177719 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:18:31,872 p=177719 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-19 17:18:31,881 p=177719 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:18:31,890 p=177719 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-19 17:18:34,623 p=177719 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716119314, "cache_updated": true, "changed": true}
2024-05-19 17:18:34,631 p=177719 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-19 17:18:34,644 p=177719 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-19 17:18:34,651 p=177719 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-19 17:18:34,660 p=177719 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:18:34,667 p=177719 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-19 17:18:34,676 p=177719 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:18:34,698 p=177719 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-19 17:18:34,712 p=177719 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "zsh", "tmux"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-19 17:18:34,720 p=177719 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-19 17:18:34,731 p=177719 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-19 17:18:34,739 p=177719 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-19 17:18:35,461 p=177719 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716119314, "cache_updated": false, "changed": false}
2024-05-19 17:18:35,468 p=177719 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-19 17:18:35,479 p=177719 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:18:35,487 p=177719 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-19 17:18:35,730 p=177719 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-19 17:18:35,738 p=177719 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-19 17:18:36,699 p=177719 u=root n=ansible | ok: [localhost] => {"after": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "before": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "changed": false, "remote_url_changed": false}
2024-05-19 17:18:36,707 p=177719 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-19 17:18:36,716 p=177719 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:18:36,724 p=177719 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-19 17:18:36,737 p=177719 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-19 17:18:36,746 p=177719 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *********************************************************************************
2024-05-19 17:18:36,759 p=177719 u=root n=ansible | fatal: [localhost]: FAILED! => {"msg": "'cli_tool_list' is undefined. 'cli_tool_list' is undefined"}
2024-05-19 17:18:36,761 p=177719 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-19 17:18:36,761 p=177719 u=root n=ansible | localhost                  : ok=10   changed=1    unreachable=0    failed=1    skipped=6    rescued=0    ignored=0   
2024-05-19 17:20:07,306 p=179604 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-19 17:20:07,440 p=179604 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-19 17:20:07,448 p=179604 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-19 17:20:08,208 p=179604 u=root n=ansible | ok: [localhost]
2024-05-19 17:20:08,227 p=179604 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-19 17:20:09,053 p=179604 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716119314, "cache_updated": false, "changed": false}
2024-05-19 17:20:09,060 p=179604 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-19 17:20:09,069 p=179604 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:20:09,098 p=179604 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-19 17:20:09,107 p=179604 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:20:09,115 p=179604 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-19 17:20:11,677 p=179604 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716119411, "cache_updated": true, "changed": true}
2024-05-19 17:20:11,684 p=179604 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-19 17:20:11,697 p=179604 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-19 17:20:11,704 p=179604 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-19 17:20:11,713 p=179604 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:20:11,720 p=179604 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-19 17:20:11,731 p=179604 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:20:11,745 p=179604 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-19 17:20:11,755 p=179604 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "zsh", "tmux"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-19 17:20:11,763 p=179604 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-19 17:20:11,773 p=179604 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-19 17:20:11,781 p=179604 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-19 17:20:12,516 p=179604 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716119411, "cache_updated": false, "changed": false}
2024-05-19 17:20:12,523 p=179604 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-19 17:20:12,534 p=179604 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:20:12,542 p=179604 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-19 17:20:12,775 p=179604 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-19 17:20:12,783 p=179604 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-19 17:20:13,858 p=179604 u=root n=ansible | ok: [localhost] => {"after": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "before": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "changed": false, "remote_url_changed": false}
2024-05-19 17:20:13,866 p=179604 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-19 17:20:13,875 p=179604 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:20:13,883 p=179604 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-19 17:20:13,897 p=179604 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-19 17:20:13,905 p=179604 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *********************************************************************************
2024-05-19 17:20:14,672 p=179604 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716119411, "cache_updated": false, "changed": false, "item": "git"}
2024-05-19 17:20:15,375 p=179604 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716119411, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-19 17:20:16,078 p=179604 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716119411, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-19 17:20:16,785 p=179604 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716119411, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-19 17:20:17,526 p=179604 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716119411, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-19 17:20:18,268 p=179604 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716119411, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-19 17:20:18,968 p=179604 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716119411, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-19 17:20:19,683 p=179604 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716119411, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-19 17:20:20,451 p=179604 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716119411, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-19 17:20:21,159 p=179604 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716119411, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-19 17:20:27,774 p=179604 u=root n=ansible | changed: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716119411, "cache_updated": false, "changed": true, "item": "exa", "stderr": "", "stderr_lines": [], "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nThe following NEW packages will be installed:\n  exa\n0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 347 kB of archives.\nAfter this operation, 926 kB of additional disk space will be used.\nGet:1 http://in.archive.ubuntu.com/ubuntu mantic/universe amd64 exa amd64 0.10.1-4 [347 kB]\nFetched 347 kB in 2s (193 kB/s)\nSelecting previously unselected package exa.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 522401 files and directories currently installed.)\r\nPreparing to unpack .../exa_0.10.1-4_amd64.deb ...\r\nUnpacking exa (0.10.1-4) ...\r\nSetting up exa (0.10.1-4) ...\r\nProcessing triggers for man-db (2.11.2-3) ...\r\n", "stdout_lines": ["Reading package lists...", "Building dependency tree...", "Reading state information...", "The following NEW packages will be installed:", "  exa", "0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.", "Need to get 347 kB of archives.", "After this operation, 926 kB of additional disk space will be used.", "Get:1 http://in.archive.ubuntu.com/ubuntu mantic/universe amd64 exa amd64 0.10.1-4 [347 kB]", "Fetched 347 kB in 2s (193 kB/s)", "Selecting previously unselected package exa.", "(Reading database ... ", "(Reading database ... 5%", "(Reading database ... 10%", "(Reading database ... 15%", "(Reading database ... 20%", "(Reading database ... 25%", "(Reading database ... 30%", "(Reading database ... 35%", "(Reading database ... 40%", "(Reading database ... 45%", "(Reading database ... 50%", "(Reading database ... 55%", "(Reading database ... 60%", "(Reading database ... 65%", "(Reading database ... 70%", "(Reading database ... 75%", "(Reading database ... 80%", "(Reading database ... 85%", "(Reading database ... 90%", "(Reading database ... 95%", "(Reading database ... 100%", "(Reading database ... 522401 files and directories currently installed.)", "Preparing to unpack .../exa_0.10.1-4_amd64.deb ...", "Unpacking exa (0.10.1-4) ...", "Setting up exa (0.10.1-4) ...", "Processing triggers for man-db (2.11.2-3) ..."]}
2024-05-19 17:20:28,482 p=179604 u=root n=ansible | ok: [localhost] => (item=zsh) => {"ansible_loop_var": "item", "cache_update_time": 1716119411, "cache_updated": false, "changed": false, "item": "zsh"}
2024-05-19 17:20:29,199 p=179604 u=root n=ansible | ok: [localhost] => (item=tmux) => {"ansible_loop_var": "item", "cache_update_time": 1716119411, "cache_updated": false, "changed": false, "item": "tmux"}
2024-05-19 17:20:29,209 p=179604 u=root n=ansible | TASK [setup : install all command line tool on macOS] ************************************************************************************************
2024-05-19 17:20:29,223 p=179604 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-19 17:20:29,227 p=179604 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-19 17:20:29,233 p=179604 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-19 17:20:29,237 p=179604 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-19 17:20:29,238 p=179604 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-19 17:20:29,238 p=179604 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-19 17:20:29,239 p=179604 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-19 17:20:29,239 p=179604 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-19 17:20:29,239 p=179604 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-19 17:20:29,240 p=179604 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-19 17:20:29,240 p=179604 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-19 17:20:29,242 p=179604 u=root n=ansible | skipping: [localhost] => (item=zsh)  => {"ansible_loop_var": "item", "changed": false, "item": "zsh", "skip_reason": "Conditional result was False"}
2024-05-19 17:20:29,243 p=179604 u=root n=ansible | skipping: [localhost] => (item=tmux)  => {"ansible_loop_var": "item", "changed": false, "item": "tmux", "skip_reason": "Conditional result was False"}
2024-05-19 17:20:29,244 p=179604 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-19 17:20:29,275 p=179604 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-19 17:20:29,275 p=179604 u=root n=ansible | localhost                  : ok=11   changed=2    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2024-05-19 17:37:28,057 p=184847 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-19 17:37:28,195 p=184847 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-19 17:37:28,203 p=184847 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-19 17:37:29,007 p=184847 u=root n=ansible | ok: [localhost]
2024-05-19 17:37:29,025 p=184847 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-19 17:37:29,864 p=184847 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716119411, "cache_updated": false, "changed": false}
2024-05-19 17:37:29,891 p=184847 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-19 17:37:29,900 p=184847 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:37:29,908 p=184847 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-19 17:37:29,918 p=184847 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:37:29,926 p=184847 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-19 17:37:32,951 p=184847 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716120452, "cache_updated": true, "changed": true}
2024-05-19 17:37:32,958 p=184847 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-19 17:37:32,972 p=184847 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-19 17:37:32,981 p=184847 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-19 17:37:32,994 p=184847 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:37:33,002 p=184847 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-19 17:37:33,013 p=184847 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:37:33,030 p=184847 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-19 17:37:33,045 p=184847 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "pip_tools": ["thefuck", "pyright", "pylint", "black"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-19 17:37:33,053 p=184847 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-19 17:37:33,066 p=184847 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-19 17:37:33,077 p=184847 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-19 17:37:33,824 p=184847 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716120452, "cache_updated": false, "changed": false}
2024-05-19 17:37:33,831 p=184847 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-19 17:37:33,840 p=184847 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:37:33,848 p=184847 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-19 17:37:34,078 p=184847 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-19 17:37:34,086 p=184847 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-19 17:37:35,114 p=184847 u=root n=ansible | ok: [localhost] => {"after": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "before": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "changed": false, "remote_url_changed": false}
2024-05-19 17:37:35,122 p=184847 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-19 17:37:35,131 p=184847 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:37:35,139 p=184847 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-19 17:37:35,152 p=184847 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-19 17:37:35,160 p=184847 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *********************************************************************************
2024-05-19 17:37:35,887 p=184847 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716120452, "cache_updated": false, "changed": false, "item": "git"}
2024-05-19 17:37:36,624 p=184847 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716120452, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-19 17:37:37,390 p=184847 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716120452, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-19 17:37:38,182 p=184847 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716120452, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-19 17:37:38,902 p=184847 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716120452, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-19 17:37:39,627 p=184847 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716120452, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-19 17:37:40,351 p=184847 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716120452, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-19 17:37:41,071 p=184847 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716120452, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-19 17:37:41,792 p=184847 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716120452, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-19 17:37:42,520 p=184847 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716120452, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-19 17:37:43,237 p=184847 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716120452, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-19 17:37:43,962 p=184847 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716120452, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-19 17:37:44,675 p=184847 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716120452, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-19 17:37:45,396 p=184847 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716120452, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-19 17:37:46,146 p=184847 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716120452, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-19 17:37:46,154 p=184847 u=root n=ansible | TASK [setup : install all command line tool on macOS] ************************************************************************************************
2024-05-19 17:37:46,166 p=184847 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-19 17:37:46,171 p=184847 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-19 17:37:46,177 p=184847 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-19 17:37:46,182 p=184847 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-19 17:37:46,182 p=184847 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-19 17:37:46,182 p=184847 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-19 17:37:46,182 p=184847 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-19 17:37:46,182 p=184847 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-19 17:37:46,183 p=184847 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-19 17:37:46,183 p=184847 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-19 17:37:46,183 p=184847 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-19 17:37:46,189 p=184847 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-19 17:37:46,189 p=184847 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-19 17:37:46,190 p=184847 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-19 17:37:46,190 p=184847 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-19 17:37:46,190 p=184847 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-19 17:37:46,197 p=184847 u=root n=ansible | TASK [setup : install python tools] ******************************************************************************************************************
2024-05-19 17:37:46,913 p=184847 u=root n=ansible | failed: [localhost] (item=thefuck) => {"ansible_loop_var": "item", "changed": false, "cmd": ["/usr/bin/python3", "-m", "pip.__main__", "install", "thefuck"], "item": "thefuck", "msg": "\n:stderr: error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.\n"}
2024-05-19 17:37:47,367 p=184847 u=root n=ansible | failed: [localhost] (item=pyright) => {"ansible_loop_var": "item", "changed": false, "cmd": ["/usr/bin/python3", "-m", "pip.__main__", "install", "pyright"], "item": "pyright", "msg": "\n:stderr: error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.\n"}
2024-05-19 17:37:47,818 p=184847 u=root n=ansible | failed: [localhost] (item=pylint) => {"ansible_loop_var": "item", "changed": false, "cmd": ["/usr/bin/python3", "-m", "pip.__main__", "install", "pylint"], "item": "pylint", "msg": "\n:stderr: error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.\n"}
2024-05-19 17:37:48,283 p=184847 u=root n=ansible | failed: [localhost] (item=black) => {"ansible_loop_var": "item", "changed": false, "cmd": ["/usr/bin/python3", "-m", "pip.__main__", "install", "black"], "item": "black", "msg": "\n:stderr: error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.\n"}
2024-05-19 17:37:48,284 p=184847 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-19 17:37:48,284 p=184847 u=root n=ansible | localhost                  : ok=11   changed=1    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-19 17:39:39,001 p=187089 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-19 17:39:39,136 p=187089 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-19 17:39:39,143 p=187089 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-19 17:39:39,923 p=187089 u=root n=ansible | ok: [localhost]
2024-05-19 17:39:39,944 p=187089 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-19 17:39:40,754 p=187089 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716120452, "cache_updated": false, "changed": false}
2024-05-19 17:39:40,782 p=187089 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-19 17:39:40,791 p=187089 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:39:40,799 p=187089 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-19 17:39:40,809 p=187089 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:39:40,815 p=187089 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-19 17:39:43,317 p=187089 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716120582, "cache_updated": true, "changed": true}
2024-05-19 17:39:43,324 p=187089 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-19 17:39:43,336 p=187089 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-19 17:39:43,343 p=187089 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-19 17:39:43,353 p=187089 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:39:43,360 p=187089 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-19 17:39:43,369 p=187089 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:39:43,382 p=187089 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-19 17:39:43,394 p=187089 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "pip_tools": ["thefuck", "pyright", "pylint", "black"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-19 17:39:43,402 p=187089 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-19 17:39:43,412 p=187089 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-19 17:39:43,421 p=187089 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-19 17:39:44,131 p=187089 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716120582, "cache_updated": false, "changed": false}
2024-05-19 17:39:44,139 p=187089 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-19 17:39:44,149 p=187089 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:39:44,157 p=187089 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-19 17:39:44,391 p=187089 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-19 17:39:44,399 p=187089 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-19 17:39:45,391 p=187089 u=root n=ansible | ok: [localhost] => {"after": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "before": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "changed": false, "remote_url_changed": false}
2024-05-19 17:39:45,398 p=187089 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-19 17:39:45,408 p=187089 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:39:45,416 p=187089 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-19 17:39:45,429 p=187089 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-19 17:39:45,438 p=187089 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *********************************************************************************
2024-05-19 17:39:46,163 p=187089 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716120582, "cache_updated": false, "changed": false, "item": "git"}
2024-05-19 17:39:46,866 p=187089 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716120582, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-19 17:39:47,620 p=187089 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716120582, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-19 17:39:48,351 p=187089 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716120582, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-19 17:39:49,056 p=187089 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716120582, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-19 17:39:49,764 p=187089 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716120582, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-19 17:39:50,467 p=187089 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716120582, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-19 17:39:51,169 p=187089 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716120582, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-19 17:39:51,867 p=187089 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716120582, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-19 17:39:52,585 p=187089 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716120582, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-19 17:39:53,298 p=187089 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716120582, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-19 17:39:53,994 p=187089 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716120582, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-19 17:39:54,707 p=187089 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716120582, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-19 17:39:55,409 p=187089 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716120582, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-19 17:39:56,105 p=187089 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716120582, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-19 17:40:12,626 p=187089 u=root n=ansible | changed: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716120582, "cache_updated": false, "changed": true, "item": "python3-full", "stderr": "", "stderr_lines": [], "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\nThe following additional packages will be installed:\n  2to3 idle idle-python3.11 libpython3.11-testsuite net-tools python3-doc\n  python3-examples python3.11-doc python3.11-examples python3.11-full\nThe following NEW packages will be installed:\n  2to3 idle idle-python3.11 libpython3.11-testsuite net-tools python3-doc\n  python3-examples python3-full python3.11-doc python3.11-examples\n  python3.11-full\n0 upgraded, 11 newly installed, 0 to remove and 0 not upgraded.\nNeed to get 16.9 MB of archives.\nAfter this operation, 105 MB of additional disk space will be used.\nGet:1 http://in.archive.ubuntu.com/ubuntu mantic/universe amd64 2to3 all 3.11.4-5 [10.5 kB]\nGet:2 http://in.archive.ubuntu.com/ubuntu mantic/universe amd64 idle-python3.11 all 3.11.6-3 [340 kB]\nGet:3 http://in.archive.ubuntu.com/ubuntu mantic/universe amd64 idle all 3.11.4-5 [2726 B]\nGet:4 http://in.archive.ubuntu.com/ubuntu mantic/main amd64 net-tools amd64 2.10-0.1ubuntu3 [204 kB]\nGet:5 http://in.archive.ubuntu.com/ubuntu mantic/universe amd64 libpython3.11-testsuite all 3.11.6-3 [3560 kB]\nGet:6 http://in.archive.ubuntu.com/ubuntu mantic/main amd64 python3.11-doc all 3.11.6-3 [11.9 MB]\nGet:7 http://in.archive.ubuntu.com/ubuntu mantic/main amd64 python3-doc all 3.11.4-5 [9722 B]\nGet:8 http://in.archive.ubuntu.com/ubuntu mantic/main amd64 python3.11-examples all 3.11.6-3 [819 kB]\nGet:9 http://in.archive.ubuntu.com/ubuntu mantic/main amd64 python3-examples all 3.11.4-5 [878 B]\nGet:10 http://in.archive.ubuntu.com/ubuntu mantic/universe amd64 python3.11-full amd64 3.11.6-3 [1114 B]\nGet:11 http://in.archive.ubuntu.com/ubuntu mantic/universe amd64 python3-full amd64 3.11.4-5 [1164 B]\nFetched 16.9 MB in 5s (3307 kB/s)\nSelecting previously unselected package 2to3.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 522410 files and directories currently installed.)\r\nPreparing to unpack .../00-2to3_3.11.4-5_all.deb ...\r\nUnpacking 2to3 (3.11.4-5) ...\r\nSelecting previously unselected package idle-python3.11.\r\nPreparing to unpack .../01-idle-python3.11_3.11.6-3_all.deb ...\r\nUnpacking idle-python3.11 (3.11.6-3) ...\r\nSelecting previously unselected package idle.\r\nPreparing to unpack .../02-idle_3.11.4-5_all.deb ...\r\nUnpacking idle (3.11.4-5) ...\r\nSelecting previously unselected package net-tools.\r\nPreparing to unpack .../03-net-tools_2.10-0.1ubuntu3_amd64.deb ...\r\nUnpacking net-tools (2.10-0.1ubuntu3) ...\r\nSelecting previously unselected package libpython3.11-testsuite.\r\nPreparing to unpack .../04-libpython3.11-testsuite_3.11.6-3_all.deb ...\r\nUnpacking libpython3.11-testsuite (3.11.6-3) ...\r\nSelecting previously unselected package python3.11-doc.\r\nPreparing to unpack .../05-python3.11-doc_3.11.6-3_all.deb ...\r\nUnpacking python3.11-doc (3.11.6-3) ...\r\nSelecting previously unselected package python3-doc.\r\nPreparing to unpack .../06-python3-doc_3.11.4-5_all.deb ...\r\nUnpacking python3-doc (3.11.4-5) ...\r\nSelecting previously unselected package python3.11-examples.\r\nPreparing to unpack .../07-python3.11-examples_3.11.6-3_all.deb ...\r\nUnpacking python3.11-examples (3.11.6-3) ...\r\nSelecting previously unselected package python3-examples.\r\nPreparing to unpack .../08-python3-examples_3.11.4-5_all.deb ...\r\nUnpacking python3-examples (3.11.4-5) ...\r\nSelecting previously unselected package python3.11-full.\r\nPreparing to unpack .../09-python3.11-full_3.11.6-3_amd64.deb ...\r\nUnpacking python3.11-full (3.11.6-3) ...\r\nSelecting previously unselected package python3-full.\r\nPreparing to unpack .../10-python3-full_3.11.4-5_amd64.deb ...\r\nUnpacking python3-full (3.11.4-5) ...\r\nSetting up net-tools (2.10-0.1ubuntu3) ...\r\nSetting up libpython3.11-testsuite (3.11.6-3) ...\r\nSetting up 2to3 (3.11.4-5) ...\r\nSetting up python3.11-doc (3.11.6-3) ...\r\nSetting up python3.11-examples (3.11.6-3) ...\r\nSetting up idle-python3.11 (3.11.6-3) ...\r\nSetting up python3-doc (3.11.4-5) ...\r\nSetting up idle (3.11.4-5) ...\r\nSetting up python3-examples (3.11.4-5) ...\r\nSetting up python3.11-full (3.11.6-3) ...\r\nSetting up python3-full (3.11.4-5) ...\r\nProcessing triggers for install-info (7.0.3-2) ...\r\nProcessing triggers for mailcap (3.70+nmu1ubuntu1) ...\r\nProcessing triggers for bamfdaemon (0.5.6+22.04.20220217-0ubuntu1) ...\r\nRebuilding /usr/share/applications/bamf-2.index...\r\nProcessing triggers for desktop-file-utils (0.26-1ubuntu5) ...\r\nProcessing triggers for gnome-menus (3.36.0-1.1ubuntu1) ...\r\nProcessing triggers for man-db (2.11.2-3) ...\r\n", "stdout_lines": ["Reading package lists...", "Building dependency tree...", "Reading state information...", "The following additional packages will be installed:", "  2to3 idle idle-python3.11 libpython3.11-testsuite net-tools python3-doc", "  python3-examples python3.11-doc python3.11-examples python3.11-full", "The following NEW packages will be installed:", "  2to3 idle idle-python3.11 libpython3.11-testsuite net-tools python3-doc", "  python3-examples python3-full python3.11-doc python3.11-examples", "  python3.11-full", "0 upgraded, 11 newly installed, 0 to remove and 0 not upgraded.", "Need to get 16.9 MB of archives.", "After this operation, 105 MB of additional disk space will be used.", "Get:1 http://in.archive.ubuntu.com/ubuntu mantic/universe amd64 2to3 all 3.11.4-5 [10.5 kB]", "Get:2 http://in.archive.ubuntu.com/ubuntu mantic/universe amd64 idle-python3.11 all 3.11.6-3 [340 kB]", "Get:3 http://in.archive.ubuntu.com/ubuntu mantic/universe amd64 idle all 3.11.4-5 [2726 B]", "Get:4 http://in.archive.ubuntu.com/ubuntu mantic/main amd64 net-tools amd64 2.10-0.1ubuntu3 [204 kB]", "Get:5 http://in.archive.ubuntu.com/ubuntu mantic/universe amd64 libpython3.11-testsuite all 3.11.6-3 [3560 kB]", "Get:6 http://in.archive.ubuntu.com/ubuntu mantic/main amd64 python3.11-doc all 3.11.6-3 [11.9 MB]", "Get:7 http://in.archive.ubuntu.com/ubuntu mantic/main amd64 python3-doc all 3.11.4-5 [9722 B]", "Get:8 http://in.archive.ubuntu.com/ubuntu mantic/main amd64 python3.11-examples all 3.11.6-3 [819 kB]", "Get:9 http://in.archive.ubuntu.com/ubuntu mantic/main amd64 python3-examples all 3.11.4-5 [878 B]", "Get:10 http://in.archive.ubuntu.com/ubuntu mantic/universe amd64 python3.11-full amd64 3.11.6-3 [1114 B]", "Get:11 http://in.archive.ubuntu.com/ubuntu mantic/universe amd64 python3-full amd64 3.11.4-5 [1164 B]", "Fetched 16.9 MB in 5s (3307 kB/s)", "Selecting previously unselected package 2to3.", "(Reading database ... ", "(Reading database ... 5%", "(Reading database ... 10%", "(Reading database ... 15%", "(Reading database ... 20%", "(Reading database ... 25%", "(Reading database ... 30%", "(Reading database ... 35%", "(Reading database ... 40%", "(Reading database ... 45%", "(Reading database ... 50%", "(Reading database ... 55%", "(Reading database ... 60%", "(Reading database ... 65%", "(Reading database ... 70%", "(Reading database ... 75%", "(Reading database ... 80%", "(Reading database ... 85%", "(Reading database ... 90%", "(Reading database ... 95%", "(Reading database ... 100%", "(Reading database ... 522410 files and directories currently installed.)", "Preparing to unpack .../00-2to3_3.11.4-5_all.deb ...", "Unpacking 2to3 (3.11.4-5) ...", "Selecting previously unselected package idle-python3.11.", "Preparing to unpack .../01-idle-python3.11_3.11.6-3_all.deb ...", "Unpacking idle-python3.11 (3.11.6-3) ...", "Selecting previously unselected package idle.", "Preparing to unpack .../02-idle_3.11.4-5_all.deb ...", "Unpacking idle (3.11.4-5) ...", "Selecting previously unselected package net-tools.", "Preparing to unpack .../03-net-tools_2.10-0.1ubuntu3_amd64.deb ...", "Unpacking net-tools (2.10-0.1ubuntu3) ...", "Selecting previously unselected package libpython3.11-testsuite.", "Preparing to unpack .../04-libpython3.11-testsuite_3.11.6-3_all.deb ...", "Unpacking libpython3.11-testsuite (3.11.6-3) ...", "Selecting previously unselected package python3.11-doc.", "Preparing to unpack .../05-python3.11-doc_3.11.6-3_all.deb ...", "Unpacking python3.11-doc (3.11.6-3) ...", "Selecting previously unselected package python3-doc.", "Preparing to unpack .../06-python3-doc_3.11.4-5_all.deb ...", "Unpacking python3-doc (3.11.4-5) ...", "Selecting previously unselected package python3.11-examples.", "Preparing to unpack .../07-python3.11-examples_3.11.6-3_all.deb ...", "Unpacking python3.11-examples (3.11.6-3) ...", "Selecting previously unselected package python3-examples.", "Preparing to unpack .../08-python3-examples_3.11.4-5_all.deb ...", "Unpacking python3-examples (3.11.4-5) ...", "Selecting previously unselected package python3.11-full.", "Preparing to unpack .../09-python3.11-full_3.11.6-3_amd64.deb ...", "Unpacking python3.11-full (3.11.6-3) ...", "Selecting previously unselected package python3-full.", "Preparing to unpack .../10-python3-full_3.11.4-5_amd64.deb ...", "Unpacking python3-full (3.11.4-5) ...", "Setting up net-tools (2.10-0.1ubuntu3) ...", "Setting up libpython3.11-testsuite (3.11.6-3) ...", "Setting up 2to3 (3.11.4-5) ...", "Setting up python3.11-doc (3.11.6-3) ...", "Setting up python3.11-examples (3.11.6-3) ...", "Setting up idle-python3.11 (3.11.6-3) ...", "Setting up python3-doc (3.11.4-5) ...", "Setting up idle (3.11.4-5) ...", "Setting up python3-examples (3.11.4-5) ...", "Setting up python3.11-full (3.11.6-3) ...", "Setting up python3-full (3.11.4-5) ...", "Processing triggers for install-info (7.0.3-2) ...", "Processing triggers for mailcap (3.70+nmu1ubuntu1) ...", "Processing triggers for bamfdaemon (0.5.6+22.04.20220217-0ubuntu1) ...", "Rebuilding /usr/share/applications/bamf-2.index...", "Processing triggers for desktop-file-utils (0.26-1ubuntu5) ...", "Processing triggers for gnome-menus (3.36.0-1.1ubuntu1) ...", "Processing triggers for man-db (2.11.2-3) ..."]}
2024-05-19 17:40:12,635 p=187089 u=root n=ansible | TASK [setup : install all command line tool on macOS] ************************************************************************************************
2024-05-19 17:40:12,648 p=187089 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-19 17:40:12,653 p=187089 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-19 17:40:12,658 p=187089 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-19 17:40:12,663 p=187089 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-19 17:40:12,669 p=187089 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-19 17:40:12,669 p=187089 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-19 17:40:12,669 p=187089 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-19 17:40:12,671 p=187089 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-19 17:40:12,671 p=187089 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-19 17:40:12,671 p=187089 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-19 17:40:12,672 p=187089 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-19 17:40:12,672 p=187089 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-19 17:40:12,673 p=187089 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-19 17:40:12,673 p=187089 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-19 17:40:12,673 p=187089 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-19 17:40:12,673 p=187089 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-19 17:40:12,674 p=187089 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-19 17:40:12,683 p=187089 u=root n=ansible | TASK [setup : install python tools] ******************************************************************************************************************
2024-05-19 17:40:13,256 p=187089 u=root n=ansible | failed: [localhost] (item=thefuck) => {"ansible_loop_var": "item", "changed": false, "cmd": ["/usr/bin/python3", "-m", "pip.__main__", "install", "thefuck"], "item": "thefuck", "msg": "\n:stderr: error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.\n"}
2024-05-19 17:40:13,700 p=187089 u=root n=ansible | failed: [localhost] (item=pyright) => {"ansible_loop_var": "item", "changed": false, "cmd": ["/usr/bin/python3", "-m", "pip.__main__", "install", "pyright"], "item": "pyright", "msg": "\n:stderr: error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.\n"}
2024-05-19 17:40:14,145 p=187089 u=root n=ansible | failed: [localhost] (item=pylint) => {"ansible_loop_var": "item", "changed": false, "cmd": ["/usr/bin/python3", "-m", "pip.__main__", "install", "pylint"], "item": "pylint", "msg": "\n:stderr: error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.\n"}
2024-05-19 17:40:14,591 p=187089 u=root n=ansible | failed: [localhost] (item=black) => {"ansible_loop_var": "item", "changed": false, "cmd": ["/usr/bin/python3", "-m", "pip.__main__", "install", "black"], "item": "black", "msg": "\n:stderr: error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.\n"}
2024-05-19 17:40:14,594 p=187089 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-19 17:40:14,594 p=187089 u=root n=ansible | localhost                  : ok=11   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-19 17:44:37,483 p=189947 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-19 17:44:37,619 p=189947 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-19 17:44:37,627 p=189947 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-19 17:44:38,396 p=189947 u=root n=ansible | ok: [localhost]
2024-05-19 17:44:38,415 p=189947 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-19 17:44:39,239 p=189947 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716120582, "cache_updated": false, "changed": false}
2024-05-19 17:44:39,246 p=189947 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-19 17:44:39,256 p=189947 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:44:39,284 p=189947 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-19 17:44:39,293 p=189947 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:44:39,301 p=189947 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-19 17:44:51,011 p=189947 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716120890, "cache_updated": true, "changed": true}
2024-05-19 17:44:51,017 p=189947 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-19 17:44:51,030 p=189947 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-19 17:44:51,038 p=189947 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-19 17:44:51,050 p=189947 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:44:51,059 p=189947 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-19 17:44:51,069 p=189947 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:44:51,084 p=189947 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-19 17:44:51,096 p=189947 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "pip_tools": ["thefuck", "pyright", "pylint", "black"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-19 17:44:51,103 p=189947 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-19 17:44:51,117 p=189947 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-19 17:44:51,126 p=189947 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-19 17:44:51,851 p=189947 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716120890, "cache_updated": false, "changed": false}
2024-05-19 17:44:51,858 p=189947 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-19 17:44:51,868 p=189947 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:44:51,875 p=189947 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-19 17:44:52,111 p=189947 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-19 17:44:52,120 p=189947 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-19 17:44:58,213 p=189947 u=root n=ansible | ok: [localhost] => {"after": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "before": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "changed": false, "remote_url_changed": false}
2024-05-19 17:44:58,221 p=189947 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-19 17:44:58,231 p=189947 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:44:58,240 p=189947 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-19 17:44:58,253 p=189947 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-19 17:44:58,261 p=189947 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *********************************************************************************
2024-05-19 17:44:58,983 p=189947 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716120890, "cache_updated": false, "changed": false, "item": "git"}
2024-05-19 17:44:59,682 p=189947 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716120890, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-19 17:45:00,388 p=189947 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716120890, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-19 17:45:01,107 p=189947 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716120890, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-19 17:45:01,815 p=189947 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716120890, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-19 17:45:02,530 p=189947 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716120890, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-19 17:45:03,242 p=189947 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716120890, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-19 17:45:03,953 p=189947 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716120890, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-19 17:45:04,661 p=189947 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716120890, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-19 17:45:05,367 p=189947 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716120890, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-19 17:45:06,075 p=189947 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716120890, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-19 17:45:06,786 p=189947 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716120890, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-19 17:45:07,501 p=189947 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716120890, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-19 17:45:08,203 p=189947 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716120890, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-19 17:45:08,916 p=189947 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716120890, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-19 17:45:09,633 p=189947 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716120890, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-19 17:45:09,642 p=189947 u=root n=ansible | TASK [setup : install all command line tool on macOS] ************************************************************************************************
2024-05-19 17:45:09,654 p=189947 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-19 17:45:09,656 p=189947 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-19 17:45:09,657 p=189947 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-19 17:45:09,663 p=189947 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-19 17:45:09,668 p=189947 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-19 17:45:09,673 p=189947 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-19 17:45:09,677 p=189947 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-19 17:45:09,677 p=189947 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-19 17:45:09,677 p=189947 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-19 17:45:09,678 p=189947 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-19 17:45:09,678 p=189947 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-19 17:45:09,678 p=189947 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-19 17:45:09,678 p=189947 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-19 17:45:09,679 p=189947 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-19 17:45:09,679 p=189947 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-19 17:45:09,679 p=189947 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-19 17:45:09,679 p=189947 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-19 17:45:09,686 p=189947 u=root n=ansible | TASK [setup : Ensure pipx is installed] **************************************************************************************************************
2024-05-19 17:45:10,398 p=189947 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716120890, "cache_updated": false, "changed": false}
2024-05-19 17:45:10,414 p=189947 u=root n=ansible | TASK [setup : Ensure pipx binaries are in PATH] ******************************************************************************************************
2024-05-19 17:45:10,848 p=189947 u=root n=ansible | changed: [localhost] => {"changed": true, "cmd": "pipx ensurepath\nexport PATH=$PATH:~/.local/bin\n", "delta": "0:00:00.209589", "end": "2024-05-19 17:45:10.830552", "msg": "", "rc": 0, "start": "2024-05-19 17:45:10.620963", "stderr": "", "stderr_lines": [], "stdout": "Success! Added /root/.local/bin to the PATH environment variable.\n\nConsider adding shell completions for pipx. Run 'pipx completions' for\ninstructions.\n\nYou will need to open a new terminal or re-login for the PATH changes to take\neffect.\n\nOtherwise pipx is ready to go! ✨ 🌟 ✨", "stdout_lines": ["Success! Added /root/.local/bin to the PATH environment variable.", "", "Consider adding shell completions for pipx. Run 'pipx completions' for", "instructions.", "", "You will need to open a new terminal or re-login for the PATH changes to take", "effect.", "", "Otherwise pipx is ready to go! ✨ 🌟 ✨"]}
2024-05-19 17:45:10,855 p=189947 u=root n=ansible | TASK [setup : install python tools] ******************************************************************************************************************
2024-05-19 17:45:20,590 p=189947 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["pipx", "install", "thefuck"], "delta": "0:00:09.595858", "end": "2024-05-19 17:45:20.569762", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-19 17:45:10.973904", "stderr": "creating virtual environment...\ncreating shared libraries...\nupgrading shared libraries...\ninstalling thefuck...\n⚠️  Note: thefuck was already on your PATH at /usr/bin/thefuck\n⚠️  Note: '/root/.local/bin' is not on your PATH environment variable. These\n    apps will not be globally accessible until your PATH is updated. Run `pipx\n    ensurepath` to automatically add it, or manually modify your PATH in your\n    shell's config file (i.e. ~/.bashrc).\ndone! ✨ 🌟 ✨", "stderr_lines": ["creating virtual environment...", "creating shared libraries...", "upgrading shared libraries...", "installing thefuck...", "⚠️  Note: thefuck was already on your PATH at /usr/bin/thefuck", "⚠️  Note: '/root/.local/bin' is not on your PATH environment variable. These", "    apps will not be globally accessible until your PATH is updated. Run `pipx", "    ensurepath` to automatically add it, or manually modify your PATH in your", "    shell's config file (i.e. ~/.bashrc).", "done! ✨ 🌟 ✨"], "stdout": "  installed package thefuck 3.32, installed using Python 3.11.6\n  These apps are now globally available\n    - fuck\n    - thefuck", "stdout_lines": ["  installed package thefuck 3.32, installed using Python 3.11.6", "  These apps are now globally available", "    - fuck", "    - thefuck"]}
2024-05-19 17:45:22,221 p=189947 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["pipx", "install", "pyright"], "delta": "0:00:01.503175", "end": "2024-05-19 17:45:22.197760", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-19 17:45:20.694585", "stderr": "creating virtual environment...\ninstalling pyright...\n⚠️  Note: pyright was already on your PATH at /usr/local/bin/pyright\n⚠️  Note: pyright-langserver was already on your PATH at\n    /usr/local/bin/pyright-langserver\n⚠️  Note: '/root/.local/bin' is not on your PATH environment variable. These\n    apps will not be globally accessible until your PATH is updated. Run `pipx\n    ensurepath` to automatically add it, or manually modify your PATH in your\n    shell's config file (i.e. ~/.bashrc).\ndone! ✨ 🌟 ✨", "stderr_lines": ["creating virtual environment...", "installing pyright...", "⚠️  Note: pyright was already on your PATH at /usr/local/bin/pyright", "⚠️  Note: pyright-langserver was already on your PATH at", "    /usr/local/bin/pyright-langserver", "⚠️  Note: '/root/.local/bin' is not on your PATH environment variable. These", "    apps will not be globally accessible until your PATH is updated. Run `pipx", "    ensurepath` to automatically add it, or manually modify your PATH in your", "    shell's config file (i.e. ~/.bashrc).", "done! ✨ 🌟 ✨"], "stdout": "  installed package pyright 1.1.363, installed using Python 3.11.6\n  These apps are now globally available\n    - pyright\n    - pyright-langserver\n    - pyright-python\n    - pyright-python-langserver", "stdout_lines": ["  installed package pyright 1.1.363, installed using Python 3.11.6", "  These apps are now globally available", "    - pyright", "    - pyright-langserver", "    - pyright-python", "    - pyright-python-langserver"]}
2024-05-19 17:45:25,225 p=189947 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["pipx", "install", "pylint"], "delta": "0:00:02.876858", "end": "2024-05-19 17:45:25.206011", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-19 17:45:22.329153", "stderr": "creating virtual environment...\ninstalling pylint...\n⚠️  Note: '/root/.local/bin' is not on your PATH environment variable. These\n    apps will not be globally accessible until your PATH is updated. Run `pipx\n    ensurepath` to automatically add it, or manually modify your PATH in your\n    shell's config file (i.e. ~/.bashrc).\ndone! ✨ 🌟 ✨", "stderr_lines": ["creating virtual environment...", "installing pylint...", "⚠️  Note: '/root/.local/bin' is not on your PATH environment variable. These", "    apps will not be globally accessible until your PATH is updated. Run `pipx", "    ensurepath` to automatically add it, or manually modify your PATH in your", "    shell's config file (i.e. ~/.bashrc).", "done! ✨ 🌟 ✨"], "stdout": "  installed package pylint 3.2.1, installed using Python 3.11.6\n  These apps are now globally available\n    - pylint\n    - pylint-config\n    - pyreverse\n    - symilar", "stdout_lines": ["  installed package pylint 3.2.1, installed using Python 3.11.6", "  These apps are now globally available", "    - pylint", "    - pylint-config", "    - pyreverse", "    - symilar"]}
2024-05-19 17:45:28,143 p=189947 u=root n=ansible | changed: [localhost] => (item=black) => {"ansible_loop_var": "item", "changed": true, "cmd": ["pipx", "install", "black"], "delta": "0:00:02.785025", "end": "2024-05-19 17:45:28.124128", "item": "black", "msg": "", "rc": 0, "start": "2024-05-19 17:45:25.339103", "stderr": "creating virtual environment...\ninstalling black...\n⚠️  Note: '/root/.local/bin' is not on your PATH environment variable. These\n    apps will not be globally accessible until your PATH is updated. Run `pipx\n    ensurepath` to automatically add it, or manually modify your PATH in your\n    shell's config file (i.e. ~/.bashrc).\ndone! ✨ 🌟 ✨", "stderr_lines": ["creating virtual environment...", "installing black...", "⚠️  Note: '/root/.local/bin' is not on your PATH environment variable. These", "    apps will not be globally accessible until your PATH is updated. Run `pipx", "    ensurepath` to automatically add it, or manually modify your PATH in your", "    shell's config file (i.e. ~/.bashrc).", "done! ✨ 🌟 ✨"], "stdout": "  installed package black 24.4.2, installed using Python 3.11.6\n  These apps are now globally available\n    - black\n    - blackd", "stdout_lines": ["  installed package black 24.4.2, installed using Python 3.11.6", "  These apps are now globally available", "    - black", "    - blackd"]}
2024-05-19 17:45:28,176 p=189947 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-19 17:45:28,177 p=189947 u=root n=ansible | localhost                  : ok=14   changed=3    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2024-05-19 17:48:17,339 p=192599 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-19 17:48:17,471 p=192599 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-19 17:48:17,478 p=192599 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-19 17:48:18,205 p=192599 u=root n=ansible | ok: [localhost]
2024-05-19 17:48:18,225 p=192599 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-19 17:48:19,039 p=192599 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716120890, "cache_updated": false, "changed": false}
2024-05-19 17:48:19,047 p=192599 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-19 17:48:19,056 p=192599 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:48:19,086 p=192599 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-19 17:48:19,094 p=192599 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:48:19,102 p=192599 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-19 17:48:21,860 p=192599 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716121101, "cache_updated": true, "changed": true}
2024-05-19 17:48:21,868 p=192599 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-19 17:48:21,881 p=192599 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-19 17:48:21,889 p=192599 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-19 17:48:21,898 p=192599 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:48:21,905 p=192599 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-19 17:48:21,914 p=192599 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:48:21,928 p=192599 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-19 17:48:21,940 p=192599 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "pip_tools": ["thefuck", "pyright", "pylint", "black"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-19 17:48:21,947 p=192599 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-19 17:48:21,957 p=192599 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-19 17:48:21,965 p=192599 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-19 17:48:22,679 p=192599 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716121101, "cache_updated": false, "changed": false}
2024-05-19 17:48:22,686 p=192599 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-19 17:48:22,695 p=192599 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:48:22,702 p=192599 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-19 17:48:22,926 p=192599 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-19 17:48:22,934 p=192599 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-19 17:48:23,874 p=192599 u=root n=ansible | ok: [localhost] => {"after": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "before": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "changed": false, "remote_url_changed": false}
2024-05-19 17:48:23,882 p=192599 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-19 17:48:23,891 p=192599 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:48:23,900 p=192599 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-19 17:48:23,912 p=192599 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-19 17:48:23,919 p=192599 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *********************************************************************************
2024-05-19 17:48:24,642 p=192599 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716121101, "cache_updated": false, "changed": false, "item": "git"}
2024-05-19 17:48:25,340 p=192599 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716121101, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-19 17:48:26,041 p=192599 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716121101, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-19 17:48:26,748 p=192599 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716121101, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-19 17:48:27,463 p=192599 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716121101, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-19 17:48:28,162 p=192599 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716121101, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-19 17:48:28,870 p=192599 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716121101, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-19 17:48:29,571 p=192599 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716121101, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-19 17:48:30,304 p=192599 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716121101, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-19 17:48:31,045 p=192599 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716121101, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-19 17:48:31,749 p=192599 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716121101, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-19 17:48:32,444 p=192599 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716121101, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-19 17:48:33,164 p=192599 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716121101, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-19 17:48:33,879 p=192599 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716121101, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-19 17:48:34,577 p=192599 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716121101, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-19 17:48:35,276 p=192599 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716121101, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-19 17:48:35,285 p=192599 u=root n=ansible | TASK [setup : install all command line tool on macOS] ************************************************************************************************
2024-05-19 17:48:35,298 p=192599 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-19 17:48:35,303 p=192599 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-19 17:48:35,308 p=192599 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-19 17:48:35,308 p=192599 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-19 17:48:35,309 p=192599 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-19 17:48:35,309 p=192599 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-19 17:48:35,310 p=192599 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-19 17:48:35,314 p=192599 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-19 17:48:35,346 p=192599 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-19 17:48:35,351 p=192599 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-19 17:48:35,352 p=192599 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-19 17:48:35,353 p=192599 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-19 17:48:35,353 p=192599 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-19 17:48:35,353 p=192599 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-19 17:48:35,353 p=192599 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-19 17:48:35,354 p=192599 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-19 17:48:35,380 p=192599 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-19 17:48:35,386 p=192599 u=root n=ansible | TASK [setup : install python tools] ******************************************************************************************************************
2024-05-19 17:48:35,847 p=192599 u=root n=ansible | failed: [localhost] (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["pip3", "install", "thefuck"], "delta": "0:00:00.269990", "end": "2024-05-19 17:48:35.828534", "item": "thefuck", "msg": "non-zero return code", "rc": 1, "start": "2024-05-19 17:48:35.558544", "stderr": "error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.", "stderr_lines": ["error: externally-managed-environment", "", "× This environment is externally managed", "╰─> To install Python packages system-wide, try apt install", "    python3-xyz, where xyz is the package you are trying to", "    install.", "    ", "    If you wish to install a non-Debian-packaged Python package,", "    create a virtual environment using python3 -m venv path/to/venv.", "    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make", "    sure you have python3-full installed.", "    ", "    If you wish to install a non-Debian packaged Python application,", "    it may be easiest to use pipx install xyz, which will manage a", "    virtual environment for you. Make sure you have pipx installed.", "    ", "    See /usr/share/doc/python3.11/README.venv for more information.", "", "note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.", "hint: See PEP 668 for the detailed specification."], "stdout": "", "stdout_lines": []}
2024-05-19 17:48:36,238 p=192599 u=root n=ansible | failed: [localhost] (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["pip3", "install", "pyright"], "delta": "0:00:00.266994", "end": "2024-05-19 17:48:36.219641", "item": "pyright", "msg": "non-zero return code", "rc": 1, "start": "2024-05-19 17:48:35.952647", "stderr": "error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.", "stderr_lines": ["error: externally-managed-environment", "", "× This environment is externally managed", "╰─> To install Python packages system-wide, try apt install", "    python3-xyz, where xyz is the package you are trying to", "    install.", "    ", "    If you wish to install a non-Debian-packaged Python package,", "    create a virtual environment using python3 -m venv path/to/venv.", "    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make", "    sure you have python3-full installed.", "    ", "    If you wish to install a non-Debian packaged Python application,", "    it may be easiest to use pipx install xyz, which will manage a", "    virtual environment for you. Make sure you have pipx installed.", "    ", "    See /usr/share/doc/python3.11/README.venv for more information.", "", "note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.", "hint: See PEP 668 for the detailed specification."], "stdout": "", "stdout_lines": []}
2024-05-19 17:48:36,622 p=192599 u=root n=ansible | failed: [localhost] (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["pip3", "install", "pylint"], "delta": "0:00:00.262646", "end": "2024-05-19 17:48:36.604033", "item": "pylint", "msg": "non-zero return code", "rc": 1, "start": "2024-05-19 17:48:36.341387", "stderr": "error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.", "stderr_lines": ["error: externally-managed-environment", "", "× This environment is externally managed", "╰─> To install Python packages system-wide, try apt install", "    python3-xyz, where xyz is the package you are trying to", "    install.", "    ", "    If you wish to install a non-Debian-packaged Python package,", "    create a virtual environment using python3 -m venv path/to/venv.", "    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make", "    sure you have python3-full installed.", "    ", "    If you wish to install a non-Debian packaged Python application,", "    it may be easiest to use pipx install xyz, which will manage a", "    virtual environment for you. Make sure you have pipx installed.", "    ", "    See /usr/share/doc/python3.11/README.venv for more information.", "", "note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.", "hint: See PEP 668 for the detailed specification."], "stdout": "", "stdout_lines": []}
2024-05-19 17:48:37,003 p=192599 u=root n=ansible | failed: [localhost] (item=black) => {"ansible_loop_var": "item", "changed": true, "cmd": ["pip3", "install", "black"], "delta": "0:00:00.261765", "end": "2024-05-19 17:48:36.985583", "item": "black", "msg": "non-zero return code", "rc": 1, "start": "2024-05-19 17:48:36.723818", "stderr": "error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.", "stderr_lines": ["error: externally-managed-environment", "", "× This environment is externally managed", "╰─> To install Python packages system-wide, try apt install", "    python3-xyz, where xyz is the package you are trying to", "    install.", "    ", "    If you wish to install a non-Debian-packaged Python package,", "    create a virtual environment using python3 -m venv path/to/venv.", "    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make", "    sure you have python3-full installed.", "    ", "    If you wish to install a non-Debian packaged Python application,", "    it may be easiest to use pipx install xyz, which will manage a", "    virtual environment for you. Make sure you have pipx installed.", "    ", "    See /usr/share/doc/python3.11/README.venv for more information.", "", "note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.", "hint: See PEP 668 for the detailed specification."], "stdout": "", "stdout_lines": []}
2024-05-19 17:48:37,006 p=192599 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-19 17:48:37,006 p=192599 u=root n=ansible | localhost                  : ok=11   changed=1    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-19 17:49:18,285 p=194710 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-19 17:49:18,422 p=194710 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-19 17:49:18,430 p=194710 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-19 17:49:19,206 p=194710 u=root n=ansible | ok: [localhost]
2024-05-19 17:49:19,224 p=194710 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-19 17:49:20,037 p=194710 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716121101, "cache_updated": false, "changed": false}
2024-05-19 17:49:20,045 p=194710 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-19 17:49:20,053 p=194710 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:49:20,082 p=194710 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-19 17:49:20,092 p=194710 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:49:20,099 p=194710 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-19 17:49:23,275 p=194710 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716121162, "cache_updated": true, "changed": true}
2024-05-19 17:49:23,282 p=194710 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-19 17:49:23,296 p=194710 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-19 17:49:23,303 p=194710 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-19 17:49:23,312 p=194710 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:49:23,319 p=194710 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-19 17:49:23,329 p=194710 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:49:23,343 p=194710 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-19 17:49:23,354 p=194710 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "pip_tools": ["thefuck", "pyright", "pylint", "black"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-19 17:49:23,361 p=194710 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-19 17:49:23,372 p=194710 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-19 17:49:23,379 p=194710 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-19 17:49:24,096 p=194710 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716121162, "cache_updated": false, "changed": false}
2024-05-19 17:49:24,103 p=194710 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-19 17:49:24,113 p=194710 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:49:24,120 p=194710 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-19 17:49:24,346 p=194710 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-19 17:49:24,354 p=194710 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-19 17:49:25,300 p=194710 u=root n=ansible | ok: [localhost] => {"after": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "before": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "changed": false, "remote_url_changed": false}
2024-05-19 17:49:25,308 p=194710 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-19 17:49:25,318 p=194710 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:49:25,326 p=194710 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-19 17:49:25,339 p=194710 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-19 17:49:25,346 p=194710 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *********************************************************************************
2024-05-19 17:49:26,068 p=194710 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716121162, "cache_updated": false, "changed": false, "item": "git"}
2024-05-19 17:49:26,783 p=194710 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716121162, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-19 17:49:27,490 p=194710 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716121162, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-19 17:49:28,192 p=194710 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716121162, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-19 17:49:28,902 p=194710 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716121162, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-19 17:49:29,615 p=194710 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716121162, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-19 17:49:30,315 p=194710 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716121162, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-19 17:49:31,015 p=194710 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716121162, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-19 17:49:31,710 p=194710 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716121162, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-19 17:49:32,430 p=194710 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716121162, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-19 17:49:33,139 p=194710 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716121162, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-19 17:49:33,848 p=194710 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716121162, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-19 17:49:34,566 p=194710 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716121162, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-19 17:49:35,276 p=194710 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716121162, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-19 17:49:35,991 p=194710 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716121162, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-19 17:49:36,694 p=194710 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716121162, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-19 17:49:36,702 p=194710 u=root n=ansible | TASK [setup : install all command line tool on macOS] ************************************************************************************************
2024-05-19 17:49:36,715 p=194710 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-19 17:49:36,716 p=194710 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-19 17:49:36,722 p=194710 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-19 17:49:36,727 p=194710 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-19 17:49:36,760 p=194710 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-19 17:49:36,765 p=194710 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-19 17:49:36,767 p=194710 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-19 17:49:36,767 p=194710 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-19 17:49:36,768 p=194710 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-19 17:49:36,768 p=194710 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-19 17:49:36,768 p=194710 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-19 17:49:36,769 p=194710 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-19 17:49:36,769 p=194710 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-19 17:49:36,770 p=194710 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-19 17:49:36,770 p=194710 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-19 17:49:36,770 p=194710 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-19 17:49:36,798 p=194710 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-19 17:49:36,805 p=194710 u=root n=ansible | TASK [setup : install python tools] ******************************************************************************************************************
2024-05-19 17:49:37,292 p=194710 u=root n=ansible | failed: [localhost] (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck"], "delta": "0:00:00.289881", "end": "2024-05-19 17:49:37.271177", "item": "thefuck", "msg": "non-zero return code", "rc": 1, "start": "2024-05-19 17:49:36.981296", "stderr": "error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.", "stderr_lines": ["error: externally-managed-environment", "", "× This environment is externally managed", "╰─> To install Python packages system-wide, try apt install", "    python3-xyz, where xyz is the package you are trying to", "    install.", "    ", "    If you wish to install a non-Debian-packaged Python package,", "    create a virtual environment using python3 -m venv path/to/venv.", "    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make", "    sure you have python3-full installed.", "    ", "    If you wish to install a non-Debian packaged Python application,", "    it may be easiest to use pipx install xyz, which will manage a", "    virtual environment for you. Make sure you have pipx installed.", "    ", "    See /usr/share/doc/python3.11/README.venv for more information.", "", "note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.", "hint: See PEP 668 for the detailed specification."], "stdout": "", "stdout_lines": []}
2024-05-19 17:49:37,749 p=194710 u=root n=ansible | failed: [localhost] (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright"], "delta": "0:00:00.315372", "end": "2024-05-19 17:49:37.726188", "item": "pyright", "msg": "non-zero return code", "rc": 1, "start": "2024-05-19 17:49:37.410816", "stderr": "error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.", "stderr_lines": ["error: externally-managed-environment", "", "× This environment is externally managed", "╰─> To install Python packages system-wide, try apt install", "    python3-xyz, where xyz is the package you are trying to", "    install.", "    ", "    If you wish to install a non-Debian-packaged Python package,", "    create a virtual environment using python3 -m venv path/to/venv.", "    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make", "    sure you have python3-full installed.", "    ", "    If you wish to install a non-Debian packaged Python application,", "    it may be easiest to use pipx install xyz, which will manage a", "    virtual environment for you. Make sure you have pipx installed.", "    ", "    See /usr/share/doc/python3.11/README.venv for more information.", "", "note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.", "hint: See PEP 668 for the detailed specification."], "stdout": "", "stdout_lines": []}
2024-05-19 17:49:38,173 p=194710 u=root n=ansible | failed: [localhost] (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint"], "delta": "0:00:00.288876", "end": "2024-05-19 17:49:38.152895", "item": "pylint", "msg": "non-zero return code", "rc": 1, "start": "2024-05-19 17:49:37.864019", "stderr": "error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.", "stderr_lines": ["error: externally-managed-environment", "", "× This environment is externally managed", "╰─> To install Python packages system-wide, try apt install", "    python3-xyz, where xyz is the package you are trying to", "    install.", "    ", "    If you wish to install a non-Debian-packaged Python package,", "    create a virtual environment using python3 -m venv path/to/venv.", "    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make", "    sure you have python3-full installed.", "    ", "    If you wish to install a non-Debian packaged Python application,", "    it may be easiest to use pipx install xyz, which will manage a", "    virtual environment for you. Make sure you have pipx installed.", "    ", "    See /usr/share/doc/python3.11/README.venv for more information.", "", "note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.", "hint: See PEP 668 for the detailed specification."], "stdout": "", "stdout_lines": []}
2024-05-19 17:49:38,552 p=194710 u=root n=ansible | failed: [localhost] (item=black) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "black"], "delta": "0:00:00.258528", "end": "2024-05-19 17:49:38.535129", "item": "black", "msg": "non-zero return code", "rc": 1, "start": "2024-05-19 17:49:38.276601", "stderr": "error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.", "stderr_lines": ["error: externally-managed-environment", "", "× This environment is externally managed", "╰─> To install Python packages system-wide, try apt install", "    python3-xyz, where xyz is the package you are trying to", "    install.", "    ", "    If you wish to install a non-Debian-packaged Python package,", "    create a virtual environment using python3 -m venv path/to/venv.", "    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make", "    sure you have python3-full installed.", "    ", "    If you wish to install a non-Debian packaged Python application,", "    it may be easiest to use pipx install xyz, which will manage a", "    virtual environment for you. Make sure you have pipx installed.", "    ", "    See /usr/share/doc/python3.11/README.venv for more information.", "", "note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.", "hint: See PEP 668 for the detailed specification."], "stdout": "", "stdout_lines": []}
2024-05-19 17:49:38,555 p=194710 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-19 17:49:38,555 p=194710 u=root n=ansible | localhost                  : ok=11   changed=1    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-19 17:50:31,531 p=196814 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-19 17:50:31,664 p=196814 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-19 17:50:31,671 p=196814 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-19 17:50:32,418 p=196814 u=root n=ansible | ok: [localhost]
2024-05-19 17:50:32,437 p=196814 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-19 17:50:33,243 p=196814 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716121162, "cache_updated": false, "changed": false}
2024-05-19 17:50:33,250 p=196814 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-19 17:50:33,259 p=196814 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:50:33,287 p=196814 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-19 17:50:33,296 p=196814 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:50:33,304 p=196814 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-19 17:50:36,433 p=196814 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716121236, "cache_updated": true, "changed": true}
2024-05-19 17:50:36,440 p=196814 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-19 17:50:36,452 p=196814 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-19 17:50:36,460 p=196814 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-19 17:50:36,469 p=196814 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:50:36,476 p=196814 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-19 17:50:36,486 p=196814 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:50:36,500 p=196814 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-19 17:50:36,514 p=196814 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-19 17:50:36,522 p=196814 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-19 17:50:36,533 p=196814 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-19 17:50:36,540 p=196814 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-19 17:50:37,264 p=196814 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716121236, "cache_updated": false, "changed": false}
2024-05-19 17:50:37,271 p=196814 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-19 17:50:37,281 p=196814 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:50:37,288 p=196814 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-19 17:50:37,522 p=196814 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-19 17:50:37,529 p=196814 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-19 17:50:38,459 p=196814 u=root n=ansible | ok: [localhost] => {"after": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "before": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "changed": false, "remote_url_changed": false}
2024-05-19 17:50:38,467 p=196814 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-19 17:50:38,476 p=196814 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:50:38,484 p=196814 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-19 17:50:38,497 p=196814 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-19 17:50:38,504 p=196814 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *********************************************************************************
2024-05-19 17:50:39,221 p=196814 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716121236, "cache_updated": false, "changed": false, "item": "git"}
2024-05-19 17:50:39,919 p=196814 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716121236, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-19 17:50:40,625 p=196814 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716121236, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-19 17:50:41,321 p=196814 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716121236, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-19 17:50:42,025 p=196814 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716121236, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-19 17:50:42,765 p=196814 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716121236, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-19 17:50:43,467 p=196814 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716121236, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-19 17:50:44,170 p=196814 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716121236, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-19 17:50:44,884 p=196814 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716121236, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-19 17:50:45,594 p=196814 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716121236, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-19 17:50:46,291 p=196814 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716121236, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-19 17:50:46,997 p=196814 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716121236, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-19 17:50:47,706 p=196814 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716121236, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-19 17:50:48,410 p=196814 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716121236, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-19 17:50:49,111 p=196814 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716121236, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-19 17:50:49,818 p=196814 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716121236, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-19 17:50:49,827 p=196814 u=root n=ansible | TASK [setup : install all command line tool on macOS] ************************************************************************************************
2024-05-19 17:50:49,840 p=196814 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-19 17:50:49,844 p=196814 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-19 17:50:49,849 p=196814 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-19 17:50:49,850 p=196814 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-19 17:50:49,851 p=196814 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-19 17:50:49,854 p=196814 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-19 17:50:49,855 p=196814 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-19 17:50:49,855 p=196814 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-19 17:50:49,856 p=196814 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-19 17:50:49,860 p=196814 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-19 17:50:49,860 p=196814 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-19 17:50:49,861 p=196814 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-19 17:50:49,865 p=196814 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-19 17:50:49,865 p=196814 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-19 17:50:49,866 p=196814 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-19 17:50:49,866 p=196814 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-19 17:50:49,867 p=196814 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-19 17:50:49,874 p=196814 u=root n=ansible | TASK [setup : install python tools] ******************************************************************************************************************
2024-05-19 17:50:51,908 p=196814 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.814853", "end": "2024-05-19 17:50:51.889407", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-19 17:50:50.074554", "stderr": "WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv", "stderr_lines": ["WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv"], "stdout": "Collecting thefuck\n  Obtaining dependency information for thefuck from https://files.pythonhosted.org/packages/60/e2/a42cb06f359749003157ab5339db3932641be91c6fa8fc4e36c20b05b628/thefuck-3.32-py2.py3-none-any.whl.metadata\n  Downloading thefuck-3.32-py2.py3-none-any.whl.metadata (28 kB)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)\nDownloading thefuck-3.32-py2.py3-none-any.whl (127 kB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 127.9/127.9 kB 2.7 MB/s eta 0:00:00\nInstalling collected packages: thefuck\nSuccessfully installed thefuck-3.32", "stdout_lines": ["Collecting thefuck", "  Obtaining dependency information for thefuck from https://files.pythonhosted.org/packages/60/e2/a42cb06f359749003157ab5339db3932641be91c6fa8fc4e36c20b05b628/thefuck-3.32-py2.py3-none-any.whl.metadata", "  Downloading thefuck-3.32-py2.py3-none-any.whl.metadata (28 kB)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "Downloading thefuck-3.32-py2.py3-none-any.whl (127 kB)", "   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 127.9/127.9 kB 2.7 MB/s eta 0:00:00", "Installing collected packages: thefuck", "Successfully installed thefuck-3.32"]}
2024-05-19 17:50:53,937 p=196814 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.900124", "end": "2024-05-19 17:50:53.919181", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-19 17:50:52.019057", "stderr": "WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv", "stderr_lines": ["WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv"], "stdout": "Collecting pyright\n  Obtaining dependency information for pyright from https://files.pythonhosted.org/packages/eb/35/7497fd40aedbb0ef9e2ffb01c819f9c26a86d1c7a2cfe572f77692489aa3/pyright-1.1.363-py3-none-any.whl.metadata\n  Downloading pyright-1.1.363-py3-none-any.whl.metadata (6.2 kB)\nCollecting nodeenv>=1.6.0 (from pyright)\n  Obtaining dependency information for nodeenv>=1.6.0 from https://files.pythonhosted.org/packages/1a/e6/6d2ead760a9ddb35e65740fd5a57e46aadd7b0c49861ab24f94812797a1c/nodeenv-1.8.0-py2.py3-none-any.whl.metadata\n  Downloading nodeenv-1.8.0-py2.py3-none-any.whl.metadata (21 kB)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)\nDownloading pyright-1.1.363-py3-none-any.whl (18 kB)\nDownloading nodeenv-1.8.0-py2.py3-none-any.whl (22 kB)\nInstalling collected packages: nodeenv, pyright\nSuccessfully installed nodeenv-1.8.0 pyright-1.1.363", "stdout_lines": ["Collecting pyright", "  Obtaining dependency information for pyright from https://files.pythonhosted.org/packages/eb/35/7497fd40aedbb0ef9e2ffb01c819f9c26a86d1c7a2cfe572f77692489aa3/pyright-1.1.363-py3-none-any.whl.metadata", "  Downloading pyright-1.1.363-py3-none-any.whl.metadata (6.2 kB)", "Collecting nodeenv>=1.6.0 (from pyright)", "  Obtaining dependency information for nodeenv>=1.6.0 from https://files.pythonhosted.org/packages/1a/e6/6d2ead760a9ddb35e65740fd5a57e46aadd7b0c49861ab24f94812797a1c/nodeenv-1.8.0-py2.py3-none-any.whl.metadata", "  Downloading nodeenv-1.8.0-py2.py3-none-any.whl.metadata (21 kB)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "Downloading pyright-1.1.363-py3-none-any.whl (18 kB)", "Downloading nodeenv-1.8.0-py2.py3-none-any.whl (22 kB)", "Installing collected packages: nodeenv, pyright", "Successfully installed nodeenv-1.8.0 pyright-1.1.363"]}
2024-05-19 17:50:57,473 p=196814 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:03.416531", "end": "2024-05-19 17:50:57.456072", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-19 17:50:54.039541", "stderr": "WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv", "stderr_lines": ["WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv"], "stdout": "Collecting pylint\n  Obtaining dependency information for pylint from https://files.pythonhosted.org/packages/bc/70/46d39bf0cf531381e35c92b72a2b0614569c445a1233c1d087443b20bca7/pylint-3.2.1-py3-none-any.whl.metadata\n  Downloading pylint-3.2.1-py3-none-any.whl.metadata (12 kB)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nCollecting astroid<=3.3.0-dev0,>=3.2.1 (from pylint)\n  Obtaining dependency information for astroid<=3.3.0-dev0,>=3.2.1 from https://files.pythonhosted.org/packages/c4/d1/d5c88f84d62d0995dab4220a87049ff7f5d13472f54687a4e64538f15180/astroid-3.2.1-py3-none-any.whl.metadata\n  Downloading astroid-3.2.1-py3-none-any.whl.metadata (4.5 kB)\nCollecting isort!=5.13.0,<6,>=4.2.5 (from pylint)\n  Obtaining dependency information for isort!=5.13.0,<6,>=4.2.5 from https://files.pythonhosted.org/packages/d1/b3/8def84f539e7d2289a02f0524b944b15d7c75dab7628bedf1c4f0992029c/isort-5.13.2-py3-none-any.whl.metadata\n  Downloading isort-5.13.2-py3-none-any.whl.metadata (12 kB)\nCollecting mccabe<0.8,>=0.6 (from pylint)\n  Obtaining dependency information for mccabe<0.8,>=0.6 from https://files.pythonhosted.org/packages/27/1a/1f68f9ba0c207934b35b86a8ca3aad8395a3d6dd7921c0686e23853ff5a9/mccabe-0.7.0-py2.py3-none-any.whl.metadata\n  Downloading mccabe-0.7.0-py2.py3-none-any.whl.metadata (5.0 kB)\nCollecting tomlkit>=0.10.1 (from pylint)\n  Obtaining dependency information for tomlkit>=0.10.1 from https://files.pythonhosted.org/packages/73/6d/b5406752c4e4ba86692b22fab0afed8b48f16bdde8f92e1d852976b61dc6/tomlkit-0.12.5-py3-none-any.whl.metadata\n  Downloading tomlkit-0.12.5-py3-none-any.whl.metadata (2.7 kB)\nCollecting dill>=0.3.6 (from pylint)\n  Obtaining dependency information for dill>=0.3.6 from https://files.pythonhosted.org/packages/c9/7a/cef76fd8438a42f96db64ddaa85280485a9c395e7df3db8158cfec1eee34/dill-0.3.8-py3-none-any.whl.metadata\n  Downloading dill-0.3.8-py3-none-any.whl.metadata (10 kB)\nDownloading pylint-3.2.1-py3-none-any.whl (518 kB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 519.0/519.0 kB 2.4 MB/s eta 0:00:00\nDownloading astroid-3.2.1-py3-none-any.whl (276 kB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 276.1/276.1 kB 2.8 MB/s eta 0:00:00\nDownloading dill-0.3.8-py3-none-any.whl (116 kB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 116.3/116.3 kB 2.4 MB/s eta 0:00:00\nDownloading isort-5.13.2-py3-none-any.whl (92 kB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 92.3/92.3 kB 3.5 MB/s eta 0:00:00\nDownloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)\nDownloading tomlkit-0.12.5-py3-none-any.whl (37 kB)\nInstalling collected packages: tomlkit, mccabe, isort, dill, astroid, pylint\nSuccessfully installed astroid-3.2.1 dill-0.3.8 isort-5.13.2 mccabe-0.7.0 pylint-3.2.1 tomlkit-0.12.5", "stdout_lines": ["Collecting pylint", "  Obtaining dependency information for pylint from https://files.pythonhosted.org/packages/bc/70/46d39bf0cf531381e35c92b72a2b0614569c445a1233c1d087443b20bca7/pylint-3.2.1-py3-none-any.whl.metadata", "  Downloading pylint-3.2.1-py3-none-any.whl.metadata (12 kB)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Collecting astroid<=3.3.0-dev0,>=3.2.1 (from pylint)", "  Obtaining dependency information for astroid<=3.3.0-dev0,>=3.2.1 from https://files.pythonhosted.org/packages/c4/d1/d5c88f84d62d0995dab4220a87049ff7f5d13472f54687a4e64538f15180/astroid-3.2.1-py3-none-any.whl.metadata", "  Downloading astroid-3.2.1-py3-none-any.whl.metadata (4.5 kB)", "Collecting isort!=5.13.0,<6,>=4.2.5 (from pylint)", "  Obtaining dependency information for isort!=5.13.0,<6,>=4.2.5 from https://files.pythonhosted.org/packages/d1/b3/8def84f539e7d2289a02f0524b944b15d7c75dab7628bedf1c4f0992029c/isort-5.13.2-py3-none-any.whl.metadata", "  Downloading isort-5.13.2-py3-none-any.whl.metadata (12 kB)", "Collecting mccabe<0.8,>=0.6 (from pylint)", "  Obtaining dependency information for mccabe<0.8,>=0.6 from https://files.pythonhosted.org/packages/27/1a/1f68f9ba0c207934b35b86a8ca3aad8395a3d6dd7921c0686e23853ff5a9/mccabe-0.7.0-py2.py3-none-any.whl.metadata", "  Downloading mccabe-0.7.0-py2.py3-none-any.whl.metadata (5.0 kB)", "Collecting tomlkit>=0.10.1 (from pylint)", "  Obtaining dependency information for tomlkit>=0.10.1 from https://files.pythonhosted.org/packages/73/6d/b5406752c4e4ba86692b22fab0afed8b48f16bdde8f92e1d852976b61dc6/tomlkit-0.12.5-py3-none-any.whl.metadata", "  Downloading tomlkit-0.12.5-py3-none-any.whl.metadata (2.7 kB)", "Collecting dill>=0.3.6 (from pylint)", "  Obtaining dependency information for dill>=0.3.6 from https://files.pythonhosted.org/packages/c9/7a/cef76fd8438a42f96db64ddaa85280485a9c395e7df3db8158cfec1eee34/dill-0.3.8-py3-none-any.whl.metadata", "  Downloading dill-0.3.8-py3-none-any.whl.metadata (10 kB)", "Downloading pylint-3.2.1-py3-none-any.whl (518 kB)", "   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 519.0/519.0 kB 2.4 MB/s eta 0:00:00", "Downloading astroid-3.2.1-py3-none-any.whl (276 kB)", "   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 276.1/276.1 kB 2.8 MB/s eta 0:00:00", "Downloading dill-0.3.8-py3-none-any.whl (116 kB)", "   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 116.3/116.3 kB 2.4 MB/s eta 0:00:00", "Downloading isort-5.13.2-py3-none-any.whl (92 kB)", "   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 92.3/92.3 kB 3.5 MB/s eta 0:00:00", "Downloading mccabe-0.7.0-py2.py3-none-any.whl (7.3 kB)", "Downloading tomlkit-0.12.5-py3-none-any.whl (37 kB)", "Installing collected packages: tomlkit, mccabe, isort, dill, astroid, pylint", "Successfully installed astroid-3.2.1 dill-0.3.8 isort-5.13.2 mccabe-0.7.0 pylint-3.2.1 tomlkit-0.12.5"]}
2024-05-19 17:50:57,529 p=196814 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-19 17:50:57,529 p=196814 u=root n=ansible | localhost                  : ok=12   changed=2    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
2024-05-19 17:57:05,338 p=199841 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-19 17:57:05,480 p=199841 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-19 17:57:05,487 p=199841 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-19 17:57:06,255 p=199841 u=root n=ansible | ok: [localhost]
2024-05-19 17:57:06,274 p=199841 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-19 17:57:07,113 p=199841 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716121236, "cache_updated": false, "changed": false}
2024-05-19 17:57:07,140 p=199841 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-19 17:57:07,150 p=199841 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:57:07,158 p=199841 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-19 17:57:07,167 p=199841 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:57:07,175 p=199841 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-19 17:57:09,489 p=199841 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716121629, "cache_updated": true, "changed": true}
2024-05-19 17:57:09,497 p=199841 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-19 17:57:09,511 p=199841 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-19 17:57:09,518 p=199841 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-19 17:57:09,527 p=199841 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:57:09,535 p=199841 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-19 17:57:09,545 p=199841 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:57:09,560 p=199841 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-19 17:57:09,572 p=199841 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-19 17:57:09,582 p=199841 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *********************************************************************************
2024-05-19 17:57:10,315 p=199841 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716121629, "cache_updated": false, "changed": false, "item": "git"}
2024-05-19 17:57:11,051 p=199841 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716121629, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-19 17:57:11,770 p=199841 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716121629, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-19 17:57:12,494 p=199841 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716121629, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-19 17:57:13,203 p=199841 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716121629, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-19 17:57:13,917 p=199841 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716121629, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-19 17:57:14,674 p=199841 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716121629, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-19 17:57:15,394 p=199841 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716121629, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-19 17:57:16,113 p=199841 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716121629, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-19 17:57:16,839 p=199841 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716121629, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-19 17:57:17,555 p=199841 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716121629, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-19 17:57:18,256 p=199841 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716121629, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-19 17:57:18,968 p=199841 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716121629, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-19 17:57:19,678 p=199841 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716121629, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-19 17:57:20,384 p=199841 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716121629, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-19 17:57:21,086 p=199841 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716121629, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-19 17:57:21,096 p=199841 u=root n=ansible | TASK [setup : install all command line tool on macOS] ************************************************************************************************
2024-05-19 17:57:21,110 p=199841 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-19 17:57:21,114 p=199841 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-19 17:57:21,119 p=199841 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-19 17:57:21,125 p=199841 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-19 17:57:21,125 p=199841 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-19 17:57:21,125 p=199841 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-19 17:57:21,126 p=199841 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-19 17:57:21,130 p=199841 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-19 17:57:21,133 p=199841 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-19 17:57:21,133 p=199841 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-19 17:57:21,134 p=199841 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-19 17:57:21,134 p=199841 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-19 17:57:21,134 p=199841 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-19 17:57:21,134 p=199841 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-19 17:57:21,135 p=199841 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-19 17:57:21,135 p=199841 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-19 17:57:21,135 p=199841 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-19 17:57:21,145 p=199841 u=root n=ansible | TASK [setup : install python tools] ******************************************************************************************************************
2024-05-19 17:57:23,005 p=199841 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.616633", "end": "2024-05-19 17:57:22.976453", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-19 17:57:21.359820", "stderr": "WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv", "stderr_lines": ["WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv"], "stdout": "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-19 17:57:24,689 p=199841 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.544553", "end": "2024-05-19 17:57:24.669810", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-19 17:57:23.125257", "stderr": "WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv", "stderr_lines": ["WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv"], "stdout": "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-19 17:57:26,355 p=199841 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.539976", "end": "2024-05-19 17:57:26.337903", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-19 17:57:24.797927", "stderr": "WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv", "stderr_lines": ["WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv"], "stdout": "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-19 17:57:26,363 p=199841 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-19 17:57:26,376 p=199841 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-19 17:57:26,384 p=199841 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-19 17:57:27,303 p=199841 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716121629, "cache_updated": false, "changed": false}
2024-05-19 17:57:27,311 p=199841 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-19 17:57:27,322 p=199841 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:57:27,330 p=199841 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-19 17:57:27,573 p=199841 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-19 17:57:27,583 p=199841 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-19 17:57:28,565 p=199841 u=root n=ansible | ok: [localhost] => {"after": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "before": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "changed": false, "remote_url_changed": false}
2024-05-19 17:57:28,574 p=199841 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-19 17:57:28,586 p=199841 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:57:28,594 p=199841 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-19 17:57:28,609 p=199841 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-19 17:57:28,619 p=199841 u=root n=ansible | TASK [setup : Install NVM] ***************************************************************************************************************************
2024-05-19 17:57:29,176 p=199841 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["curl", "-o-", "https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh", "|", "bash"], "delta": "0:00:00.383010", "end": "2024-05-19 17:57:29.146783", "msg": "non-zero return code", "rc": 6, "start": "2024-05-19 17:57:28.763773", "stderr": "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100 13527  100 13527    0     0  37281      0 --:--:-- --:--:-- --:--:-- 37367\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: |\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: bash", "stderr_lines": ["  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current", "                                 Dload  Upload   Total   Spent    Left  Speed", "", "  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0", "100 13527  100 13527    0     0  37281      0 --:--:-- --:--:-- --:--:-- 37367", "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current", "                                 Dload  Upload   Total   Spent    Left  Speed", "", "  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: |", "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current", "                                 Dload  Upload   Total   Spent    Left  Speed", "", "  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: bash"], "stdout": "#!/usr/bin/env bash\n\n{ # this ensures the entire script is downloaded #\n\nnvm_has() {\n  type \"$1\" > /dev/null 2>&1\n}\n\nnvm_default_install_dir() {\n  [ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\"\n}\n\nnvm_install_dir() {\n  if [ -n \"$NVM_DIR\" ]; then\n    printf %s \"${NVM_DIR}\"\n  else\n    nvm_default_install_dir\n  fi\n}\n\nnvm_latest_version() {\n  echo \"v0.35.3\"\n}\n\nnvm_profile_is_bash_or_zsh() {\n  local TEST_PROFILE\n  TEST_PROFILE=\"${1-}\"\n  case \"${TEST_PROFILE-}\" in\n    *\"/.bashrc\" | *\"/.bash_profile\" | *\"/.zshrc\")\n      return\n    ;;\n    *)\n      return 1\n    ;;\n  esac\n}\n\n#\n# Outputs the location to NVM depending on:\n# * The availability of $NVM_SOURCE\n# * The method used (\"script\" or \"git\" in the script, defaults to \"git\")\n# NVM_SOURCE always takes precedence unless the method is \"script-nvm-exec\"\n#\nnvm_source() {\n  local NVM_METHOD\n  NVM_METHOD=\"$1\"\n  local NVM_SOURCE_URL\n  NVM_SOURCE_URL=\"$NVM_SOURCE\"\n  if [ \"_$NVM_METHOD\" = \"_script-nvm-exec\" ]; then\n    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm-exec\"\n  elif [ \"_$NVM_METHOD\" = \"_script-nvm-bash-completion\" ]; then\n    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/bash_completion\"\n  elif [ -z \"$NVM_SOURCE_URL\" ]; then\n    if [ \"_$NVM_METHOD\" = \"_script\" ]; then\n      NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm.sh\"\n    elif [ \"_$NVM_METHOD\" = \"_git\" ] || [ -z \"$NVM_METHOD\" ]; then\n      NVM_SOURCE_URL=\"https://github.com/nvm-sh/nvm.git\"\n    else\n      echo >&2 \"Unexpected value \\\"$NVM_METHOD\\\" for \\$NVM_METHOD\"\n      return 1\n    fi\n  fi\n  echo \"$NVM_SOURCE_URL\"\n}\n\n#\n# Node.js version to install\n#\nnvm_node_version() {\n  echo \"$NODE_VERSION\"\n}\n\nnvm_download() {\n  if nvm_has \"curl\"; then\n    curl --compressed -q \"$@\"\n  elif nvm_has \"wget\"; then\n    # Emulate curl with wget\n    ARGS=$(echo \"$*\" | command sed -e 's/--progress-bar /--progress=bar /' \\\n                            -e 's/-L //' \\\n                            -e 's/--compressed //' \\\n                            -e 's/-I /--server-response /' \\\n                            -e 's/-s /-q /' \\\n                            -e 's/-o /-O /' \\\n                            -e 's/-C - /-c /')\n    # shellcheck disable=SC2086\n    eval wget $ARGS\n  fi\n}\n\ninstall_nvm_from_git() {\n  local INSTALL_DIR\n  INSTALL_DIR=\"$(nvm_install_dir)\"\n\n  if [ -d \"$INSTALL_DIR/.git\" ]; then\n    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update using git\"\n    command printf '\\r=> '\n    command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 2> /dev/null || {\n      echo >&2 \"Failed to update nvm, run 'git fetch' in $INSTALL_DIR yourself.\"\n      exit 1\n    }\n  else\n    # Cloning to $INSTALL_DIR\n    echo \"=> Downloading nvm from git to '$INSTALL_DIR'\"\n    command printf '\\r=> '\n    mkdir -p \"${INSTALL_DIR}\"\n    if [ \"$(ls -A \"${INSTALL_DIR}\")\" ]; then\n      command git init \"${INSTALL_DIR}\" || {\n        echo >&2 'Failed to initialize nvm repo. Please report this!'\n        exit 2\n      }\n      command git --git-dir=\"${INSTALL_DIR}/.git\" remote add origin \"$(nvm_source)\" 2> /dev/null \\\n        || command git --git-dir=\"${INSTALL_DIR}/.git\" remote set-url origin \"$(nvm_source)\" || {\n        echo >&2 'Failed to add remote \"origin\" (or set the URL). Please report this!'\n        exit 2\n      }\n      command git --git-dir=\"${INSTALL_DIR}/.git\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 || {\n        echo >&2 'Failed to fetch origin with tags. Please report this!'\n        exit 2\n      }\n    else\n      command git -c advice.detachedHead=false clone \"$(nvm_source)\" -b \"$(nvm_latest_version)\" --depth=1 \"${INSTALL_DIR}\" || {\n        echo >&2 'Failed to clone nvm repo. Please report this!'\n        exit 2\n      }\n    fi\n  fi\n  command git -c advice.detachedHead=false --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" checkout -f --quiet \"$(nvm_latest_version)\"\n  if [ -n \"$(command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" show-ref refs/heads/master)\" ]; then\n    if command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet 2>/dev/null; then\n      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet -D master >/dev/null 2>&1\n    else\n      echo >&2 \"Your version of git is out of date. Please update it!\"\n      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch -D master >/dev/null 2>&1\n    fi\n  fi\n\n  echo \"=> Compressing and cleaning up git repository\"\n  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" reflog expire --expire=now --all; then\n    echo >&2 \"Your version of git is out of date. Please update it!\"\n  fi\n  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" gc --auto --aggressive --prune=now ; then\n    echo >&2 \"Your version of git is out of date. Please update it!\"\n  fi\n  return\n}\n\n#\n# Automatically install Node.js\n#\nnvm_install_node() {\n  local NODE_VERSION_LOCAL\n  NODE_VERSION_LOCAL=\"$(nvm_node_version)\"\n\n  if [ -z \"$NODE_VERSION_LOCAL\" ]; then\n    return 0\n  fi\n\n  echo \"=> Installing Node.js version $NODE_VERSION_LOCAL\"\n  nvm install \"$NODE_VERSION_LOCAL\"\n  local CURRENT_NVM_NODE\n\n  CURRENT_NVM_NODE=\"$(nvm_version current)\"\n  if [ \"$(nvm_version \"$NODE_VERSION_LOCAL\")\" == \"$CURRENT_NVM_NODE\" ]; then\n    echo \"=> Node.js version $NODE_VERSION_LOCAL has been successfully installed\"\n  else\n    echo >&2 \"Failed to install Node.js $NODE_VERSION_LOCAL\"\n  fi\n}\n\ninstall_nvm_as_script() {\n  local INSTALL_DIR\n  INSTALL_DIR=\"$(nvm_install_dir)\"\n  local NVM_SOURCE_LOCAL\n  NVM_SOURCE_LOCAL=\"$(nvm_source script)\"\n  local NVM_EXEC_SOURCE\n  NVM_EXEC_SOURCE=\"$(nvm_source script-nvm-exec)\"\n  local NVM_BASH_COMPLETION_SOURCE\n  NVM_BASH_COMPLETION_SOURCE=\"$(nvm_source script-nvm-bash-completion)\"\n\n  # Downloading to $INSTALL_DIR\n  mkdir -p \"$INSTALL_DIR\"\n  if [ -f \"$INSTALL_DIR/nvm.sh\" ]; then\n    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update the script\"\n  else\n    echo \"=> Downloading nvm as script to '$INSTALL_DIR'\"\n  fi\n  nvm_download -s \"$NVM_SOURCE_LOCAL\" -o \"$INSTALL_DIR/nvm.sh\" || {\n    echo >&2 \"Failed to download '$NVM_SOURCE_LOCAL'\"\n    return 1\n  } &\n  nvm_download -s \"$NVM_EXEC_SOURCE\" -o \"$INSTALL_DIR/nvm-exec\" || {\n    echo >&2 \"Failed to download '$NVM_EXEC_SOURCE'\"\n    return 2\n  } &\n  nvm_download -s \"$NVM_BASH_COMPLETION_SOURCE\" -o \"$INSTALL_DIR/bash_completion\" || {\n    echo >&2 \"Failed to download '$NVM_BASH_COMPLETION_SOURCE'\"\n    return 2\n  } &\n  for job in $(jobs -p | command sort)\n  do\n    wait \"$job\" || return $?\n  done\n  chmod a+x \"$INSTALL_DIR/nvm-exec\" || {\n    echo >&2 \"Failed to mark '$INSTALL_DIR/nvm-exec' as executable\"\n    return 3\n  }\n}\n\nnvm_try_profile() {\n  if [ -z \"${1-}\" ] || [ ! -f \"${1}\" ]; then\n    return 1\n  fi\n  echo \"${1}\"\n}\n\n#\n# Detect profile file if not specified as environment variable\n# (eg: PROFILE=~/.myprofile)\n# The echo'ed path is guaranteed to be an existing file\n# Otherwise, an empty string is returned\n#\nnvm_detect_profile() {\n  if [ \"${PROFILE-}\" = '/dev/null' ]; then\n    # the user has specifically requested NOT to have nvm touch their profile\n    return\n  fi\n\n  if [ -n \"${PROFILE}\" ] && [ -f \"${PROFILE}\" ]; then\n    echo \"${PROFILE}\"\n    return\n  fi\n\n  local DETECTED_PROFILE\n  DETECTED_PROFILE=''\n\n  if [ -n \"${BASH_VERSION-}\" ]; then\n    if [ -f \"$HOME/.bashrc\" ]; then\n      DETECTED_PROFILE=\"$HOME/.bashrc\"\n    elif [ -f \"$HOME/.bash_profile\" ]; then\n      DETECTED_PROFILE=\"$HOME/.bash_profile\"\n    fi\n  elif [ -n \"${ZSH_VERSION-}\" ]; then\n    DETECTED_PROFILE=\"$HOME/.zshrc\"\n  fi\n\n  if [ -z \"$DETECTED_PROFILE\" ]; then\n    for EACH_PROFILE in \".profile\" \".bashrc\" \".bash_profile\" \".zshrc\"\n    do\n      if DETECTED_PROFILE=\"$(nvm_try_profile \"${HOME}/${EACH_PROFILE}\")\"; then\n        break\n      fi\n    done\n  fi\n\n  if [ -n \"$DETECTED_PROFILE\" ]; then\n    echo \"$DETECTED_PROFILE\"\n  fi\n}\n\n#\n# Check whether the user has any globally-installed npm modules in their system\n# Node, and warn them if so.\n#\nnvm_check_global_modules() {\n  command -v npm >/dev/null 2>&1 || return 0\n\n  local NPM_VERSION\n  NPM_VERSION=\"$(npm --version)\"\n  NPM_VERSION=\"${NPM_VERSION:--1}\"\n  [ \"${NPM_VERSION%%[!-0-9]*}\" -gt 0 ] || return 0\n\n  local NPM_GLOBAL_MODULES\n  NPM_GLOBAL_MODULES=\"$(\n    npm list -g --depth=0 |\n    command sed -e '/ npm@/d' -e '/ (empty)$/d'\n  )\"\n\n  local MODULE_COUNT\n  MODULE_COUNT=\"$(\n    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\" |\n    command sed -ne '1!p' |                     # Remove the first line\n    wc -l | command tr -d ' '                   # Count entries\n  )\"\n\n  if [ \"${MODULE_COUNT}\" != '0' ]; then\n    # shellcheck disable=SC2016\n    echo '=> You currently have modules installed globally with `npm`. These will no'\n    # shellcheck disable=SC2016\n    echo '=> longer be linked to the active version of Node when you install a new node'\n    # shellcheck disable=SC2016\n    echo '=> with `nvm`; and they may (depending on how you construct your `$PATH`)'\n    # shellcheck disable=SC2016\n    echo '=> override the binaries of modules installed with `nvm`:'\n    echo\n\n    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\"\n    echo '=> If you wish to uninstall them at a later point (or re-install them under your'\n    # shellcheck disable=SC2016\n    echo '=> `nvm` Nodes), you can remove them from the system Node as follows:'\n    echo\n    echo '     $ nvm use system'\n    echo '     $ npm uninstall -g a_module'\n    echo\n  fi\n}\n\nnvm_do_install() {\n  if [ -n \"${NVM_DIR-}\" ] && ! [ -d \"${NVM_DIR}\" ]; then\n    if [ -e \"${NVM_DIR}\" ]; then\n      echo >&2 \"File \\\"${NVM_DIR}\\\" has the same name as installation directory.\"\n      exit 1\n    fi\n\n    if [ \"${NVM_DIR}\" = \"$(nvm_default_install_dir)\" ]; then\n      mkdir \"${NVM_DIR}\"\n    else\n      echo >&2 \"You have \\$NVM_DIR set to \\\"${NVM_DIR}\\\", but that directory does not exist. Check your profile files and environment.\"\n      exit 1\n    fi\n  fi\n  if [ -z \"${METHOD}\" ]; then\n    # Autodetect install method\n    if nvm_has git; then\n      install_nvm_from_git\n    elif nvm_has nvm_download; then\n      install_nvm_as_script\n    else\n      echo >&2 'You need git, curl, or wget to install nvm'\n      exit 1\n    fi\n  elif [ \"${METHOD}\" = 'git' ]; then\n    if ! nvm_has git; then\n      echo >&2 \"You need git to install nvm\"\n      exit 1\n    fi\n    install_nvm_from_git\n  elif [ \"${METHOD}\" = 'script' ]; then\n    if ! nvm_has nvm_download; then\n      echo >&2 \"You need curl or wget to install nvm\"\n      exit 1\n    fi\n    install_nvm_as_script\n  else\n    echo >&2 \"The environment variable \\$METHOD is set to \\\"${METHOD}\\\", which is not recognized as a valid installation method.\"\n    exit 1\n  fi\n\n  echo\n\n  local NVM_PROFILE\n  NVM_PROFILE=\"$(nvm_detect_profile)\"\n  local PROFILE_INSTALL_DIR\n  PROFILE_INSTALL_DIR=\"$(nvm_install_dir | command sed \"s:^$HOME:\\$HOME:\")\"\n\n  SOURCE_STR=\"\\\\nexport NVM_DIR=\\\"${PROFILE_INSTALL_DIR}\\\"\\\\n[ -s \\\"\\$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"\\$NVM_DIR/nvm.sh\\\"  # This loads nvm\\\\n\"\n\n  # shellcheck disable=SC2016\n  COMPLETION_STR='[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\\n'\n  BASH_OR_ZSH=false\n\n  if [ -z \"${NVM_PROFILE-}\" ] ; then\n    local TRIED_PROFILE\n    if [ -n \"${PROFILE}\" ]; then\n      TRIED_PROFILE=\"${NVM_PROFILE} (as defined in \\$PROFILE), \"\n    fi\n    echo \"=> Profile not found. Tried ${TRIED_PROFILE-}~/.bashrc, ~/.bash_profile, ~/.zshrc, and ~/.profile.\"\n    echo \"=> Create one of them and run this script again\"\n    echo \"   OR\"\n    echo \"=> Append the following lines to the correct file yourself:\"\n    command printf \"${SOURCE_STR}\"\n    echo\n  else\n    if nvm_profile_is_bash_or_zsh \"${NVM_PROFILE-}\"; then\n      BASH_OR_ZSH=true\n    fi\n    if ! command grep -qc '/nvm.sh' \"$NVM_PROFILE\"; then\n      echo \"=> Appending nvm source string to $NVM_PROFILE\"\n      command printf \"${SOURCE_STR}\" >> \"$NVM_PROFILE\"\n    else\n      echo \"=> nvm source string already in ${NVM_PROFILE}\"\n    fi\n    # shellcheck disable=SC2016\n    if ${BASH_OR_ZSH} && ! command grep -qc '$NVM_DIR/bash_completion' \"$NVM_PROFILE\"; then\n      echo \"=> Appending bash_completion source string to $NVM_PROFILE\"\n      command printf \"$COMPLETION_STR\" >> \"$NVM_PROFILE\"\n    else\n      echo \"=> bash_completion source string already in ${NVM_PROFILE}\"\n    fi\n  fi\n  if ${BASH_OR_ZSH} && [ -z \"${NVM_PROFILE-}\" ] ; then\n    echo \"=> Please also append the following lines to the if you are using bash/zsh shell:\"\n    command printf \"${COMPLETION_STR}\"\n  fi\n\n  # Source nvm\n  # shellcheck source=/dev/null\n  \\. \"$(nvm_install_dir)/nvm.sh\"\n\n  nvm_check_global_modules\n\n  nvm_install_node\n\n  nvm_reset\n\n  echo \"=> Close and reopen your terminal to start using nvm or run the following to use it now:\"\n  command printf \"${SOURCE_STR}\"\n  if ${BASH_OR_ZSH} ; then\n    command printf \"${COMPLETION_STR}\"\n  fi\n}\n\n#\n# Unsets the various functions defined\n# during the execution of the install script\n#\nnvm_reset() {\n  unset -f nvm_has nvm_install_dir nvm_latest_version nvm_profile_is_bash_or_zsh \\\n    nvm_source nvm_node_version nvm_download install_nvm_from_git nvm_install_node \\\n    install_nvm_as_script nvm_try_profile nvm_detect_profile nvm_check_global_modules \\\n    nvm_do_install nvm_reset nvm_default_install_dir\n}\n\n[ \"_$NVM_ENV\" = \"_testing\" ] || nvm_do_install\n\n} # this ensures the entire script is downloaded #", "stdout_lines": ["#!/usr/bin/env bash", "", "{ # this ensures the entire script is downloaded #", "", "nvm_has() {", "  type \"$1\" > /dev/null 2>&1", "}", "", "nvm_default_install_dir() {", "  [ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\"", "}", "", "nvm_install_dir() {", "  if [ -n \"$NVM_DIR\" ]; then", "    printf %s \"${NVM_DIR}\"", "  else", "    nvm_default_install_dir", "  fi", "}", "", "nvm_latest_version() {", "  echo \"v0.35.3\"", "}", "", "nvm_profile_is_bash_or_zsh() {", "  local TEST_PROFILE", "  TEST_PROFILE=\"${1-}\"", "  case \"${TEST_PROFILE-}\" in", "    *\"/.bashrc\" | *\"/.bash_profile\" | *\"/.zshrc\")", "      return", "    ;;", "    *)", "      return 1", "    ;;", "  esac", "}", "", "#", "# Outputs the location to NVM depending on:", "# * The availability of $NVM_SOURCE", "# * The method used (\"script\" or \"git\" in the script, defaults to \"git\")", "# NVM_SOURCE always takes precedence unless the method is \"script-nvm-exec\"", "#", "nvm_source() {", "  local NVM_METHOD", "  NVM_METHOD=\"$1\"", "  local NVM_SOURCE_URL", "  NVM_SOURCE_URL=\"$NVM_SOURCE\"", "  if [ \"_$NVM_METHOD\" = \"_script-nvm-exec\" ]; then", "    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm-exec\"", "  elif [ \"_$NVM_METHOD\" = \"_script-nvm-bash-completion\" ]; then", "    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/bash_completion\"", "  elif [ -z \"$NVM_SOURCE_URL\" ]; then", "    if [ \"_$NVM_METHOD\" = \"_script\" ]; then", "      NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm.sh\"", "    elif [ \"_$NVM_METHOD\" = \"_git\" ] || [ -z \"$NVM_METHOD\" ]; then", "      NVM_SOURCE_URL=\"https://github.com/nvm-sh/nvm.git\"", "    else", "      echo >&2 \"Unexpected value \\\"$NVM_METHOD\\\" for \\$NVM_METHOD\"", "      return 1", "    fi", "  fi", "  echo \"$NVM_SOURCE_URL\"", "}", "", "#", "# Node.js version to install", "#", "nvm_node_version() {", "  echo \"$NODE_VERSION\"", "}", "", "nvm_download() {", "  if nvm_has \"curl\"; then", "    curl --compressed -q \"$@\"", "  elif nvm_has \"wget\"; then", "    # Emulate curl with wget", "    ARGS=$(echo \"$*\" | command sed -e 's/--progress-bar /--progress=bar /' \\", "                            -e 's/-L //' \\", "                            -e 's/--compressed //' \\", "                            -e 's/-I /--server-response /' \\", "                            -e 's/-s /-q /' \\", "                            -e 's/-o /-O /' \\", "                            -e 's/-C - /-c /')", "    # shellcheck disable=SC2086", "    eval wget $ARGS", "  fi", "}", "", "install_nvm_from_git() {", "  local INSTALL_DIR", "  INSTALL_DIR=\"$(nvm_install_dir)\"", "", "  if [ -d \"$INSTALL_DIR/.git\" ]; then", "    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update using git\"", "    command printf '\\r=> '", "    command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 2> /dev/null || {", "      echo >&2 \"Failed to update nvm, run 'git fetch' in $INSTALL_DIR yourself.\"", "      exit 1", "    }", "  else", "    # Cloning to $INSTALL_DIR", "    echo \"=> Downloading nvm from git to '$INSTALL_DIR'\"", "    command printf '\\r=> '", "    mkdir -p \"${INSTALL_DIR}\"", "    if [ \"$(ls -A \"${INSTALL_DIR}\")\" ]; then", "      command git init \"${INSTALL_DIR}\" || {", "        echo >&2 'Failed to initialize nvm repo. Please report this!'", "        exit 2", "      }", "      command git --git-dir=\"${INSTALL_DIR}/.git\" remote add origin \"$(nvm_source)\" 2> /dev/null \\", "        || command git --git-dir=\"${INSTALL_DIR}/.git\" remote set-url origin \"$(nvm_source)\" || {", "        echo >&2 'Failed to add remote \"origin\" (or set the URL). Please report this!'", "        exit 2", "      }", "      command git --git-dir=\"${INSTALL_DIR}/.git\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 || {", "        echo >&2 'Failed to fetch origin with tags. Please report this!'", "        exit 2", "      }", "    else", "      command git -c advice.detachedHead=false clone \"$(nvm_source)\" -b \"$(nvm_latest_version)\" --depth=1 \"${INSTALL_DIR}\" || {", "        echo >&2 'Failed to clone nvm repo. Please report this!'", "        exit 2", "      }", "    fi", "  fi", "  command git -c advice.detachedHead=false --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" checkout -f --quiet \"$(nvm_latest_version)\"", "  if [ -n \"$(command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" show-ref refs/heads/master)\" ]; then", "    if command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet 2>/dev/null; then", "      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet -D master >/dev/null 2>&1", "    else", "      echo >&2 \"Your version of git is out of date. Please update it!\"", "      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch -D master >/dev/null 2>&1", "    fi", "  fi", "", "  echo \"=> Compressing and cleaning up git repository\"", "  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" reflog expire --expire=now --all; then", "    echo >&2 \"Your version of git is out of date. Please update it!\"", "  fi", "  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" gc --auto --aggressive --prune=now ; then", "    echo >&2 \"Your version of git is out of date. Please update it!\"", "  fi", "  return", "}", "", "#", "# Automatically install Node.js", "#", "nvm_install_node() {", "  local NODE_VERSION_LOCAL", "  NODE_VERSION_LOCAL=\"$(nvm_node_version)\"", "", "  if [ -z \"$NODE_VERSION_LOCAL\" ]; then", "    return 0", "  fi", "", "  echo \"=> Installing Node.js version $NODE_VERSION_LOCAL\"", "  nvm install \"$NODE_VERSION_LOCAL\"", "  local CURRENT_NVM_NODE", "", "  CURRENT_NVM_NODE=\"$(nvm_version current)\"", "  if [ \"$(nvm_version \"$NODE_VERSION_LOCAL\")\" == \"$CURRENT_NVM_NODE\" ]; then", "    echo \"=> Node.js version $NODE_VERSION_LOCAL has been successfully installed\"", "  else", "    echo >&2 \"Failed to install Node.js $NODE_VERSION_LOCAL\"", "  fi", "}", "", "install_nvm_as_script() {", "  local INSTALL_DIR", "  INSTALL_DIR=\"$(nvm_install_dir)\"", "  local NVM_SOURCE_LOCAL", "  NVM_SOURCE_LOCAL=\"$(nvm_source script)\"", "  local NVM_EXEC_SOURCE", "  NVM_EXEC_SOURCE=\"$(nvm_source script-nvm-exec)\"", "  local NVM_BASH_COMPLETION_SOURCE", "  NVM_BASH_COMPLETION_SOURCE=\"$(nvm_source script-nvm-bash-completion)\"", "", "  # Downloading to $INSTALL_DIR", "  mkdir -p \"$INSTALL_DIR\"", "  if [ -f \"$INSTALL_DIR/nvm.sh\" ]; then", "    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update the script\"", "  else", "    echo \"=> Downloading nvm as script to '$INSTALL_DIR'\"", "  fi", "  nvm_download -s \"$NVM_SOURCE_LOCAL\" -o \"$INSTALL_DIR/nvm.sh\" || {", "    echo >&2 \"Failed to download '$NVM_SOURCE_LOCAL'\"", "    return 1", "  } &", "  nvm_download -s \"$NVM_EXEC_SOURCE\" -o \"$INSTALL_DIR/nvm-exec\" || {", "    echo >&2 \"Failed to download '$NVM_EXEC_SOURCE'\"", "    return 2", "  } &", "  nvm_download -s \"$NVM_BASH_COMPLETION_SOURCE\" -o \"$INSTALL_DIR/bash_completion\" || {", "    echo >&2 \"Failed to download '$NVM_BASH_COMPLETION_SOURCE'\"", "    return 2", "  } &", "  for job in $(jobs -p | command sort)", "  do", "    wait \"$job\" || return $?", "  done", "  chmod a+x \"$INSTALL_DIR/nvm-exec\" || {", "    echo >&2 \"Failed to mark '$INSTALL_DIR/nvm-exec' as executable\"", "    return 3", "  }", "}", "", "nvm_try_profile() {", "  if [ -z \"${1-}\" ] || [ ! -f \"${1}\" ]; then", "    return 1", "  fi", "  echo \"${1}\"", "}", "", "#", "# Detect profile file if not specified as environment variable", "# (eg: PROFILE=~/.myprofile)", "# The echo'ed path is guaranteed to be an existing file", "# Otherwise, an empty string is returned", "#", "nvm_detect_profile() {", "  if [ \"${PROFILE-}\" = '/dev/null' ]; then", "    # the user has specifically requested NOT to have nvm touch their profile", "    return", "  fi", "", "  if [ -n \"${PROFILE}\" ] && [ -f \"${PROFILE}\" ]; then", "    echo \"${PROFILE}\"", "    return", "  fi", "", "  local DETECTED_PROFILE", "  DETECTED_PROFILE=''", "", "  if [ -n \"${BASH_VERSION-}\" ]; then", "    if [ -f \"$HOME/.bashrc\" ]; then", "      DETECTED_PROFILE=\"$HOME/.bashrc\"", "    elif [ -f \"$HOME/.bash_profile\" ]; then", "      DETECTED_PROFILE=\"$HOME/.bash_profile\"", "    fi", "  elif [ -n \"${ZSH_VERSION-}\" ]; then", "    DETECTED_PROFILE=\"$HOME/.zshrc\"", "  fi", "", "  if [ -z \"$DETECTED_PROFILE\" ]; then", "    for EACH_PROFILE in \".profile\" \".bashrc\" \".bash_profile\" \".zshrc\"", "    do", "      if DETECTED_PROFILE=\"$(nvm_try_profile \"${HOME}/${EACH_PROFILE}\")\"; then", "        break", "      fi", "    done", "  fi", "", "  if [ -n \"$DETECTED_PROFILE\" ]; then", "    echo \"$DETECTED_PROFILE\"", "  fi", "}", "", "#", "# Check whether the user has any globally-installed npm modules in their system", "# Node, and warn them if so.", "#", "nvm_check_global_modules() {", "  command -v npm >/dev/null 2>&1 || return 0", "", "  local NPM_VERSION", "  NPM_VERSION=\"$(npm --version)\"", "  NPM_VERSION=\"${NPM_VERSION:--1}\"", "  [ \"${NPM_VERSION%%[!-0-9]*}\" -gt 0 ] || return 0", "", "  local NPM_GLOBAL_MODULES", "  NPM_GLOBAL_MODULES=\"$(", "    npm list -g --depth=0 |", "    command sed -e '/ npm@/d' -e '/ (empty)$/d'", "  )\"", "", "  local MODULE_COUNT", "  MODULE_COUNT=\"$(", "    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\" |", "    command sed -ne '1!p' |                     # Remove the first line", "    wc -l | command tr -d ' '                   # Count entries", "  )\"", "", "  if [ \"${MODULE_COUNT}\" != '0' ]; then", "    # shellcheck disable=SC2016", "    echo '=> You currently have modules installed globally with `npm`. These will no'", "    # shellcheck disable=SC2016", "    echo '=> longer be linked to the active version of Node when you install a new node'", "    # shellcheck disable=SC2016", "    echo '=> with `nvm`; and they may (depending on how you construct your `$PATH`)'", "    # shellcheck disable=SC2016", "    echo '=> override the binaries of modules installed with `nvm`:'", "    echo", "", "    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\"", "    echo '=> If you wish to uninstall them at a later point (or re-install them under your'", "    # shellcheck disable=SC2016", "    echo '=> `nvm` Nodes), you can remove them from the system Node as follows:'", "    echo", "    echo '     $ nvm use system'", "    echo '     $ npm uninstall -g a_module'", "    echo", "  fi", "}", "", "nvm_do_install() {", "  if [ -n \"${NVM_DIR-}\" ] && ! [ -d \"${NVM_DIR}\" ]; then", "    if [ -e \"${NVM_DIR}\" ]; then", "      echo >&2 \"File \\\"${NVM_DIR}\\\" has the same name as installation directory.\"", "      exit 1", "    fi", "", "    if [ \"${NVM_DIR}\" = \"$(nvm_default_install_dir)\" ]; then", "      mkdir \"${NVM_DIR}\"", "    else", "      echo >&2 \"You have \\$NVM_DIR set to \\\"${NVM_DIR}\\\", but that directory does not exist. Check your profile files and environment.\"", "      exit 1", "    fi", "  fi", "  if [ -z \"${METHOD}\" ]; then", "    # Autodetect install method", "    if nvm_has git; then", "      install_nvm_from_git", "    elif nvm_has nvm_download; then", "      install_nvm_as_script", "    else", "      echo >&2 'You need git, curl, or wget to install nvm'", "      exit 1", "    fi", "  elif [ \"${METHOD}\" = 'git' ]; then", "    if ! nvm_has git; then", "      echo >&2 \"You need git to install nvm\"", "      exit 1", "    fi", "    install_nvm_from_git", "  elif [ \"${METHOD}\" = 'script' ]; then", "    if ! nvm_has nvm_download; then", "      echo >&2 \"You need curl or wget to install nvm\"", "      exit 1", "    fi", "    install_nvm_as_script", "  else", "    echo >&2 \"The environment variable \\$METHOD is set to \\\"${METHOD}\\\", which is not recognized as a valid installation method.\"", "    exit 1", "  fi", "", "  echo", "", "  local NVM_PROFILE", "  NVM_PROFILE=\"$(nvm_detect_profile)\"", "  local PROFILE_INSTALL_DIR", "  PROFILE_INSTALL_DIR=\"$(nvm_install_dir | command sed \"s:^$HOME:\\$HOME:\")\"", "", "  SOURCE_STR=\"\\\\nexport NVM_DIR=\\\"${PROFILE_INSTALL_DIR}\\\"\\\\n[ -s \\\"\\$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"\\$NVM_DIR/nvm.sh\\\"  # This loads nvm\\\\n\"", "", "  # shellcheck disable=SC2016", "  COMPLETION_STR='[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\\n'", "  BASH_OR_ZSH=false", "", "  if [ -z \"${NVM_PROFILE-}\" ] ; then", "    local TRIED_PROFILE", "    if [ -n \"${PROFILE}\" ]; then", "      TRIED_PROFILE=\"${NVM_PROFILE} (as defined in \\$PROFILE), \"", "    fi", "    echo \"=> Profile not found. Tried ${TRIED_PROFILE-}~/.bashrc, ~/.bash_profile, ~/.zshrc, and ~/.profile.\"", "    echo \"=> Create one of them and run this script again\"", "    echo \"   OR\"", "    echo \"=> Append the following lines to the correct file yourself:\"", "    command printf \"${SOURCE_STR}\"", "    echo", "  else", "    if nvm_profile_is_bash_or_zsh \"${NVM_PROFILE-}\"; then", "      BASH_OR_ZSH=true", "    fi", "    if ! command grep -qc '/nvm.sh' \"$NVM_PROFILE\"; then", "      echo \"=> Appending nvm source string to $NVM_PROFILE\"", "      command printf \"${SOURCE_STR}\" >> \"$NVM_PROFILE\"", "    else", "      echo \"=> nvm source string already in ${NVM_PROFILE}\"", "    fi", "    # shellcheck disable=SC2016", "    if ${BASH_OR_ZSH} && ! command grep -qc '$NVM_DIR/bash_completion' \"$NVM_PROFILE\"; then", "      echo \"=> Appending bash_completion source string to $NVM_PROFILE\"", "      command printf \"$COMPLETION_STR\" >> \"$NVM_PROFILE\"", "    else", "      echo \"=> bash_completion source string already in ${NVM_PROFILE}\"", "    fi", "  fi", "  if ${BASH_OR_ZSH} && [ -z \"${NVM_PROFILE-}\" ] ; then", "    echo \"=> Please also append the following lines to the if you are using bash/zsh shell:\"", "    command printf \"${COMPLETION_STR}\"", "  fi", "", "  # Source nvm", "  # shellcheck source=/dev/null", "  \\. \"$(nvm_install_dir)/nvm.sh\"", "", "  nvm_check_global_modules", "", "  nvm_install_node", "", "  nvm_reset", "", "  echo \"=> Close and reopen your terminal to start using nvm or run the following to use it now:\"", "  command printf \"${SOURCE_STR}\"", "  if ${BASH_OR_ZSH} ; then", "    command printf \"${COMPLETION_STR}\"", "  fi", "}", "", "#", "# Unsets the various functions defined", "# during the execution of the install script", "#", "nvm_reset() {", "  unset -f nvm_has nvm_install_dir nvm_latest_version nvm_profile_is_bash_or_zsh \\", "    nvm_source nvm_node_version nvm_download install_nvm_from_git nvm_install_node \\", "    install_nvm_as_script nvm_try_profile nvm_detect_profile nvm_check_global_modules \\", "    nvm_do_install nvm_reset nvm_default_install_dir", "}", "", "[ \"_$NVM_ENV\" = \"_testing\" ] || nvm_do_install", "", "} # this ensures the entire script is downloaded #"]}
2024-05-19 17:57:29,177 p=199841 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-19 17:57:29,177 p=199841 u=root n=ansible | localhost                  : ok=12   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-19 17:59:53,695 p=202552 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-19 17:59:53,846 p=202552 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-19 17:59:53,854 p=202552 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-19 17:59:54,731 p=202552 u=root n=ansible | ok: [localhost]
2024-05-19 17:59:54,751 p=202552 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-19 17:59:55,644 p=202552 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716121629, "cache_updated": false, "changed": false}
2024-05-19 17:59:55,650 p=202552 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-19 17:59:55,660 p=202552 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:59:55,667 p=202552 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-19 17:59:55,679 p=202552 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:59:55,687 p=202552 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-19 17:59:58,430 p=202552 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716121797, "cache_updated": true, "changed": true}
2024-05-19 17:59:58,438 p=202552 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-19 17:59:58,451 p=202552 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-19 17:59:58,458 p=202552 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-19 17:59:58,468 p=202552 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 17:59:58,477 p=202552 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-19 17:59:58,487 p=202552 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 17:59:58,500 p=202552 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-19 17:59:58,514 p=202552 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-19 17:59:58,521 p=202552 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *********************************************************************************
2024-05-19 17:59:59,284 p=202552 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716121797, "cache_updated": false, "changed": false, "item": "git"}
2024-05-19 18:00:00,042 p=202552 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716121797, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-19 18:00:00,828 p=202552 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716121797, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-19 18:00:01,607 p=202552 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716121797, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-19 18:00:02,451 p=202552 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716121797, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-19 18:00:03,330 p=202552 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716121797, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-19 18:00:04,211 p=202552 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716121797, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-19 18:00:05,075 p=202552 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716121797, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-19 18:00:05,953 p=202552 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716121797, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-19 18:00:06,773 p=202552 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716121797, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-19 18:00:07,593 p=202552 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716121797, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-19 18:00:08,452 p=202552 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716121797, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-19 18:00:09,289 p=202552 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716121797, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-19 18:00:10,172 p=202552 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716121797, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-19 18:00:11,059 p=202552 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716121797, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-19 18:00:11,926 p=202552 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716121797, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-19 18:00:11,937 p=202552 u=root n=ansible | TASK [setup : install all command line tool on macOS] ************************************************************************************************
2024-05-19 18:00:11,951 p=202552 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-19 18:00:11,955 p=202552 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-19 18:00:11,960 p=202552 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-19 18:00:11,965 p=202552 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-19 18:00:11,966 p=202552 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-19 18:00:11,966 p=202552 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-19 18:00:11,966 p=202552 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-19 18:00:11,966 p=202552 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-19 18:00:11,971 p=202552 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-19 18:00:11,976 p=202552 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-19 18:00:11,978 p=202552 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-19 18:00:11,979 p=202552 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-19 18:00:11,980 p=202552 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-19 18:00:11,980 p=202552 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-19 18:00:11,980 p=202552 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-19 18:00:11,981 p=202552 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-19 18:00:11,982 p=202552 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-19 18:00:11,992 p=202552 u=root n=ansible | TASK [setup : install python tools] ******************************************************************************************************************
2024-05-19 18:00:12,560 p=202552 u=root n=ansible | failed: [localhost] (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck"], "delta": "0:00:00.292721", "end": "2024-05-19 18:00:12.536998", "item": "thefuck", "msg": "non-zero return code", "rc": 1, "start": "2024-05-19 18:00:12.244277", "stderr": "error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.", "stderr_lines": ["error: externally-managed-environment", "", "× This environment is externally managed", "╰─> To install Python packages system-wide, try apt install", "    python3-xyz, where xyz is the package you are trying to", "    install.", "    ", "    If you wish to install a non-Debian-packaged Python package,", "    create a virtual environment using python3 -m venv path/to/venv.", "    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make", "    sure you have python3-full installed.", "    ", "    If you wish to install a non-Debian packaged Python application,", "    it may be easiest to use pipx install xyz, which will manage a", "    virtual environment for you. Make sure you have pipx installed.", "    ", "    See /usr/share/doc/python3.11/README.venv for more information.", "", "note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.", "hint: See PEP 668 for the detailed specification."], "stdout": "", "stdout_lines": []}
2024-05-19 18:00:13,006 p=202552 u=root n=ansible | failed: [localhost] (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright"], "delta": "0:00:00.293070", "end": "2024-05-19 18:00:12.980929", "item": "pyright", "msg": "non-zero return code", "rc": 1, "start": "2024-05-19 18:00:12.687859", "stderr": "error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.", "stderr_lines": ["error: externally-managed-environment", "", "× This environment is externally managed", "╰─> To install Python packages system-wide, try apt install", "    python3-xyz, where xyz is the package you are trying to", "    install.", "    ", "    If you wish to install a non-Debian-packaged Python package,", "    create a virtual environment using python3 -m venv path/to/venv.", "    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make", "    sure you have python3-full installed.", "    ", "    If you wish to install a non-Debian packaged Python application,", "    it may be easiest to use pipx install xyz, which will manage a", "    virtual environment for you. Make sure you have pipx installed.", "    ", "    See /usr/share/doc/python3.11/README.venv for more information.", "", "note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.", "hint: See PEP 668 for the detailed specification."], "stdout": "", "stdout_lines": []}
2024-05-19 18:00:13,436 p=202552 u=root n=ansible | failed: [localhost] (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint"], "delta": "0:00:00.280634", "end": "2024-05-19 18:00:13.414193", "item": "pylint", "msg": "non-zero return code", "rc": 1, "start": "2024-05-19 18:00:13.133559", "stderr": "error: externally-managed-environment\n\n× This environment is externally managed\n╰─> To install Python packages system-wide, try apt install\n    python3-xyz, where xyz is the package you are trying to\n    install.\n    \n    If you wish to install a non-Debian-packaged Python package,\n    create a virtual environment using python3 -m venv path/to/venv.\n    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make\n    sure you have python3-full installed.\n    \n    If you wish to install a non-Debian packaged Python application,\n    it may be easiest to use pipx install xyz, which will manage a\n    virtual environment for you. Make sure you have pipx installed.\n    \n    See /usr/share/doc/python3.11/README.venv for more information.\n\nnote: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.\nhint: See PEP 668 for the detailed specification.", "stderr_lines": ["error: externally-managed-environment", "", "× This environment is externally managed", "╰─> To install Python packages system-wide, try apt install", "    python3-xyz, where xyz is the package you are trying to", "    install.", "    ", "    If you wish to install a non-Debian-packaged Python package,", "    create a virtual environment using python3 -m venv path/to/venv.", "    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make", "    sure you have python3-full installed.", "    ", "    If you wish to install a non-Debian packaged Python application,", "    it may be easiest to use pipx install xyz, which will manage a", "    virtual environment for you. Make sure you have pipx installed.", "    ", "    See /usr/share/doc/python3.11/README.venv for more information.", "", "note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.", "hint: See PEP 668 for the detailed specification."], "stdout": "", "stdout_lines": []}
2024-05-19 18:00:13,438 p=202552 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-19 18:00:13,438 p=202552 u=root n=ansible | localhost                  : ok=6    changed=1    unreachable=0    failed=1    skipped=5    rescued=0    ignored=0   
2024-05-19 18:01:51,895 p=204571 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-19 18:01:52,040 p=204571 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-19 18:01:52,048 p=204571 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-19 18:01:52,814 p=204571 u=root n=ansible | ok: [localhost]
2024-05-19 18:01:52,835 p=204571 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-19 18:01:53,705 p=204571 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716121797, "cache_updated": false, "changed": false}
2024-05-19 18:01:53,736 p=204571 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-19 18:01:53,746 p=204571 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 18:01:53,755 p=204571 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-19 18:01:53,765 p=204571 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 18:01:53,774 p=204571 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-19 18:01:56,645 p=204571 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716121916, "cache_updated": true, "changed": true}
2024-05-19 18:01:56,653 p=204571 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-19 18:01:56,667 p=204571 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-19 18:01:56,675 p=204571 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-19 18:01:56,684 p=204571 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 18:01:56,695 p=204571 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-19 18:01:56,704 p=204571 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 18:01:56,718 p=204571 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-19 18:01:56,731 p=204571 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-19 18:01:56,738 p=204571 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *********************************************************************************
2024-05-19 18:01:57,495 p=204571 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716121916, "cache_updated": false, "changed": false, "item": "git"}
2024-05-19 18:01:58,239 p=204571 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716121916, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-19 18:01:58,980 p=204571 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716121916, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-19 18:01:59,725 p=204571 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716121916, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-19 18:02:00,484 p=204571 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716121916, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-19 18:02:01,234 p=204571 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716121916, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-19 18:02:01,982 p=204571 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716121916, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-19 18:02:02,745 p=204571 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716121916, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-19 18:02:03,531 p=204571 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716121916, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-19 18:02:04,287 p=204571 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716121916, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-19 18:02:05,115 p=204571 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716121916, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-19 18:02:05,885 p=204571 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716121916, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-19 18:02:06,650 p=204571 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716121916, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-19 18:02:07,450 p=204571 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716121916, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-19 18:02:08,201 p=204571 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716121916, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-19 18:02:08,976 p=204571 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716121916, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-19 18:02:08,987 p=204571 u=root n=ansible | TASK [setup : install all command line tool on macOS] ************************************************************************************************
2024-05-19 18:02:08,999 p=204571 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-19 18:02:09,004 p=204571 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-19 18:02:09,009 p=204571 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-19 18:02:09,014 p=204571 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-19 18:02:09,019 p=204571 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-19 18:02:09,023 p=204571 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-19 18:02:09,024 p=204571 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-19 18:02:09,024 p=204571 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-19 18:02:09,024 p=204571 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-19 18:02:09,025 p=204571 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-19 18:02:09,025 p=204571 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-19 18:02:09,025 p=204571 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-19 18:02:09,025 p=204571 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-19 18:02:09,025 p=204571 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-19 18:02:09,026 p=204571 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-19 18:02:09,026 p=204571 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-19 18:02:09,027 p=204571 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-19 18:02:09,036 p=204571 u=root n=ansible | TASK [setup : install python tools] ******************************************************************************************************************
2024-05-19 18:02:10,776 p=204571 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.487533", "end": "2024-05-19 18:02:10.753761", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-19 18:02:09.266228", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-19 18:02:12,408 p=204571 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.490390", "end": "2024-05-19 18:02:12.385012", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-19 18:02:10.894622", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-19 18:02:14,043 p=204571 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.485295", "end": "2024-05-19 18:02:14.022901", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-19 18:02:12.537606", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-19 18:02:14,051 p=204571 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-19 18:02:14,064 p=204571 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-19 18:02:14,074 p=204571 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-19 18:02:14,882 p=204571 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716121916, "cache_updated": false, "changed": false}
2024-05-19 18:02:14,891 p=204571 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-19 18:02:14,904 p=204571 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 18:02:14,913 p=204571 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-19 18:02:15,169 p=204571 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-19 18:02:15,177 p=204571 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-19 18:02:16,155 p=204571 u=root n=ansible | ok: [localhost] => {"after": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "before": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "changed": false, "remote_url_changed": false}
2024-05-19 18:02:16,163 p=204571 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-19 18:02:16,175 p=204571 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 18:02:16,183 p=204571 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-19 18:02:16,196 p=204571 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-19 18:02:16,233 p=204571 u=root n=ansible | TASK [setup : Install NVM] ***************************************************************************************************************************
2024-05-19 18:02:16,460 p=204571 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["curl", "-o-", "https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh", "|", "bash"], "delta": "0:00:00.065803", "end": "2024-05-19 18:02:16.435741", "msg": "non-zero return code", "rc": 6, "start": "2024-05-19 18:02:16.369938", "stderr": "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100 13527  100 13527    0     0   231k      0 --:--:-- --:--:-- --:--:--  231k\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: |\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: bash", "stderr_lines": ["  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current", "                                 Dload  Upload   Total   Spent    Left  Speed", "", "  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0", "100 13527  100 13527    0     0   231k      0 --:--:-- --:--:-- --:--:--  231k", "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current", "                                 Dload  Upload   Total   Spent    Left  Speed", "", "  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: |", "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current", "                                 Dload  Upload   Total   Spent    Left  Speed", "", "  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: bash"], "stdout": "#!/usr/bin/env bash\n\n{ # this ensures the entire script is downloaded #\n\nnvm_has() {\n  type \"$1\" > /dev/null 2>&1\n}\n\nnvm_default_install_dir() {\n  [ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\"\n}\n\nnvm_install_dir() {\n  if [ -n \"$NVM_DIR\" ]; then\n    printf %s \"${NVM_DIR}\"\n  else\n    nvm_default_install_dir\n  fi\n}\n\nnvm_latest_version() {\n  echo \"v0.35.3\"\n}\n\nnvm_profile_is_bash_or_zsh() {\n  local TEST_PROFILE\n  TEST_PROFILE=\"${1-}\"\n  case \"${TEST_PROFILE-}\" in\n    *\"/.bashrc\" | *\"/.bash_profile\" | *\"/.zshrc\")\n      return\n    ;;\n    *)\n      return 1\n    ;;\n  esac\n}\n\n#\n# Outputs the location to NVM depending on:\n# * The availability of $NVM_SOURCE\n# * The method used (\"script\" or \"git\" in the script, defaults to \"git\")\n# NVM_SOURCE always takes precedence unless the method is \"script-nvm-exec\"\n#\nnvm_source() {\n  local NVM_METHOD\n  NVM_METHOD=\"$1\"\n  local NVM_SOURCE_URL\n  NVM_SOURCE_URL=\"$NVM_SOURCE\"\n  if [ \"_$NVM_METHOD\" = \"_script-nvm-exec\" ]; then\n    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm-exec\"\n  elif [ \"_$NVM_METHOD\" = \"_script-nvm-bash-completion\" ]; then\n    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/bash_completion\"\n  elif [ -z \"$NVM_SOURCE_URL\" ]; then\n    if [ \"_$NVM_METHOD\" = \"_script\" ]; then\n      NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm.sh\"\n    elif [ \"_$NVM_METHOD\" = \"_git\" ] || [ -z \"$NVM_METHOD\" ]; then\n      NVM_SOURCE_URL=\"https://github.com/nvm-sh/nvm.git\"\n    else\n      echo >&2 \"Unexpected value \\\"$NVM_METHOD\\\" for \\$NVM_METHOD\"\n      return 1\n    fi\n  fi\n  echo \"$NVM_SOURCE_URL\"\n}\n\n#\n# Node.js version to install\n#\nnvm_node_version() {\n  echo \"$NODE_VERSION\"\n}\n\nnvm_download() {\n  if nvm_has \"curl\"; then\n    curl --compressed -q \"$@\"\n  elif nvm_has \"wget\"; then\n    # Emulate curl with wget\n    ARGS=$(echo \"$*\" | command sed -e 's/--progress-bar /--progress=bar /' \\\n                            -e 's/-L //' \\\n                            -e 's/--compressed //' \\\n                            -e 's/-I /--server-response /' \\\n                            -e 's/-s /-q /' \\\n                            -e 's/-o /-O /' \\\n                            -e 's/-C - /-c /')\n    # shellcheck disable=SC2086\n    eval wget $ARGS\n  fi\n}\n\ninstall_nvm_from_git() {\n  local INSTALL_DIR\n  INSTALL_DIR=\"$(nvm_install_dir)\"\n\n  if [ -d \"$INSTALL_DIR/.git\" ]; then\n    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update using git\"\n    command printf '\\r=> '\n    command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 2> /dev/null || {\n      echo >&2 \"Failed to update nvm, run 'git fetch' in $INSTALL_DIR yourself.\"\n      exit 1\n    }\n  else\n    # Cloning to $INSTALL_DIR\n    echo \"=> Downloading nvm from git to '$INSTALL_DIR'\"\n    command printf '\\r=> '\n    mkdir -p \"${INSTALL_DIR}\"\n    if [ \"$(ls -A \"${INSTALL_DIR}\")\" ]; then\n      command git init \"${INSTALL_DIR}\" || {\n        echo >&2 'Failed to initialize nvm repo. Please report this!'\n        exit 2\n      }\n      command git --git-dir=\"${INSTALL_DIR}/.git\" remote add origin \"$(nvm_source)\" 2> /dev/null \\\n        || command git --git-dir=\"${INSTALL_DIR}/.git\" remote set-url origin \"$(nvm_source)\" || {\n        echo >&2 'Failed to add remote \"origin\" (or set the URL). Please report this!'\n        exit 2\n      }\n      command git --git-dir=\"${INSTALL_DIR}/.git\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 || {\n        echo >&2 'Failed to fetch origin with tags. Please report this!'\n        exit 2\n      }\n    else\n      command git -c advice.detachedHead=false clone \"$(nvm_source)\" -b \"$(nvm_latest_version)\" --depth=1 \"${INSTALL_DIR}\" || {\n        echo >&2 'Failed to clone nvm repo. Please report this!'\n        exit 2\n      }\n    fi\n  fi\n  command git -c advice.detachedHead=false --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" checkout -f --quiet \"$(nvm_latest_version)\"\n  if [ -n \"$(command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" show-ref refs/heads/master)\" ]; then\n    if command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet 2>/dev/null; then\n      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet -D master >/dev/null 2>&1\n    else\n      echo >&2 \"Your version of git is out of date. Please update it!\"\n      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch -D master >/dev/null 2>&1\n    fi\n  fi\n\n  echo \"=> Compressing and cleaning up git repository\"\n  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" reflog expire --expire=now --all; then\n    echo >&2 \"Your version of git is out of date. Please update it!\"\n  fi\n  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" gc --auto --aggressive --prune=now ; then\n    echo >&2 \"Your version of git is out of date. Please update it!\"\n  fi\n  return\n}\n\n#\n# Automatically install Node.js\n#\nnvm_install_node() {\n  local NODE_VERSION_LOCAL\n  NODE_VERSION_LOCAL=\"$(nvm_node_version)\"\n\n  if [ -z \"$NODE_VERSION_LOCAL\" ]; then\n    return 0\n  fi\n\n  echo \"=> Installing Node.js version $NODE_VERSION_LOCAL\"\n  nvm install \"$NODE_VERSION_LOCAL\"\n  local CURRENT_NVM_NODE\n\n  CURRENT_NVM_NODE=\"$(nvm_version current)\"\n  if [ \"$(nvm_version \"$NODE_VERSION_LOCAL\")\" == \"$CURRENT_NVM_NODE\" ]; then\n    echo \"=> Node.js version $NODE_VERSION_LOCAL has been successfully installed\"\n  else\n    echo >&2 \"Failed to install Node.js $NODE_VERSION_LOCAL\"\n  fi\n}\n\ninstall_nvm_as_script() {\n  local INSTALL_DIR\n  INSTALL_DIR=\"$(nvm_install_dir)\"\n  local NVM_SOURCE_LOCAL\n  NVM_SOURCE_LOCAL=\"$(nvm_source script)\"\n  local NVM_EXEC_SOURCE\n  NVM_EXEC_SOURCE=\"$(nvm_source script-nvm-exec)\"\n  local NVM_BASH_COMPLETION_SOURCE\n  NVM_BASH_COMPLETION_SOURCE=\"$(nvm_source script-nvm-bash-completion)\"\n\n  # Downloading to $INSTALL_DIR\n  mkdir -p \"$INSTALL_DIR\"\n  if [ -f \"$INSTALL_DIR/nvm.sh\" ]; then\n    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update the script\"\n  else\n    echo \"=> Downloading nvm as script to '$INSTALL_DIR'\"\n  fi\n  nvm_download -s \"$NVM_SOURCE_LOCAL\" -o \"$INSTALL_DIR/nvm.sh\" || {\n    echo >&2 \"Failed to download '$NVM_SOURCE_LOCAL'\"\n    return 1\n  } &\n  nvm_download -s \"$NVM_EXEC_SOURCE\" -o \"$INSTALL_DIR/nvm-exec\" || {\n    echo >&2 \"Failed to download '$NVM_EXEC_SOURCE'\"\n    return 2\n  } &\n  nvm_download -s \"$NVM_BASH_COMPLETION_SOURCE\" -o \"$INSTALL_DIR/bash_completion\" || {\n    echo >&2 \"Failed to download '$NVM_BASH_COMPLETION_SOURCE'\"\n    return 2\n  } &\n  for job in $(jobs -p | command sort)\n  do\n    wait \"$job\" || return $?\n  done\n  chmod a+x \"$INSTALL_DIR/nvm-exec\" || {\n    echo >&2 \"Failed to mark '$INSTALL_DIR/nvm-exec' as executable\"\n    return 3\n  }\n}\n\nnvm_try_profile() {\n  if [ -z \"${1-}\" ] || [ ! -f \"${1}\" ]; then\n    return 1\n  fi\n  echo \"${1}\"\n}\n\n#\n# Detect profile file if not specified as environment variable\n# (eg: PROFILE=~/.myprofile)\n# The echo'ed path is guaranteed to be an existing file\n# Otherwise, an empty string is returned\n#\nnvm_detect_profile() {\n  if [ \"${PROFILE-}\" = '/dev/null' ]; then\n    # the user has specifically requested NOT to have nvm touch their profile\n    return\n  fi\n\n  if [ -n \"${PROFILE}\" ] && [ -f \"${PROFILE}\" ]; then\n    echo \"${PROFILE}\"\n    return\n  fi\n\n  local DETECTED_PROFILE\n  DETECTED_PROFILE=''\n\n  if [ -n \"${BASH_VERSION-}\" ]; then\n    if [ -f \"$HOME/.bashrc\" ]; then\n      DETECTED_PROFILE=\"$HOME/.bashrc\"\n    elif [ -f \"$HOME/.bash_profile\" ]; then\n      DETECTED_PROFILE=\"$HOME/.bash_profile\"\n    fi\n  elif [ -n \"${ZSH_VERSION-}\" ]; then\n    DETECTED_PROFILE=\"$HOME/.zshrc\"\n  fi\n\n  if [ -z \"$DETECTED_PROFILE\" ]; then\n    for EACH_PROFILE in \".profile\" \".bashrc\" \".bash_profile\" \".zshrc\"\n    do\n      if DETECTED_PROFILE=\"$(nvm_try_profile \"${HOME}/${EACH_PROFILE}\")\"; then\n        break\n      fi\n    done\n  fi\n\n  if [ -n \"$DETECTED_PROFILE\" ]; then\n    echo \"$DETECTED_PROFILE\"\n  fi\n}\n\n#\n# Check whether the user has any globally-installed npm modules in their system\n# Node, and warn them if so.\n#\nnvm_check_global_modules() {\n  command -v npm >/dev/null 2>&1 || return 0\n\n  local NPM_VERSION\n  NPM_VERSION=\"$(npm --version)\"\n  NPM_VERSION=\"${NPM_VERSION:--1}\"\n  [ \"${NPM_VERSION%%[!-0-9]*}\" -gt 0 ] || return 0\n\n  local NPM_GLOBAL_MODULES\n  NPM_GLOBAL_MODULES=\"$(\n    npm list -g --depth=0 |\n    command sed -e '/ npm@/d' -e '/ (empty)$/d'\n  )\"\n\n  local MODULE_COUNT\n  MODULE_COUNT=\"$(\n    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\" |\n    command sed -ne '1!p' |                     # Remove the first line\n    wc -l | command tr -d ' '                   # Count entries\n  )\"\n\n  if [ \"${MODULE_COUNT}\" != '0' ]; then\n    # shellcheck disable=SC2016\n    echo '=> You currently have modules installed globally with `npm`. These will no'\n    # shellcheck disable=SC2016\n    echo '=> longer be linked to the active version of Node when you install a new node'\n    # shellcheck disable=SC2016\n    echo '=> with `nvm`; and they may (depending on how you construct your `$PATH`)'\n    # shellcheck disable=SC2016\n    echo '=> override the binaries of modules installed with `nvm`:'\n    echo\n\n    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\"\n    echo '=> If you wish to uninstall them at a later point (or re-install them under your'\n    # shellcheck disable=SC2016\n    echo '=> `nvm` Nodes), you can remove them from the system Node as follows:'\n    echo\n    echo '     $ nvm use system'\n    echo '     $ npm uninstall -g a_module'\n    echo\n  fi\n}\n\nnvm_do_install() {\n  if [ -n \"${NVM_DIR-}\" ] && ! [ -d \"${NVM_DIR}\" ]; then\n    if [ -e \"${NVM_DIR}\" ]; then\n      echo >&2 \"File \\\"${NVM_DIR}\\\" has the same name as installation directory.\"\n      exit 1\n    fi\n\n    if [ \"${NVM_DIR}\" = \"$(nvm_default_install_dir)\" ]; then\n      mkdir \"${NVM_DIR}\"\n    else\n      echo >&2 \"You have \\$NVM_DIR set to \\\"${NVM_DIR}\\\", but that directory does not exist. Check your profile files and environment.\"\n      exit 1\n    fi\n  fi\n  if [ -z \"${METHOD}\" ]; then\n    # Autodetect install method\n    if nvm_has git; then\n      install_nvm_from_git\n    elif nvm_has nvm_download; then\n      install_nvm_as_script\n    else\n      echo >&2 'You need git, curl, or wget to install nvm'\n      exit 1\n    fi\n  elif [ \"${METHOD}\" = 'git' ]; then\n    if ! nvm_has git; then\n      echo >&2 \"You need git to install nvm\"\n      exit 1\n    fi\n    install_nvm_from_git\n  elif [ \"${METHOD}\" = 'script' ]; then\n    if ! nvm_has nvm_download; then\n      echo >&2 \"You need curl or wget to install nvm\"\n      exit 1\n    fi\n    install_nvm_as_script\n  else\n    echo >&2 \"The environment variable \\$METHOD is set to \\\"${METHOD}\\\", which is not recognized as a valid installation method.\"\n    exit 1\n  fi\n\n  echo\n\n  local NVM_PROFILE\n  NVM_PROFILE=\"$(nvm_detect_profile)\"\n  local PROFILE_INSTALL_DIR\n  PROFILE_INSTALL_DIR=\"$(nvm_install_dir | command sed \"s:^$HOME:\\$HOME:\")\"\n\n  SOURCE_STR=\"\\\\nexport NVM_DIR=\\\"${PROFILE_INSTALL_DIR}\\\"\\\\n[ -s \\\"\\$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"\\$NVM_DIR/nvm.sh\\\"  # This loads nvm\\\\n\"\n\n  # shellcheck disable=SC2016\n  COMPLETION_STR='[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\\n'\n  BASH_OR_ZSH=false\n\n  if [ -z \"${NVM_PROFILE-}\" ] ; then\n    local TRIED_PROFILE\n    if [ -n \"${PROFILE}\" ]; then\n      TRIED_PROFILE=\"${NVM_PROFILE} (as defined in \\$PROFILE), \"\n    fi\n    echo \"=> Profile not found. Tried ${TRIED_PROFILE-}~/.bashrc, ~/.bash_profile, ~/.zshrc, and ~/.profile.\"\n    echo \"=> Create one of them and run this script again\"\n    echo \"   OR\"\n    echo \"=> Append the following lines to the correct file yourself:\"\n    command printf \"${SOURCE_STR}\"\n    echo\n  else\n    if nvm_profile_is_bash_or_zsh \"${NVM_PROFILE-}\"; then\n      BASH_OR_ZSH=true\n    fi\n    if ! command grep -qc '/nvm.sh' \"$NVM_PROFILE\"; then\n      echo \"=> Appending nvm source string to $NVM_PROFILE\"\n      command printf \"${SOURCE_STR}\" >> \"$NVM_PROFILE\"\n    else\n      echo \"=> nvm source string already in ${NVM_PROFILE}\"\n    fi\n    # shellcheck disable=SC2016\n    if ${BASH_OR_ZSH} && ! command grep -qc '$NVM_DIR/bash_completion' \"$NVM_PROFILE\"; then\n      echo \"=> Appending bash_completion source string to $NVM_PROFILE\"\n      command printf \"$COMPLETION_STR\" >> \"$NVM_PROFILE\"\n    else\n      echo \"=> bash_completion source string already in ${NVM_PROFILE}\"\n    fi\n  fi\n  if ${BASH_OR_ZSH} && [ -z \"${NVM_PROFILE-}\" ] ; then\n    echo \"=> Please also append the following lines to the if you are using bash/zsh shell:\"\n    command printf \"${COMPLETION_STR}\"\n  fi\n\n  # Source nvm\n  # shellcheck source=/dev/null\n  \\. \"$(nvm_install_dir)/nvm.sh\"\n\n  nvm_check_global_modules\n\n  nvm_install_node\n\n  nvm_reset\n\n  echo \"=> Close and reopen your terminal to start using nvm or run the following to use it now:\"\n  command printf \"${SOURCE_STR}\"\n  if ${BASH_OR_ZSH} ; then\n    command printf \"${COMPLETION_STR}\"\n  fi\n}\n\n#\n# Unsets the various functions defined\n# during the execution of the install script\n#\nnvm_reset() {\n  unset -f nvm_has nvm_install_dir nvm_latest_version nvm_profile_is_bash_or_zsh \\\n    nvm_source nvm_node_version nvm_download install_nvm_from_git nvm_install_node \\\n    install_nvm_as_script nvm_try_profile nvm_detect_profile nvm_check_global_modules \\\n    nvm_do_install nvm_reset nvm_default_install_dir\n}\n\n[ \"_$NVM_ENV\" = \"_testing\" ] || nvm_do_install\n\n} # this ensures the entire script is downloaded #", "stdout_lines": ["#!/usr/bin/env bash", "", "{ # this ensures the entire script is downloaded #", "", "nvm_has() {", "  type \"$1\" > /dev/null 2>&1", "}", "", "nvm_default_install_dir() {", "  [ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\"", "}", "", "nvm_install_dir() {", "  if [ -n \"$NVM_DIR\" ]; then", "    printf %s \"${NVM_DIR}\"", "  else", "    nvm_default_install_dir", "  fi", "}", "", "nvm_latest_version() {", "  echo \"v0.35.3\"", "}", "", "nvm_profile_is_bash_or_zsh() {", "  local TEST_PROFILE", "  TEST_PROFILE=\"${1-}\"", "  case \"${TEST_PROFILE-}\" in", "    *\"/.bashrc\" | *\"/.bash_profile\" | *\"/.zshrc\")", "      return", "    ;;", "    *)", "      return 1", "    ;;", "  esac", "}", "", "#", "# Outputs the location to NVM depending on:", "# * The availability of $NVM_SOURCE", "# * The method used (\"script\" or \"git\" in the script, defaults to \"git\")", "# NVM_SOURCE always takes precedence unless the method is \"script-nvm-exec\"", "#", "nvm_source() {", "  local NVM_METHOD", "  NVM_METHOD=\"$1\"", "  local NVM_SOURCE_URL", "  NVM_SOURCE_URL=\"$NVM_SOURCE\"", "  if [ \"_$NVM_METHOD\" = \"_script-nvm-exec\" ]; then", "    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm-exec\"", "  elif [ \"_$NVM_METHOD\" = \"_script-nvm-bash-completion\" ]; then", "    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/bash_completion\"", "  elif [ -z \"$NVM_SOURCE_URL\" ]; then", "    if [ \"_$NVM_METHOD\" = \"_script\" ]; then", "      NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm.sh\"", "    elif [ \"_$NVM_METHOD\" = \"_git\" ] || [ -z \"$NVM_METHOD\" ]; then", "      NVM_SOURCE_URL=\"https://github.com/nvm-sh/nvm.git\"", "    else", "      echo >&2 \"Unexpected value \\\"$NVM_METHOD\\\" for \\$NVM_METHOD\"", "      return 1", "    fi", "  fi", "  echo \"$NVM_SOURCE_URL\"", "}", "", "#", "# Node.js version to install", "#", "nvm_node_version() {", "  echo \"$NODE_VERSION\"", "}", "", "nvm_download() {", "  if nvm_has \"curl\"; then", "    curl --compressed -q \"$@\"", "  elif nvm_has \"wget\"; then", "    # Emulate curl with wget", "    ARGS=$(echo \"$*\" | command sed -e 's/--progress-bar /--progress=bar /' \\", "                            -e 's/-L //' \\", "                            -e 's/--compressed //' \\", "                            -e 's/-I /--server-response /' \\", "                            -e 's/-s /-q /' \\", "                            -e 's/-o /-O /' \\", "                            -e 's/-C - /-c /')", "    # shellcheck disable=SC2086", "    eval wget $ARGS", "  fi", "}", "", "install_nvm_from_git() {", "  local INSTALL_DIR", "  INSTALL_DIR=\"$(nvm_install_dir)\"", "", "  if [ -d \"$INSTALL_DIR/.git\" ]; then", "    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update using git\"", "    command printf '\\r=> '", "    command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 2> /dev/null || {", "      echo >&2 \"Failed to update nvm, run 'git fetch' in $INSTALL_DIR yourself.\"", "      exit 1", "    }", "  else", "    # Cloning to $INSTALL_DIR", "    echo \"=> Downloading nvm from git to '$INSTALL_DIR'\"", "    command printf '\\r=> '", "    mkdir -p \"${INSTALL_DIR}\"", "    if [ \"$(ls -A \"${INSTALL_DIR}\")\" ]; then", "      command git init \"${INSTALL_DIR}\" || {", "        echo >&2 'Failed to initialize nvm repo. Please report this!'", "        exit 2", "      }", "      command git --git-dir=\"${INSTALL_DIR}/.git\" remote add origin \"$(nvm_source)\" 2> /dev/null \\", "        || command git --git-dir=\"${INSTALL_DIR}/.git\" remote set-url origin \"$(nvm_source)\" || {", "        echo >&2 'Failed to add remote \"origin\" (or set the URL). Please report this!'", "        exit 2", "      }", "      command git --git-dir=\"${INSTALL_DIR}/.git\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 || {", "        echo >&2 'Failed to fetch origin with tags. Please report this!'", "        exit 2", "      }", "    else", "      command git -c advice.detachedHead=false clone \"$(nvm_source)\" -b \"$(nvm_latest_version)\" --depth=1 \"${INSTALL_DIR}\" || {", "        echo >&2 'Failed to clone nvm repo. Please report this!'", "        exit 2", "      }", "    fi", "  fi", "  command git -c advice.detachedHead=false --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" checkout -f --quiet \"$(nvm_latest_version)\"", "  if [ -n \"$(command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" show-ref refs/heads/master)\" ]; then", "    if command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet 2>/dev/null; then", "      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet -D master >/dev/null 2>&1", "    else", "      echo >&2 \"Your version of git is out of date. Please update it!\"", "      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch -D master >/dev/null 2>&1", "    fi", "  fi", "", "  echo \"=> Compressing and cleaning up git repository\"", "  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" reflog expire --expire=now --all; then", "    echo >&2 \"Your version of git is out of date. Please update it!\"", "  fi", "  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" gc --auto --aggressive --prune=now ; then", "    echo >&2 \"Your version of git is out of date. Please update it!\"", "  fi", "  return", "}", "", "#", "# Automatically install Node.js", "#", "nvm_install_node() {", "  local NODE_VERSION_LOCAL", "  NODE_VERSION_LOCAL=\"$(nvm_node_version)\"", "", "  if [ -z \"$NODE_VERSION_LOCAL\" ]; then", "    return 0", "  fi", "", "  echo \"=> Installing Node.js version $NODE_VERSION_LOCAL\"", "  nvm install \"$NODE_VERSION_LOCAL\"", "  local CURRENT_NVM_NODE", "", "  CURRENT_NVM_NODE=\"$(nvm_version current)\"", "  if [ \"$(nvm_version \"$NODE_VERSION_LOCAL\")\" == \"$CURRENT_NVM_NODE\" ]; then", "    echo \"=> Node.js version $NODE_VERSION_LOCAL has been successfully installed\"", "  else", "    echo >&2 \"Failed to install Node.js $NODE_VERSION_LOCAL\"", "  fi", "}", "", "install_nvm_as_script() {", "  local INSTALL_DIR", "  INSTALL_DIR=\"$(nvm_install_dir)\"", "  local NVM_SOURCE_LOCAL", "  NVM_SOURCE_LOCAL=\"$(nvm_source script)\"", "  local NVM_EXEC_SOURCE", "  NVM_EXEC_SOURCE=\"$(nvm_source script-nvm-exec)\"", "  local NVM_BASH_COMPLETION_SOURCE", "  NVM_BASH_COMPLETION_SOURCE=\"$(nvm_source script-nvm-bash-completion)\"", "", "  # Downloading to $INSTALL_DIR", "  mkdir -p \"$INSTALL_DIR\"", "  if [ -f \"$INSTALL_DIR/nvm.sh\" ]; then", "    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update the script\"", "  else", "    echo \"=> Downloading nvm as script to '$INSTALL_DIR'\"", "  fi", "  nvm_download -s \"$NVM_SOURCE_LOCAL\" -o \"$INSTALL_DIR/nvm.sh\" || {", "    echo >&2 \"Failed to download '$NVM_SOURCE_LOCAL'\"", "    return 1", "  } &", "  nvm_download -s \"$NVM_EXEC_SOURCE\" -o \"$INSTALL_DIR/nvm-exec\" || {", "    echo >&2 \"Failed to download '$NVM_EXEC_SOURCE'\"", "    return 2", "  } &", "  nvm_download -s \"$NVM_BASH_COMPLETION_SOURCE\" -o \"$INSTALL_DIR/bash_completion\" || {", "    echo >&2 \"Failed to download '$NVM_BASH_COMPLETION_SOURCE'\"", "    return 2", "  } &", "  for job in $(jobs -p | command sort)", "  do", "    wait \"$job\" || return $?", "  done", "  chmod a+x \"$INSTALL_DIR/nvm-exec\" || {", "    echo >&2 \"Failed to mark '$INSTALL_DIR/nvm-exec' as executable\"", "    return 3", "  }", "}", "", "nvm_try_profile() {", "  if [ -z \"${1-}\" ] || [ ! -f \"${1}\" ]; then", "    return 1", "  fi", "  echo \"${1}\"", "}", "", "#", "# Detect profile file if not specified as environment variable", "# (eg: PROFILE=~/.myprofile)", "# The echo'ed path is guaranteed to be an existing file", "# Otherwise, an empty string is returned", "#", "nvm_detect_profile() {", "  if [ \"${PROFILE-}\" = '/dev/null' ]; then", "    # the user has specifically requested NOT to have nvm touch their profile", "    return", "  fi", "", "  if [ -n \"${PROFILE}\" ] && [ -f \"${PROFILE}\" ]; then", "    echo \"${PROFILE}\"", "    return", "  fi", "", "  local DETECTED_PROFILE", "  DETECTED_PROFILE=''", "", "  if [ -n \"${BASH_VERSION-}\" ]; then", "    if [ -f \"$HOME/.bashrc\" ]; then", "      DETECTED_PROFILE=\"$HOME/.bashrc\"", "    elif [ -f \"$HOME/.bash_profile\" ]; then", "      DETECTED_PROFILE=\"$HOME/.bash_profile\"", "    fi", "  elif [ -n \"${ZSH_VERSION-}\" ]; then", "    DETECTED_PROFILE=\"$HOME/.zshrc\"", "  fi", "", "  if [ -z \"$DETECTED_PROFILE\" ]; then", "    for EACH_PROFILE in \".profile\" \".bashrc\" \".bash_profile\" \".zshrc\"", "    do", "      if DETECTED_PROFILE=\"$(nvm_try_profile \"${HOME}/${EACH_PROFILE}\")\"; then", "        break", "      fi", "    done", "  fi", "", "  if [ -n \"$DETECTED_PROFILE\" ]; then", "    echo \"$DETECTED_PROFILE\"", "  fi", "}", "", "#", "# Check whether the user has any globally-installed npm modules in their system", "# Node, and warn them if so.", "#", "nvm_check_global_modules() {", "  command -v npm >/dev/null 2>&1 || return 0", "", "  local NPM_VERSION", "  NPM_VERSION=\"$(npm --version)\"", "  NPM_VERSION=\"${NPM_VERSION:--1}\"", "  [ \"${NPM_VERSION%%[!-0-9]*}\" -gt 0 ] || return 0", "", "  local NPM_GLOBAL_MODULES", "  NPM_GLOBAL_MODULES=\"$(", "    npm list -g --depth=0 |", "    command sed -e '/ npm@/d' -e '/ (empty)$/d'", "  )\"", "", "  local MODULE_COUNT", "  MODULE_COUNT=\"$(", "    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\" |", "    command sed -ne '1!p' |                     # Remove the first line", "    wc -l | command tr -d ' '                   # Count entries", "  )\"", "", "  if [ \"${MODULE_COUNT}\" != '0' ]; then", "    # shellcheck disable=SC2016", "    echo '=> You currently have modules installed globally with `npm`. These will no'", "    # shellcheck disable=SC2016", "    echo '=> longer be linked to the active version of Node when you install a new node'", "    # shellcheck disable=SC2016", "    echo '=> with `nvm`; and they may (depending on how you construct your `$PATH`)'", "    # shellcheck disable=SC2016", "    echo '=> override the binaries of modules installed with `nvm`:'", "    echo", "", "    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\"", "    echo '=> If you wish to uninstall them at a later point (or re-install them under your'", "    # shellcheck disable=SC2016", "    echo '=> `nvm` Nodes), you can remove them from the system Node as follows:'", "    echo", "    echo '     $ nvm use system'", "    echo '     $ npm uninstall -g a_module'", "    echo", "  fi", "}", "", "nvm_do_install() {", "  if [ -n \"${NVM_DIR-}\" ] && ! [ -d \"${NVM_DIR}\" ]; then", "    if [ -e \"${NVM_DIR}\" ]; then", "      echo >&2 \"File \\\"${NVM_DIR}\\\" has the same name as installation directory.\"", "      exit 1", "    fi", "", "    if [ \"${NVM_DIR}\" = \"$(nvm_default_install_dir)\" ]; then", "      mkdir \"${NVM_DIR}\"", "    else", "      echo >&2 \"You have \\$NVM_DIR set to \\\"${NVM_DIR}\\\", but that directory does not exist. Check your profile files and environment.\"", "      exit 1", "    fi", "  fi", "  if [ -z \"${METHOD}\" ]; then", "    # Autodetect install method", "    if nvm_has git; then", "      install_nvm_from_git", "    elif nvm_has nvm_download; then", "      install_nvm_as_script", "    else", "      echo >&2 'You need git, curl, or wget to install nvm'", "      exit 1", "    fi", "  elif [ \"${METHOD}\" = 'git' ]; then", "    if ! nvm_has git; then", "      echo >&2 \"You need git to install nvm\"", "      exit 1", "    fi", "    install_nvm_from_git", "  elif [ \"${METHOD}\" = 'script' ]; then", "    if ! nvm_has nvm_download; then", "      echo >&2 \"You need curl or wget to install nvm\"", "      exit 1", "    fi", "    install_nvm_as_script", "  else", "    echo >&2 \"The environment variable \\$METHOD is set to \\\"${METHOD}\\\", which is not recognized as a valid installation method.\"", "    exit 1", "  fi", "", "  echo", "", "  local NVM_PROFILE", "  NVM_PROFILE=\"$(nvm_detect_profile)\"", "  local PROFILE_INSTALL_DIR", "  PROFILE_INSTALL_DIR=\"$(nvm_install_dir | command sed \"s:^$HOME:\\$HOME:\")\"", "", "  SOURCE_STR=\"\\\\nexport NVM_DIR=\\\"${PROFILE_INSTALL_DIR}\\\"\\\\n[ -s \\\"\\$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"\\$NVM_DIR/nvm.sh\\\"  # This loads nvm\\\\n\"", "", "  # shellcheck disable=SC2016", "  COMPLETION_STR='[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\\n'", "  BASH_OR_ZSH=false", "", "  if [ -z \"${NVM_PROFILE-}\" ] ; then", "    local TRIED_PROFILE", "    if [ -n \"${PROFILE}\" ]; then", "      TRIED_PROFILE=\"${NVM_PROFILE} (as defined in \\$PROFILE), \"", "    fi", "    echo \"=> Profile not found. Tried ${TRIED_PROFILE-}~/.bashrc, ~/.bash_profile, ~/.zshrc, and ~/.profile.\"", "    echo \"=> Create one of them and run this script again\"", "    echo \"   OR\"", "    echo \"=> Append the following lines to the correct file yourself:\"", "    command printf \"${SOURCE_STR}\"", "    echo", "  else", "    if nvm_profile_is_bash_or_zsh \"${NVM_PROFILE-}\"; then", "      BASH_OR_ZSH=true", "    fi", "    if ! command grep -qc '/nvm.sh' \"$NVM_PROFILE\"; then", "      echo \"=> Appending nvm source string to $NVM_PROFILE\"", "      command printf \"${SOURCE_STR}\" >> \"$NVM_PROFILE\"", "    else", "      echo \"=> nvm source string already in ${NVM_PROFILE}\"", "    fi", "    # shellcheck disable=SC2016", "    if ${BASH_OR_ZSH} && ! command grep -qc '$NVM_DIR/bash_completion' \"$NVM_PROFILE\"; then", "      echo \"=> Appending bash_completion source string to $NVM_PROFILE\"", "      command printf \"$COMPLETION_STR\" >> \"$NVM_PROFILE\"", "    else", "      echo \"=> bash_completion source string already in ${NVM_PROFILE}\"", "    fi", "  fi", "  if ${BASH_OR_ZSH} && [ -z \"${NVM_PROFILE-}\" ] ; then", "    echo \"=> Please also append the following lines to the if you are using bash/zsh shell:\"", "    command printf \"${COMPLETION_STR}\"", "  fi", "", "  # Source nvm", "  # shellcheck source=/dev/null", "  \\. \"$(nvm_install_dir)/nvm.sh\"", "", "  nvm_check_global_modules", "", "  nvm_install_node", "", "  nvm_reset", "", "  echo \"=> Close and reopen your terminal to start using nvm or run the following to use it now:\"", "  command printf \"${SOURCE_STR}\"", "  if ${BASH_OR_ZSH} ; then", "    command printf \"${COMPLETION_STR}\"", "  fi", "}", "", "#", "# Unsets the various functions defined", "# during the execution of the install script", "#", "nvm_reset() {", "  unset -f nvm_has nvm_install_dir nvm_latest_version nvm_profile_is_bash_or_zsh \\", "    nvm_source nvm_node_version nvm_download install_nvm_from_git nvm_install_node \\", "    install_nvm_as_script nvm_try_profile nvm_detect_profile nvm_check_global_modules \\", "    nvm_do_install nvm_reset nvm_default_install_dir", "}", "", "[ \"_$NVM_ENV\" = \"_testing\" ] || nvm_do_install", "", "} # this ensures the entire script is downloaded #"]}
2024-05-19 18:02:16,461 p=204571 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-19 18:02:16,461 p=204571 u=root n=ansible | localhost                  : ok=12   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-19 18:06:09,985 p=207142 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-19 18:06:10,127 p=207142 u=root n=ansible | PLAY [Configure local machine] ***********************************************************************************************************************
2024-05-19 18:06:10,135 p=207142 u=root n=ansible | TASK [Gathering Facts] *******************************************************************************************************************************
2024-05-19 18:06:10,915 p=207142 u=root n=ansible | ok: [localhost]
2024-05-19 18:06:10,935 p=207142 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] *******************************************************************************************
2024-05-19 18:06:11,813 p=207142 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716121916, "cache_updated": false, "changed": false}
2024-05-19 18:06:11,841 p=207142 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ************************************************************************************************
2024-05-19 18:06:11,851 p=207142 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 18:06:11,858 p=207142 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ********************************************************************************************
2024-05-19 18:06:11,867 p=207142 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 18:06:11,877 p=207142 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] *******************************************************************************************
2024-05-19 18:06:14,505 p=207142 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716122174, "cache_updated": true, "changed": true}
2024-05-19 18:06:14,512 p=207142 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *************************************************************************************************
2024-05-19 18:06:14,526 p=207142 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-19 18:06:14,533 p=207142 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***********************************************************************************************************
2024-05-19 18:06:14,542 p=207142 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 18:06:14,550 p=207142 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] **************************************************************************************************
2024-05-19 18:06:14,562 p=207142 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 18:06:14,579 p=207142 u=root n=ansible | TASK [setup : include_vars] **************************************************************************************************************************
2024-05-19 18:06:14,592 p=207142 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-19 18:06:14,600 p=207142 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *********************************************************************************
2024-05-19 18:06:15,385 p=207142 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716122174, "cache_updated": false, "changed": false, "item": "git"}
2024-05-19 18:06:16,148 p=207142 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716122174, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-19 18:06:16,945 p=207142 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716122174, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-19 18:06:17,706 p=207142 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716122174, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-19 18:06:18,462 p=207142 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716122174, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-19 18:06:19,211 p=207142 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716122174, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-19 18:06:19,959 p=207142 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716122174, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-19 18:06:20,707 p=207142 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716122174, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-19 18:06:21,454 p=207142 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716122174, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-19 18:06:22,214 p=207142 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716122174, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-19 18:06:22,958 p=207142 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716122174, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-19 18:06:23,725 p=207142 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716122174, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-19 18:06:24,555 p=207142 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716122174, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-19 18:06:25,339 p=207142 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716122174, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-19 18:06:26,117 p=207142 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716122174, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-19 18:06:26,959 p=207142 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716122174, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-19 18:06:26,969 p=207142 u=root n=ansible | TASK [setup : install all command line tool on macOS] ************************************************************************************************
2024-05-19 18:06:26,982 p=207142 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-19 18:06:26,987 p=207142 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-19 18:06:26,993 p=207142 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-19 18:06:26,997 p=207142 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-19 18:06:26,998 p=207142 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-19 18:06:26,998 p=207142 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-19 18:06:27,005 p=207142 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-19 18:06:27,006 p=207142 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-19 18:06:27,006 p=207142 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-19 18:06:27,006 p=207142 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-19 18:06:27,009 p=207142 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-19 18:06:27,009 p=207142 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-19 18:06:27,010 p=207142 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-19 18:06:27,010 p=207142 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-19 18:06:27,011 p=207142 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-19 18:06:27,011 p=207142 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-19 18:06:27,012 p=207142 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-19 18:06:27,020 p=207142 u=root n=ansible | TASK [setup : install python tools] ******************************************************************************************************************
2024-05-19 18:06:28,733 p=207142 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.462437", "end": "2024-05-19 18:06:28.710371", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-19 18:06:27.247934", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-19 18:06:30,341 p=207142 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.463941", "end": "2024-05-19 18:06:30.317323", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-19 18:06:28.853382", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-19 18:06:32,031 p=207142 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.536564", "end": "2024-05-19 18:06:32.009110", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-19 18:06:30.472546", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-19 18:06:32,042 p=207142 u=root n=ansible | TASK [setup : checking Var require in scripts] *******************************************************************************************************
2024-05-19 18:06:32,053 p=207142 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-19 18:06:32,061 p=207142 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ************************************************************************************************
2024-05-19 18:06:32,828 p=207142 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716122174, "cache_updated": false, "changed": false}
2024-05-19 18:06:32,836 p=207142 u=root n=ansible | TASK [setup : Install Neovim on macOS] ***************************************************************************************************************
2024-05-19 18:06:32,845 p=207142 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-19 18:06:32,853 p=207142 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] ******************************************************************************************
2024-05-19 18:06:33,094 p=207142 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-19 18:06:33,102 p=207142 u=root n=ansible | TASK [setup : Clone the Neovim config] ***************************************************************************************************************
2024-05-19 18:06:34,039 p=207142 u=root n=ansible | ok: [localhost] => {"after": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "before": "0e926e7e9e86a22337e27a366ae5bbc81060095d", "changed": false, "remote_url_changed": false}
2024-05-19 18:06:34,046 p=207142 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ****************************************************************************************
2024-05-19 18:06:34,057 p=207142 u=root n=ansible | skipping: [localhost] => {}
2024-05-19 18:06:34,065 p=207142 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *************************************************************************
2024-05-19 18:06:34,080 p=207142 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-19 18:06:34,087 p=207142 u=root n=ansible | TASK [setup : Install NVM] ***************************************************************************************************************************
2024-05-19 18:06:34,606 p=207142 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["curl", "-o-", "https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh", "|", "bash"], "delta": "0:00:00.352355", "end": "2024-05-19 18:06:34.577935", "msg": "non-zero return code", "rc": 6, "start": "2024-05-19 18:06:34.225580", "stderr": "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100 13527  100 13527    0     0  39551      0 --:--:-- --:--:-- --:--:-- 39552\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: |\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: bash", "stderr_lines": ["  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current", "                                 Dload  Upload   Total   Spent    Left  Speed", "", "  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0", "  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0", "100 13527  100 13527    0     0  39551      0 --:--:-- --:--:-- --:--:-- 39552", "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current", "                                 Dload  Upload   Total   Spent    Left  Speed", "", "  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: |", "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current", "                                 Dload  Upload   Total   Spent    Left  Speed", "", "  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: bash"], "stdout": "#!/usr/bin/env bash\n\n{ # this ensures the entire script is downloaded #\n\nnvm_has() {\n  type \"$1\" > /dev/null 2>&1\n}\n\nnvm_default_install_dir() {\n  [ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\"\n}\n\nnvm_install_dir() {\n  if [ -n \"$NVM_DIR\" ]; then\n    printf %s \"${NVM_DIR}\"\n  else\n    nvm_default_install_dir\n  fi\n}\n\nnvm_latest_version() {\n  echo \"v0.35.3\"\n}\n\nnvm_profile_is_bash_or_zsh() {\n  local TEST_PROFILE\n  TEST_PROFILE=\"${1-}\"\n  case \"${TEST_PROFILE-}\" in\n    *\"/.bashrc\" | *\"/.bash_profile\" | *\"/.zshrc\")\n      return\n    ;;\n    *)\n      return 1\n    ;;\n  esac\n}\n\n#\n# Outputs the location to NVM depending on:\n# * The availability of $NVM_SOURCE\n# * The method used (\"script\" or \"git\" in the script, defaults to \"git\")\n# NVM_SOURCE always takes precedence unless the method is \"script-nvm-exec\"\n#\nnvm_source() {\n  local NVM_METHOD\n  NVM_METHOD=\"$1\"\n  local NVM_SOURCE_URL\n  NVM_SOURCE_URL=\"$NVM_SOURCE\"\n  if [ \"_$NVM_METHOD\" = \"_script-nvm-exec\" ]; then\n    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm-exec\"\n  elif [ \"_$NVM_METHOD\" = \"_script-nvm-bash-completion\" ]; then\n    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/bash_completion\"\n  elif [ -z \"$NVM_SOURCE_URL\" ]; then\n    if [ \"_$NVM_METHOD\" = \"_script\" ]; then\n      NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm.sh\"\n    elif [ \"_$NVM_METHOD\" = \"_git\" ] || [ -z \"$NVM_METHOD\" ]; then\n      NVM_SOURCE_URL=\"https://github.com/nvm-sh/nvm.git\"\n    else\n      echo >&2 \"Unexpected value \\\"$NVM_METHOD\\\" for \\$NVM_METHOD\"\n      return 1\n    fi\n  fi\n  echo \"$NVM_SOURCE_URL\"\n}\n\n#\n# Node.js version to install\n#\nnvm_node_version() {\n  echo \"$NODE_VERSION\"\n}\n\nnvm_download() {\n  if nvm_has \"curl\"; then\n    curl --compressed -q \"$@\"\n  elif nvm_has \"wget\"; then\n    # Emulate curl with wget\n    ARGS=$(echo \"$*\" | command sed -e 's/--progress-bar /--progress=bar /' \\\n                            -e 's/-L //' \\\n                            -e 's/--compressed //' \\\n                            -e 's/-I /--server-response /' \\\n                            -e 's/-s /-q /' \\\n                            -e 's/-o /-O /' \\\n                            -e 's/-C - /-c /')\n    # shellcheck disable=SC2086\n    eval wget $ARGS\n  fi\n}\n\ninstall_nvm_from_git() {\n  local INSTALL_DIR\n  INSTALL_DIR=\"$(nvm_install_dir)\"\n\n  if [ -d \"$INSTALL_DIR/.git\" ]; then\n    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update using git\"\n    command printf '\\r=> '\n    command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 2> /dev/null || {\n      echo >&2 \"Failed to update nvm, run 'git fetch' in $INSTALL_DIR yourself.\"\n      exit 1\n    }\n  else\n    # Cloning to $INSTALL_DIR\n    echo \"=> Downloading nvm from git to '$INSTALL_DIR'\"\n    command printf '\\r=> '\n    mkdir -p \"${INSTALL_DIR}\"\n    if [ \"$(ls -A \"${INSTALL_DIR}\")\" ]; then\n      command git init \"${INSTALL_DIR}\" || {\n        echo >&2 'Failed to initialize nvm repo. Please report this!'\n        exit 2\n      }\n      command git --git-dir=\"${INSTALL_DIR}/.git\" remote add origin \"$(nvm_source)\" 2> /dev/null \\\n        || command git --git-dir=\"${INSTALL_DIR}/.git\" remote set-url origin \"$(nvm_source)\" || {\n        echo >&2 'Failed to add remote \"origin\" (or set the URL). Please report this!'\n        exit 2\n      }\n      command git --git-dir=\"${INSTALL_DIR}/.git\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 || {\n        echo >&2 'Failed to fetch origin with tags. Please report this!'\n        exit 2\n      }\n    else\n      command git -c advice.detachedHead=false clone \"$(nvm_source)\" -b \"$(nvm_latest_version)\" --depth=1 \"${INSTALL_DIR}\" || {\n        echo >&2 'Failed to clone nvm repo. Please report this!'\n        exit 2\n      }\n    fi\n  fi\n  command git -c advice.detachedHead=false --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" checkout -f --quiet \"$(nvm_latest_version)\"\n  if [ -n \"$(command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" show-ref refs/heads/master)\" ]; then\n    if command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet 2>/dev/null; then\n      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet -D master >/dev/null 2>&1\n    else\n      echo >&2 \"Your version of git is out of date. Please update it!\"\n      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch -D master >/dev/null 2>&1\n    fi\n  fi\n\n  echo \"=> Compressing and cleaning up git repository\"\n  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" reflog expire --expire=now --all; then\n    echo >&2 \"Your version of git is out of date. Please update it!\"\n  fi\n  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" gc --auto --aggressive --prune=now ; then\n    echo >&2 \"Your version of git is out of date. Please update it!\"\n  fi\n  return\n}\n\n#\n# Automatically install Node.js\n#\nnvm_install_node() {\n  local NODE_VERSION_LOCAL\n  NODE_VERSION_LOCAL=\"$(nvm_node_version)\"\n\n  if [ -z \"$NODE_VERSION_LOCAL\" ]; then\n    return 0\n  fi\n\n  echo \"=> Installing Node.js version $NODE_VERSION_LOCAL\"\n  nvm install \"$NODE_VERSION_LOCAL\"\n  local CURRENT_NVM_NODE\n\n  CURRENT_NVM_NODE=\"$(nvm_version current)\"\n  if [ \"$(nvm_version \"$NODE_VERSION_LOCAL\")\" == \"$CURRENT_NVM_NODE\" ]; then\n    echo \"=> Node.js version $NODE_VERSION_LOCAL has been successfully installed\"\n  else\n    echo >&2 \"Failed to install Node.js $NODE_VERSION_LOCAL\"\n  fi\n}\n\ninstall_nvm_as_script() {\n  local INSTALL_DIR\n  INSTALL_DIR=\"$(nvm_install_dir)\"\n  local NVM_SOURCE_LOCAL\n  NVM_SOURCE_LOCAL=\"$(nvm_source script)\"\n  local NVM_EXEC_SOURCE\n  NVM_EXEC_SOURCE=\"$(nvm_source script-nvm-exec)\"\n  local NVM_BASH_COMPLETION_SOURCE\n  NVM_BASH_COMPLETION_SOURCE=\"$(nvm_source script-nvm-bash-completion)\"\n\n  # Downloading to $INSTALL_DIR\n  mkdir -p \"$INSTALL_DIR\"\n  if [ -f \"$INSTALL_DIR/nvm.sh\" ]; then\n    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update the script\"\n  else\n    echo \"=> Downloading nvm as script to '$INSTALL_DIR'\"\n  fi\n  nvm_download -s \"$NVM_SOURCE_LOCAL\" -o \"$INSTALL_DIR/nvm.sh\" || {\n    echo >&2 \"Failed to download '$NVM_SOURCE_LOCAL'\"\n    return 1\n  } &\n  nvm_download -s \"$NVM_EXEC_SOURCE\" -o \"$INSTALL_DIR/nvm-exec\" || {\n    echo >&2 \"Failed to download '$NVM_EXEC_SOURCE'\"\n    return 2\n  } &\n  nvm_download -s \"$NVM_BASH_COMPLETION_SOURCE\" -o \"$INSTALL_DIR/bash_completion\" || {\n    echo >&2 \"Failed to download '$NVM_BASH_COMPLETION_SOURCE'\"\n    return 2\n  } &\n  for job in $(jobs -p | command sort)\n  do\n    wait \"$job\" || return $?\n  done\n  chmod a+x \"$INSTALL_DIR/nvm-exec\" || {\n    echo >&2 \"Failed to mark '$INSTALL_DIR/nvm-exec' as executable\"\n    return 3\n  }\n}\n\nnvm_try_profile() {\n  if [ -z \"${1-}\" ] || [ ! -f \"${1}\" ]; then\n    return 1\n  fi\n  echo \"${1}\"\n}\n\n#\n# Detect profile file if not specified as environment variable\n# (eg: PROFILE=~/.myprofile)\n# The echo'ed path is guaranteed to be an existing file\n# Otherwise, an empty string is returned\n#\nnvm_detect_profile() {\n  if [ \"${PROFILE-}\" = '/dev/null' ]; then\n    # the user has specifically requested NOT to have nvm touch their profile\n    return\n  fi\n\n  if [ -n \"${PROFILE}\" ] && [ -f \"${PROFILE}\" ]; then\n    echo \"${PROFILE}\"\n    return\n  fi\n\n  local DETECTED_PROFILE\n  DETECTED_PROFILE=''\n\n  if [ -n \"${BASH_VERSION-}\" ]; then\n    if [ -f \"$HOME/.bashrc\" ]; then\n      DETECTED_PROFILE=\"$HOME/.bashrc\"\n    elif [ -f \"$HOME/.bash_profile\" ]; then\n      DETECTED_PROFILE=\"$HOME/.bash_profile\"\n    fi\n  elif [ -n \"${ZSH_VERSION-}\" ]; then\n    DETECTED_PROFILE=\"$HOME/.zshrc\"\n  fi\n\n  if [ -z \"$DETECTED_PROFILE\" ]; then\n    for EACH_PROFILE in \".profile\" \".bashrc\" \".bash_profile\" \".zshrc\"\n    do\n      if DETECTED_PROFILE=\"$(nvm_try_profile \"${HOME}/${EACH_PROFILE}\")\"; then\n        break\n      fi\n    done\n  fi\n\n  if [ -n \"$DETECTED_PROFILE\" ]; then\n    echo \"$DETECTED_PROFILE\"\n  fi\n}\n\n#\n# Check whether the user has any globally-installed npm modules in their system\n# Node, and warn them if so.\n#\nnvm_check_global_modules() {\n  command -v npm >/dev/null 2>&1 || return 0\n\n  local NPM_VERSION\n  NPM_VERSION=\"$(npm --version)\"\n  NPM_VERSION=\"${NPM_VERSION:--1}\"\n  [ \"${NPM_VERSION%%[!-0-9]*}\" -gt 0 ] || return 0\n\n  local NPM_GLOBAL_MODULES\n  NPM_GLOBAL_MODULES=\"$(\n    npm list -g --depth=0 |\n    command sed -e '/ npm@/d' -e '/ (empty)$/d'\n  )\"\n\n  local MODULE_COUNT\n  MODULE_COUNT=\"$(\n    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\" |\n    command sed -ne '1!p' |                     # Remove the first line\n    wc -l | command tr -d ' '                   # Count entries\n  )\"\n\n  if [ \"${MODULE_COUNT}\" != '0' ]; then\n    # shellcheck disable=SC2016\n    echo '=> You currently have modules installed globally with `npm`. These will no'\n    # shellcheck disable=SC2016\n    echo '=> longer be linked to the active version of Node when you install a new node'\n    # shellcheck disable=SC2016\n    echo '=> with `nvm`; and they may (depending on how you construct your `$PATH`)'\n    # shellcheck disable=SC2016\n    echo '=> override the binaries of modules installed with `nvm`:'\n    echo\n\n    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\"\n    echo '=> If you wish to uninstall them at a later point (or re-install them under your'\n    # shellcheck disable=SC2016\n    echo '=> `nvm` Nodes), you can remove them from the system Node as follows:'\n    echo\n    echo '     $ nvm use system'\n    echo '     $ npm uninstall -g a_module'\n    echo\n  fi\n}\n\nnvm_do_install() {\n  if [ -n \"${NVM_DIR-}\" ] && ! [ -d \"${NVM_DIR}\" ]; then\n    if [ -e \"${NVM_DIR}\" ]; then\n      echo >&2 \"File \\\"${NVM_DIR}\\\" has the same name as installation directory.\"\n      exit 1\n    fi\n\n    if [ \"${NVM_DIR}\" = \"$(nvm_default_install_dir)\" ]; then\n      mkdir \"${NVM_DIR}\"\n    else\n      echo >&2 \"You have \\$NVM_DIR set to \\\"${NVM_DIR}\\\", but that directory does not exist. Check your profile files and environment.\"\n      exit 1\n    fi\n  fi\n  if [ -z \"${METHOD}\" ]; then\n    # Autodetect install method\n    if nvm_has git; then\n      install_nvm_from_git\n    elif nvm_has nvm_download; then\n      install_nvm_as_script\n    else\n      echo >&2 'You need git, curl, or wget to install nvm'\n      exit 1\n    fi\n  elif [ \"${METHOD}\" = 'git' ]; then\n    if ! nvm_has git; then\n      echo >&2 \"You need git to install nvm\"\n      exit 1\n    fi\n    install_nvm_from_git\n  elif [ \"${METHOD}\" = 'script' ]; then\n    if ! nvm_has nvm_download; then\n      echo >&2 \"You need curl or wget to install nvm\"\n      exit 1\n    fi\n    install_nvm_as_script\n  else\n    echo >&2 \"The environment variable \\$METHOD is set to \\\"${METHOD}\\\", which is not recognized as a valid installation method.\"\n    exit 1\n  fi\n\n  echo\n\n  local NVM_PROFILE\n  NVM_PROFILE=\"$(nvm_detect_profile)\"\n  local PROFILE_INSTALL_DIR\n  PROFILE_INSTALL_DIR=\"$(nvm_install_dir | command sed \"s:^$HOME:\\$HOME:\")\"\n\n  SOURCE_STR=\"\\\\nexport NVM_DIR=\\\"${PROFILE_INSTALL_DIR}\\\"\\\\n[ -s \\\"\\$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"\\$NVM_DIR/nvm.sh\\\"  # This loads nvm\\\\n\"\n\n  # shellcheck disable=SC2016\n  COMPLETION_STR='[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\\n'\n  BASH_OR_ZSH=false\n\n  if [ -z \"${NVM_PROFILE-}\" ] ; then\n    local TRIED_PROFILE\n    if [ -n \"${PROFILE}\" ]; then\n      TRIED_PROFILE=\"${NVM_PROFILE} (as defined in \\$PROFILE), \"\n    fi\n    echo \"=> Profile not found. Tried ${TRIED_PROFILE-}~/.bashrc, ~/.bash_profile, ~/.zshrc, and ~/.profile.\"\n    echo \"=> Create one of them and run this script again\"\n    echo \"   OR\"\n    echo \"=> Append the following lines to the correct file yourself:\"\n    command printf \"${SOURCE_STR}\"\n    echo\n  else\n    if nvm_profile_is_bash_or_zsh \"${NVM_PROFILE-}\"; then\n      BASH_OR_ZSH=true\n    fi\n    if ! command grep -qc '/nvm.sh' \"$NVM_PROFILE\"; then\n      echo \"=> Appending nvm source string to $NVM_PROFILE\"\n      command printf \"${SOURCE_STR}\" >> \"$NVM_PROFILE\"\n    else\n      echo \"=> nvm source string already in ${NVM_PROFILE}\"\n    fi\n    # shellcheck disable=SC2016\n    if ${BASH_OR_ZSH} && ! command grep -qc '$NVM_DIR/bash_completion' \"$NVM_PROFILE\"; then\n      echo \"=> Appending bash_completion source string to $NVM_PROFILE\"\n      command printf \"$COMPLETION_STR\" >> \"$NVM_PROFILE\"\n    else\n      echo \"=> bash_completion source string already in ${NVM_PROFILE}\"\n    fi\n  fi\n  if ${BASH_OR_ZSH} && [ -z \"${NVM_PROFILE-}\" ] ; then\n    echo \"=> Please also append the following lines to the if you are using bash/zsh shell:\"\n    command printf \"${COMPLETION_STR}\"\n  fi\n\n  # Source nvm\n  # shellcheck source=/dev/null\n  \\. \"$(nvm_install_dir)/nvm.sh\"\n\n  nvm_check_global_modules\n\n  nvm_install_node\n\n  nvm_reset\n\n  echo \"=> Close and reopen your terminal to start using nvm or run the following to use it now:\"\n  command printf \"${SOURCE_STR}\"\n  if ${BASH_OR_ZSH} ; then\n    command printf \"${COMPLETION_STR}\"\n  fi\n}\n\n#\n# Unsets the various functions defined\n# during the execution of the install script\n#\nnvm_reset() {\n  unset -f nvm_has nvm_install_dir nvm_latest_version nvm_profile_is_bash_or_zsh \\\n    nvm_source nvm_node_version nvm_download install_nvm_from_git nvm_install_node \\\n    install_nvm_as_script nvm_try_profile nvm_detect_profile nvm_check_global_modules \\\n    nvm_do_install nvm_reset nvm_default_install_dir\n}\n\n[ \"_$NVM_ENV\" = \"_testing\" ] || nvm_do_install\n\n} # this ensures the entire script is downloaded #", "stdout_lines": ["#!/usr/bin/env bash", "", "{ # this ensures the entire script is downloaded #", "", "nvm_has() {", "  type \"$1\" > /dev/null 2>&1", "}", "", "nvm_default_install_dir() {", "  [ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\"", "}", "", "nvm_install_dir() {", "  if [ -n \"$NVM_DIR\" ]; then", "    printf %s \"${NVM_DIR}\"", "  else", "    nvm_default_install_dir", "  fi", "}", "", "nvm_latest_version() {", "  echo \"v0.35.3\"", "}", "", "nvm_profile_is_bash_or_zsh() {", "  local TEST_PROFILE", "  TEST_PROFILE=\"${1-}\"", "  case \"${TEST_PROFILE-}\" in", "    *\"/.bashrc\" | *\"/.bash_profile\" | *\"/.zshrc\")", "      return", "    ;;", "    *)", "      return 1", "    ;;", "  esac", "}", "", "#", "# Outputs the location to NVM depending on:", "# * The availability of $NVM_SOURCE", "# * The method used (\"script\" or \"git\" in the script, defaults to \"git\")", "# NVM_SOURCE always takes precedence unless the method is \"script-nvm-exec\"", "#", "nvm_source() {", "  local NVM_METHOD", "  NVM_METHOD=\"$1\"", "  local NVM_SOURCE_URL", "  NVM_SOURCE_URL=\"$NVM_SOURCE\"", "  if [ \"_$NVM_METHOD\" = \"_script-nvm-exec\" ]; then", "    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm-exec\"", "  elif [ \"_$NVM_METHOD\" = \"_script-nvm-bash-completion\" ]; then", "    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/bash_completion\"", "  elif [ -z \"$NVM_SOURCE_URL\" ]; then", "    if [ \"_$NVM_METHOD\" = \"_script\" ]; then", "      NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm.sh\"", "    elif [ \"_$NVM_METHOD\" = \"_git\" ] || [ -z \"$NVM_METHOD\" ]; then", "      NVM_SOURCE_URL=\"https://github.com/nvm-sh/nvm.git\"", "    else", "      echo >&2 \"Unexpected value \\\"$NVM_METHOD\\\" for \\$NVM_METHOD\"", "      return 1", "    fi", "  fi", "  echo \"$NVM_SOURCE_URL\"", "}", "", "#", "# Node.js version to install", "#", "nvm_node_version() {", "  echo \"$NODE_VERSION\"", "}", "", "nvm_download() {", "  if nvm_has \"curl\"; then", "    curl --compressed -q \"$@\"", "  elif nvm_has \"wget\"; then", "    # Emulate curl with wget", "    ARGS=$(echo \"$*\" | command sed -e 's/--progress-bar /--progress=bar /' \\", "                            -e 's/-L //' \\", "                            -e 's/--compressed //' \\", "                            -e 's/-I /--server-response /' \\", "                            -e 's/-s /-q /' \\", "                            -e 's/-o /-O /' \\", "                            -e 's/-C - /-c /')", "    # shellcheck disable=SC2086", "    eval wget $ARGS", "  fi", "}", "", "install_nvm_from_git() {", "  local INSTALL_DIR", "  INSTALL_DIR=\"$(nvm_install_dir)\"", "", "  if [ -d \"$INSTALL_DIR/.git\" ]; then", "    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update using git\"", "    command printf '\\r=> '", "    command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 2> /dev/null || {", "      echo >&2 \"Failed to update nvm, run 'git fetch' in $INSTALL_DIR yourself.\"", "      exit 1", "    }", "  else", "    # Cloning to $INSTALL_DIR", "    echo \"=> Downloading nvm from git to '$INSTALL_DIR'\"", "    command printf '\\r=> '", "    mkdir -p \"${INSTALL_DIR}\"", "    if [ \"$(ls -A \"${INSTALL_DIR}\")\" ]; then", "      command git init \"${INSTALL_DIR}\" || {", "        echo >&2 'Failed to initialize nvm repo. Please report this!'", "        exit 2", "      }", "      command git --git-dir=\"${INSTALL_DIR}/.git\" remote add origin \"$(nvm_source)\" 2> /dev/null \\", "        || command git --git-dir=\"${INSTALL_DIR}/.git\" remote set-url origin \"$(nvm_source)\" || {", "        echo >&2 'Failed to add remote \"origin\" (or set the URL). Please report this!'", "        exit 2", "      }", "      command git --git-dir=\"${INSTALL_DIR}/.git\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 || {", "        echo >&2 'Failed to fetch origin with tags. Please report this!'", "        exit 2", "      }", "    else", "      command git -c advice.detachedHead=false clone \"$(nvm_source)\" -b \"$(nvm_latest_version)\" --depth=1 \"${INSTALL_DIR}\" || {", "        echo >&2 'Failed to clone nvm repo. Please report this!'", "        exit 2", "      }", "    fi", "  fi", "  command git -c advice.detachedHead=false --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" checkout -f --quiet \"$(nvm_latest_version)\"", "  if [ -n \"$(command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" show-ref refs/heads/master)\" ]; then", "    if command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet 2>/dev/null; then", "      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet -D master >/dev/null 2>&1", "    else", "      echo >&2 \"Your version of git is out of date. Please update it!\"", "      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch -D master >/dev/null 2>&1", "    fi", "  fi", "", "  echo \"=> Compressing and cleaning up git repository\"", "  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" reflog expire --expire=now --all; then", "    echo >&2 \"Your version of git is out of date. Please update it!\"", "  fi", "  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" gc --auto --aggressive --prune=now ; then", "    echo >&2 \"Your version of git is out of date. Please update it!\"", "  fi", "  return", "}", "", "#", "# Automatically install Node.js", "#", "nvm_install_node() {", "  local NODE_VERSION_LOCAL", "  NODE_VERSION_LOCAL=\"$(nvm_node_version)\"", "", "  if [ -z \"$NODE_VERSION_LOCAL\" ]; then", "    return 0", "  fi", "", "  echo \"=> Installing Node.js version $NODE_VERSION_LOCAL\"", "  nvm install \"$NODE_VERSION_LOCAL\"", "  local CURRENT_NVM_NODE", "", "  CURRENT_NVM_NODE=\"$(nvm_version current)\"", "  if [ \"$(nvm_version \"$NODE_VERSION_LOCAL\")\" == \"$CURRENT_NVM_NODE\" ]; then", "    echo \"=> Node.js version $NODE_VERSION_LOCAL has been successfully installed\"", "  else", "    echo >&2 \"Failed to install Node.js $NODE_VERSION_LOCAL\"", "  fi", "}", "", "install_nvm_as_script() {", "  local INSTALL_DIR", "  INSTALL_DIR=\"$(nvm_install_dir)\"", "  local NVM_SOURCE_LOCAL", "  NVM_SOURCE_LOCAL=\"$(nvm_source script)\"", "  local NVM_EXEC_SOURCE", "  NVM_EXEC_SOURCE=\"$(nvm_source script-nvm-exec)\"", "  local NVM_BASH_COMPLETION_SOURCE", "  NVM_BASH_COMPLETION_SOURCE=\"$(nvm_source script-nvm-bash-completion)\"", "", "  # Downloading to $INSTALL_DIR", "  mkdir -p \"$INSTALL_DIR\"", "  if [ -f \"$INSTALL_DIR/nvm.sh\" ]; then", "    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update the script\"", "  else", "    echo \"=> Downloading nvm as script to '$INSTALL_DIR'\"", "  fi", "  nvm_download -s \"$NVM_SOURCE_LOCAL\" -o \"$INSTALL_DIR/nvm.sh\" || {", "    echo >&2 \"Failed to download '$NVM_SOURCE_LOCAL'\"", "    return 1", "  } &", "  nvm_download -s \"$NVM_EXEC_SOURCE\" -o \"$INSTALL_DIR/nvm-exec\" || {", "    echo >&2 \"Failed to download '$NVM_EXEC_SOURCE'\"", "    return 2", "  } &", "  nvm_download -s \"$NVM_BASH_COMPLETION_SOURCE\" -o \"$INSTALL_DIR/bash_completion\" || {", "    echo >&2 \"Failed to download '$NVM_BASH_COMPLETION_SOURCE'\"", "    return 2", "  } &", "  for job in $(jobs -p | command sort)", "  do", "    wait \"$job\" || return $?", "  done", "  chmod a+x \"$INSTALL_DIR/nvm-exec\" || {", "    echo >&2 \"Failed to mark '$INSTALL_DIR/nvm-exec' as executable\"", "    return 3", "  }", "}", "", "nvm_try_profile() {", "  if [ -z \"${1-}\" ] || [ ! -f \"${1}\" ]; then", "    return 1", "  fi", "  echo \"${1}\"", "}", "", "#", "# Detect profile file if not specified as environment variable", "# (eg: PROFILE=~/.myprofile)", "# The echo'ed path is guaranteed to be an existing file", "# Otherwise, an empty string is returned", "#", "nvm_detect_profile() {", "  if [ \"${PROFILE-}\" = '/dev/null' ]; then", "    # the user has specifically requested NOT to have nvm touch their profile", "    return", "  fi", "", "  if [ -n \"${PROFILE}\" ] && [ -f \"${PROFILE}\" ]; then", "    echo \"${PROFILE}\"", "    return", "  fi", "", "  local DETECTED_PROFILE", "  DETECTED_PROFILE=''", "", "  if [ -n \"${BASH_VERSION-}\" ]; then", "    if [ -f \"$HOME/.bashrc\" ]; then", "      DETECTED_PROFILE=\"$HOME/.bashrc\"", "    elif [ -f \"$HOME/.bash_profile\" ]; then", "      DETECTED_PROFILE=\"$HOME/.bash_profile\"", "    fi", "  elif [ -n \"${ZSH_VERSION-}\" ]; then", "    DETECTED_PROFILE=\"$HOME/.zshrc\"", "  fi", "", "  if [ -z \"$DETECTED_PROFILE\" ]; then", "    for EACH_PROFILE in \".profile\" \".bashrc\" \".bash_profile\" \".zshrc\"", "    do", "      if DETECTED_PROFILE=\"$(nvm_try_profile \"${HOME}/${EACH_PROFILE}\")\"; then", "        break", "      fi", "    done", "  fi", "", "  if [ -n \"$DETECTED_PROFILE\" ]; then", "    echo \"$DETECTED_PROFILE\"", "  fi", "}", "", "#", "# Check whether the user has any globally-installed npm modules in their system", "# Node, and warn them if so.", "#", "nvm_check_global_modules() {", "  command -v npm >/dev/null 2>&1 || return 0", "", "  local NPM_VERSION", "  NPM_VERSION=\"$(npm --version)\"", "  NPM_VERSION=\"${NPM_VERSION:--1}\"", "  [ \"${NPM_VERSION%%[!-0-9]*}\" -gt 0 ] || return 0", "", "  local NPM_GLOBAL_MODULES", "  NPM_GLOBAL_MODULES=\"$(", "    npm list -g --depth=0 |", "    command sed -e '/ npm@/d' -e '/ (empty)$/d'", "  )\"", "", "  local MODULE_COUNT", "  MODULE_COUNT=\"$(", "    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\" |", "    command sed -ne '1!p' |                     # Remove the first line", "    wc -l | command tr -d ' '                   # Count entries", "  )\"", "", "  if [ \"${MODULE_COUNT}\" != '0' ]; then", "    # shellcheck disable=SC2016", "    echo '=> You currently have modules installed globally with `npm`. These will no'", "    # shellcheck disable=SC2016", "    echo '=> longer be linked to the active version of Node when you install a new node'", "    # shellcheck disable=SC2016", "    echo '=> with `nvm`; and they may (depending on how you construct your `$PATH`)'", "    # shellcheck disable=SC2016", "    echo '=> override the binaries of modules installed with `nvm`:'", "    echo", "", "    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\"", "    echo '=> If you wish to uninstall them at a later point (or re-install them under your'", "    # shellcheck disable=SC2016", "    echo '=> `nvm` Nodes), you can remove them from the system Node as follows:'", "    echo", "    echo '     $ nvm use system'", "    echo '     $ npm uninstall -g a_module'", "    echo", "  fi", "}", "", "nvm_do_install() {", "  if [ -n \"${NVM_DIR-}\" ] && ! [ -d \"${NVM_DIR}\" ]; then", "    if [ -e \"${NVM_DIR}\" ]; then", "      echo >&2 \"File \\\"${NVM_DIR}\\\" has the same name as installation directory.\"", "      exit 1", "    fi", "", "    if [ \"${NVM_DIR}\" = \"$(nvm_default_install_dir)\" ]; then", "      mkdir \"${NVM_DIR}\"", "    else", "      echo >&2 \"You have \\$NVM_DIR set to \\\"${NVM_DIR}\\\", but that directory does not exist. Check your profile files and environment.\"", "      exit 1", "    fi", "  fi", "  if [ -z \"${METHOD}\" ]; then", "    # Autodetect install method", "    if nvm_has git; then", "      install_nvm_from_git", "    elif nvm_has nvm_download; then", "      install_nvm_as_script", "    else", "      echo >&2 'You need git, curl, or wget to install nvm'", "      exit 1", "    fi", "  elif [ \"${METHOD}\" = 'git' ]; then", "    if ! nvm_has git; then", "      echo >&2 \"You need git to install nvm\"", "      exit 1", "    fi", "    install_nvm_from_git", "  elif [ \"${METHOD}\" = 'script' ]; then", "    if ! nvm_has nvm_download; then", "      echo >&2 \"You need curl or wget to install nvm\"", "      exit 1", "    fi", "    install_nvm_as_script", "  else", "    echo >&2 \"The environment variable \\$METHOD is set to \\\"${METHOD}\\\", which is not recognized as a valid installation method.\"", "    exit 1", "  fi", "", "  echo", "", "  local NVM_PROFILE", "  NVM_PROFILE=\"$(nvm_detect_profile)\"", "  local PROFILE_INSTALL_DIR", "  PROFILE_INSTALL_DIR=\"$(nvm_install_dir | command sed \"s:^$HOME:\\$HOME:\")\"", "", "  SOURCE_STR=\"\\\\nexport NVM_DIR=\\\"${PROFILE_INSTALL_DIR}\\\"\\\\n[ -s \\\"\\$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"\\$NVM_DIR/nvm.sh\\\"  # This loads nvm\\\\n\"", "", "  # shellcheck disable=SC2016", "  COMPLETION_STR='[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\\n'", "  BASH_OR_ZSH=false", "", "  if [ -z \"${NVM_PROFILE-}\" ] ; then", "    local TRIED_PROFILE", "    if [ -n \"${PROFILE}\" ]; then", "      TRIED_PROFILE=\"${NVM_PROFILE} (as defined in \\$PROFILE), \"", "    fi", "    echo \"=> Profile not found. Tried ${TRIED_PROFILE-}~/.bashrc, ~/.bash_profile, ~/.zshrc, and ~/.profile.\"", "    echo \"=> Create one of them and run this script again\"", "    echo \"   OR\"", "    echo \"=> Append the following lines to the correct file yourself:\"", "    command printf \"${SOURCE_STR}\"", "    echo", "  else", "    if nvm_profile_is_bash_or_zsh \"${NVM_PROFILE-}\"; then", "      BASH_OR_ZSH=true", "    fi", "    if ! command grep -qc '/nvm.sh' \"$NVM_PROFILE\"; then", "      echo \"=> Appending nvm source string to $NVM_PROFILE\"", "      command printf \"${SOURCE_STR}\" >> \"$NVM_PROFILE\"", "    else", "      echo \"=> nvm source string already in ${NVM_PROFILE}\"", "    fi", "    # shellcheck disable=SC2016", "    if ${BASH_OR_ZSH} && ! command grep -qc '$NVM_DIR/bash_completion' \"$NVM_PROFILE\"; then", "      echo \"=> Appending bash_completion source string to $NVM_PROFILE\"", "      command printf \"$COMPLETION_STR\" >> \"$NVM_PROFILE\"", "    else", "      echo \"=> bash_completion source string already in ${NVM_PROFILE}\"", "    fi", "  fi", "  if ${BASH_OR_ZSH} && [ -z \"${NVM_PROFILE-}\" ] ; then", "    echo \"=> Please also append the following lines to the if you are using bash/zsh shell:\"", "    command printf \"${COMPLETION_STR}\"", "  fi", "", "  # Source nvm", "  # shellcheck source=/dev/null", "  \\. \"$(nvm_install_dir)/nvm.sh\"", "", "  nvm_check_global_modules", "", "  nvm_install_node", "", "  nvm_reset", "", "  echo \"=> Close and reopen your terminal to start using nvm or run the following to use it now:\"", "  command printf \"${SOURCE_STR}\"", "  if ${BASH_OR_ZSH} ; then", "    command printf \"${COMPLETION_STR}\"", "  fi", "}", "", "#", "# Unsets the various functions defined", "# during the execution of the install script", "#", "nvm_reset() {", "  unset -f nvm_has nvm_install_dir nvm_latest_version nvm_profile_is_bash_or_zsh \\", "    nvm_source nvm_node_version nvm_download install_nvm_from_git nvm_install_node \\", "    install_nvm_as_script nvm_try_profile nvm_detect_profile nvm_check_global_modules \\", "    nvm_do_install nvm_reset nvm_default_install_dir", "}", "", "[ \"_$NVM_ENV\" = \"_testing\" ] || nvm_do_install", "", "} # this ensures the entire script is downloaded #"]}
2024-05-19 18:06:34,606 p=207142 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************
2024-05-19 18:06:34,606 p=207142 u=root n=ansible | localhost                  : ok=12   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 20:52:56,122 p=114776 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 20:52:56,329 p=114776 u=root n=ansible | PLAY [Configure local machine] **************************************************************
2024-05-23 20:52:56,343 p=114776 u=root n=ansible | TASK [Gathering Facts] **********************************************************************
2024-05-23 20:52:57,223 p=114776 u=root n=ansible | ok: [localhost]
2024-05-23 20:52:57,244 p=114776 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] **********************************
2024-05-23 20:52:58,250 p=114776 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716473423, "cache_updated": false, "changed": false}
2024-05-23 20:52:58,260 p=114776 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ***************************************
2024-05-23 20:52:58,273 p=114776 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 20:52:58,281 p=114776 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ***********************************
2024-05-23 20:52:58,294 p=114776 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 20:52:58,304 p=114776 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] **********************************
2024-05-23 20:53:17,087 p=114776 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716477794, "cache_updated": true, "changed": true}
2024-05-23 20:53:17,096 p=114776 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] ****************************************
2024-05-23 20:53:17,113 p=114776 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 20:53:17,122 p=114776 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] **************************************************
2024-05-23 20:53:17,132 p=114776 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 20:53:17,141 p=114776 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] *****************************************
2024-05-23 20:53:17,151 p=114776 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 20:53:17,177 p=114776 u=root n=ansible | TASK [setup : include_vars] *****************************************************************
2024-05-23 20:53:17,191 p=114776 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 20:53:17,198 p=114776 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] ************************
2024-05-23 20:53:18,058 p=114776 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716477794, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 20:53:18,894 p=114776 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716477794, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 20:53:19,783 p=114776 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716477794, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 20:53:20,623 p=114776 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716477794, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 20:53:21,492 p=114776 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716477794, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 20:53:22,364 p=114776 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716477794, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 20:53:23,393 p=114776 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716477794, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 20:53:24,274 p=114776 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716477794, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 20:53:25,226 p=114776 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716477794, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 20:53:26,070 p=114776 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716477794, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 20:53:26,908 p=114776 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716477794, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 20:53:27,774 p=114776 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716477794, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 20:53:28,615 p=114776 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716477794, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 20:53:29,473 p=114776 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716477794, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 20:53:30,319 p=114776 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716477794, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 20:53:31,184 p=114776 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716477794, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 20:53:31,197 p=114776 u=root n=ansible | TASK [setup : install all command line tool on macOS] ***************************************
2024-05-23 20:53:31,214 p=114776 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 20:53:31,219 p=114776 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 20:53:31,224 p=114776 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 20:53:31,224 p=114776 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 20:53:31,225 p=114776 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 20:53:31,225 p=114776 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 20:53:31,231 p=114776 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 20:53:31,231 p=114776 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 20:53:31,231 p=114776 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 20:53:31,236 p=114776 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 20:53:31,242 p=114776 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 20:53:31,242 p=114776 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 20:53:31,243 p=114776 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 20:53:31,243 p=114776 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 20:53:31,245 p=114776 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 20:53:31,245 p=114776 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 20:53:31,246 p=114776 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 20:53:31,265 p=114776 u=root n=ansible | TASK [setup : install python tools] *********************************************************
2024-05-23 20:53:33,331 p=114776 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.782813", "end": "2024-05-23 20:53:33.309070", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 20:53:31.526257", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 20:53:35,023 p=114776 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.535441", "end": "2024-05-23 20:53:34.998318", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 20:53:33.462877", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 20:53:36,749 p=114776 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.574485", "end": "2024-05-23 20:53:36.728031", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 20:53:35.153546", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 20:53:36,760 p=114776 u=root n=ansible | TASK [setup : checking Var require in scripts] **********************************************
2024-05-23 20:53:36,776 p=114776 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 20:53:36,783 p=114776 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ***************************************
2024-05-23 20:53:37,675 p=114776 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716477794, "cache_updated": false, "changed": false}
2024-05-23 20:53:37,682 p=114776 u=root n=ansible | TASK [setup : Install Neovim on macOS] ******************************************************
2024-05-23 20:53:37,695 p=114776 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 20:53:37,706 p=114776 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] *********************************
2024-05-23 20:53:38,012 p=114776 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 20:53:38,021 p=114776 u=root n=ansible | TASK [setup : Clone the Neovim config] ******************************************************
2024-05-23 20:53:39,091 p=114776 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 20:53:39,099 p=114776 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] *******************************
2024-05-23 20:53:39,114 p=114776 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 20:53:39,122 p=114776 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] ****************
2024-05-23 20:53:39,136 p=114776 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 20:53:39,145 p=114776 u=root n=ansible | TASK [setup : Install NVM] ******************************************************************
2024-05-23 20:53:39,676 p=114776 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["curl", "-o-", "https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh", "|", "bash"], "delta": "0:00:00.342304", "end": "2024-05-23 20:53:39.637350", "msg": "non-zero return code", "rc": 6, "start": "2024-05-23 20:53:39.295046", "stderr": "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100 13527  100 13527    0     0  40742      0 --:--:-- --:--:-- --:--:-- 40867\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: |\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: bash", "stderr_lines": ["  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current", "                                 Dload  Upload   Total   Spent    Left  Speed", "", "  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0", "100 13527  100 13527    0     0  40742      0 --:--:-- --:--:-- --:--:-- 40867", "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current", "                                 Dload  Upload   Total   Spent    Left  Speed", "", "  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: |", "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current", "                                 Dload  Upload   Total   Spent    Left  Speed", "", "  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0curl: (6) Could not resolve host: bash"], "stdout": "#!/usr/bin/env bash\n\n{ # this ensures the entire script is downloaded #\n\nnvm_has() {\n  type \"$1\" > /dev/null 2>&1\n}\n\nnvm_default_install_dir() {\n  [ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\"\n}\n\nnvm_install_dir() {\n  if [ -n \"$NVM_DIR\" ]; then\n    printf %s \"${NVM_DIR}\"\n  else\n    nvm_default_install_dir\n  fi\n}\n\nnvm_latest_version() {\n  echo \"v0.35.3\"\n}\n\nnvm_profile_is_bash_or_zsh() {\n  local TEST_PROFILE\n  TEST_PROFILE=\"${1-}\"\n  case \"${TEST_PROFILE-}\" in\n    *\"/.bashrc\" | *\"/.bash_profile\" | *\"/.zshrc\")\n      return\n    ;;\n    *)\n      return 1\n    ;;\n  esac\n}\n\n#\n# Outputs the location to NVM depending on:\n# * The availability of $NVM_SOURCE\n# * The method used (\"script\" or \"git\" in the script, defaults to \"git\")\n# NVM_SOURCE always takes precedence unless the method is \"script-nvm-exec\"\n#\nnvm_source() {\n  local NVM_METHOD\n  NVM_METHOD=\"$1\"\n  local NVM_SOURCE_URL\n  NVM_SOURCE_URL=\"$NVM_SOURCE\"\n  if [ \"_$NVM_METHOD\" = \"_script-nvm-exec\" ]; then\n    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm-exec\"\n  elif [ \"_$NVM_METHOD\" = \"_script-nvm-bash-completion\" ]; then\n    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/bash_completion\"\n  elif [ -z \"$NVM_SOURCE_URL\" ]; then\n    if [ \"_$NVM_METHOD\" = \"_script\" ]; then\n      NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm.sh\"\n    elif [ \"_$NVM_METHOD\" = \"_git\" ] || [ -z \"$NVM_METHOD\" ]; then\n      NVM_SOURCE_URL=\"https://github.com/nvm-sh/nvm.git\"\n    else\n      echo >&2 \"Unexpected value \\\"$NVM_METHOD\\\" for \\$NVM_METHOD\"\n      return 1\n    fi\n  fi\n  echo \"$NVM_SOURCE_URL\"\n}\n\n#\n# Node.js version to install\n#\nnvm_node_version() {\n  echo \"$NODE_VERSION\"\n}\n\nnvm_download() {\n  if nvm_has \"curl\"; then\n    curl --compressed -q \"$@\"\n  elif nvm_has \"wget\"; then\n    # Emulate curl with wget\n    ARGS=$(echo \"$*\" | command sed -e 's/--progress-bar /--progress=bar /' \\\n                            -e 's/-L //' \\\n                            -e 's/--compressed //' \\\n                            -e 's/-I /--server-response /' \\\n                            -e 's/-s /-q /' \\\n                            -e 's/-o /-O /' \\\n                            -e 's/-C - /-c /')\n    # shellcheck disable=SC2086\n    eval wget $ARGS\n  fi\n}\n\ninstall_nvm_from_git() {\n  local INSTALL_DIR\n  INSTALL_DIR=\"$(nvm_install_dir)\"\n\n  if [ -d \"$INSTALL_DIR/.git\" ]; then\n    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update using git\"\n    command printf '\\r=> '\n    command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 2> /dev/null || {\n      echo >&2 \"Failed to update nvm, run 'git fetch' in $INSTALL_DIR yourself.\"\n      exit 1\n    }\n  else\n    # Cloning to $INSTALL_DIR\n    echo \"=> Downloading nvm from git to '$INSTALL_DIR'\"\n    command printf '\\r=> '\n    mkdir -p \"${INSTALL_DIR}\"\n    if [ \"$(ls -A \"${INSTALL_DIR}\")\" ]; then\n      command git init \"${INSTALL_DIR}\" || {\n        echo >&2 'Failed to initialize nvm repo. Please report this!'\n        exit 2\n      }\n      command git --git-dir=\"${INSTALL_DIR}/.git\" remote add origin \"$(nvm_source)\" 2> /dev/null \\\n        || command git --git-dir=\"${INSTALL_DIR}/.git\" remote set-url origin \"$(nvm_source)\" || {\n        echo >&2 'Failed to add remote \"origin\" (or set the URL). Please report this!'\n        exit 2\n      }\n      command git --git-dir=\"${INSTALL_DIR}/.git\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 || {\n        echo >&2 'Failed to fetch origin with tags. Please report this!'\n        exit 2\n      }\n    else\n      command git -c advice.detachedHead=false clone \"$(nvm_source)\" -b \"$(nvm_latest_version)\" --depth=1 \"${INSTALL_DIR}\" || {\n        echo >&2 'Failed to clone nvm repo. Please report this!'\n        exit 2\n      }\n    fi\n  fi\n  command git -c advice.detachedHead=false --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" checkout -f --quiet \"$(nvm_latest_version)\"\n  if [ -n \"$(command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" show-ref refs/heads/master)\" ]; then\n    if command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet 2>/dev/null; then\n      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet -D master >/dev/null 2>&1\n    else\n      echo >&2 \"Your version of git is out of date. Please update it!\"\n      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch -D master >/dev/null 2>&1\n    fi\n  fi\n\n  echo \"=> Compressing and cleaning up git repository\"\n  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" reflog expire --expire=now --all; then\n    echo >&2 \"Your version of git is out of date. Please update it!\"\n  fi\n  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" gc --auto --aggressive --prune=now ; then\n    echo >&2 \"Your version of git is out of date. Please update it!\"\n  fi\n  return\n}\n\n#\n# Automatically install Node.js\n#\nnvm_install_node() {\n  local NODE_VERSION_LOCAL\n  NODE_VERSION_LOCAL=\"$(nvm_node_version)\"\n\n  if [ -z \"$NODE_VERSION_LOCAL\" ]; then\n    return 0\n  fi\n\n  echo \"=> Installing Node.js version $NODE_VERSION_LOCAL\"\n  nvm install \"$NODE_VERSION_LOCAL\"\n  local CURRENT_NVM_NODE\n\n  CURRENT_NVM_NODE=\"$(nvm_version current)\"\n  if [ \"$(nvm_version \"$NODE_VERSION_LOCAL\")\" == \"$CURRENT_NVM_NODE\" ]; then\n    echo \"=> Node.js version $NODE_VERSION_LOCAL has been successfully installed\"\n  else\n    echo >&2 \"Failed to install Node.js $NODE_VERSION_LOCAL\"\n  fi\n}\n\ninstall_nvm_as_script() {\n  local INSTALL_DIR\n  INSTALL_DIR=\"$(nvm_install_dir)\"\n  local NVM_SOURCE_LOCAL\n  NVM_SOURCE_LOCAL=\"$(nvm_source script)\"\n  local NVM_EXEC_SOURCE\n  NVM_EXEC_SOURCE=\"$(nvm_source script-nvm-exec)\"\n  local NVM_BASH_COMPLETION_SOURCE\n  NVM_BASH_COMPLETION_SOURCE=\"$(nvm_source script-nvm-bash-completion)\"\n\n  # Downloading to $INSTALL_DIR\n  mkdir -p \"$INSTALL_DIR\"\n  if [ -f \"$INSTALL_DIR/nvm.sh\" ]; then\n    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update the script\"\n  else\n    echo \"=> Downloading nvm as script to '$INSTALL_DIR'\"\n  fi\n  nvm_download -s \"$NVM_SOURCE_LOCAL\" -o \"$INSTALL_DIR/nvm.sh\" || {\n    echo >&2 \"Failed to download '$NVM_SOURCE_LOCAL'\"\n    return 1\n  } &\n  nvm_download -s \"$NVM_EXEC_SOURCE\" -o \"$INSTALL_DIR/nvm-exec\" || {\n    echo >&2 \"Failed to download '$NVM_EXEC_SOURCE'\"\n    return 2\n  } &\n  nvm_download -s \"$NVM_BASH_COMPLETION_SOURCE\" -o \"$INSTALL_DIR/bash_completion\" || {\n    echo >&2 \"Failed to download '$NVM_BASH_COMPLETION_SOURCE'\"\n    return 2\n  } &\n  for job in $(jobs -p | command sort)\n  do\n    wait \"$job\" || return $?\n  done\n  chmod a+x \"$INSTALL_DIR/nvm-exec\" || {\n    echo >&2 \"Failed to mark '$INSTALL_DIR/nvm-exec' as executable\"\n    return 3\n  }\n}\n\nnvm_try_profile() {\n  if [ -z \"${1-}\" ] || [ ! -f \"${1}\" ]; then\n    return 1\n  fi\n  echo \"${1}\"\n}\n\n#\n# Detect profile file if not specified as environment variable\n# (eg: PROFILE=~/.myprofile)\n# The echo'ed path is guaranteed to be an existing file\n# Otherwise, an empty string is returned\n#\nnvm_detect_profile() {\n  if [ \"${PROFILE-}\" = '/dev/null' ]; then\n    # the user has specifically requested NOT to have nvm touch their profile\n    return\n  fi\n\n  if [ -n \"${PROFILE}\" ] && [ -f \"${PROFILE}\" ]; then\n    echo \"${PROFILE}\"\n    return\n  fi\n\n  local DETECTED_PROFILE\n  DETECTED_PROFILE=''\n\n  if [ -n \"${BASH_VERSION-}\" ]; then\n    if [ -f \"$HOME/.bashrc\" ]; then\n      DETECTED_PROFILE=\"$HOME/.bashrc\"\n    elif [ -f \"$HOME/.bash_profile\" ]; then\n      DETECTED_PROFILE=\"$HOME/.bash_profile\"\n    fi\n  elif [ -n \"${ZSH_VERSION-}\" ]; then\n    DETECTED_PROFILE=\"$HOME/.zshrc\"\n  fi\n\n  if [ -z \"$DETECTED_PROFILE\" ]; then\n    for EACH_PROFILE in \".profile\" \".bashrc\" \".bash_profile\" \".zshrc\"\n    do\n      if DETECTED_PROFILE=\"$(nvm_try_profile \"${HOME}/${EACH_PROFILE}\")\"; then\n        break\n      fi\n    done\n  fi\n\n  if [ -n \"$DETECTED_PROFILE\" ]; then\n    echo \"$DETECTED_PROFILE\"\n  fi\n}\n\n#\n# Check whether the user has any globally-installed npm modules in their system\n# Node, and warn them if so.\n#\nnvm_check_global_modules() {\n  command -v npm >/dev/null 2>&1 || return 0\n\n  local NPM_VERSION\n  NPM_VERSION=\"$(npm --version)\"\n  NPM_VERSION=\"${NPM_VERSION:--1}\"\n  [ \"${NPM_VERSION%%[!-0-9]*}\" -gt 0 ] || return 0\n\n  local NPM_GLOBAL_MODULES\n  NPM_GLOBAL_MODULES=\"$(\n    npm list -g --depth=0 |\n    command sed -e '/ npm@/d' -e '/ (empty)$/d'\n  )\"\n\n  local MODULE_COUNT\n  MODULE_COUNT=\"$(\n    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\" |\n    command sed -ne '1!p' |                     # Remove the first line\n    wc -l | command tr -d ' '                   # Count entries\n  )\"\n\n  if [ \"${MODULE_COUNT}\" != '0' ]; then\n    # shellcheck disable=SC2016\n    echo '=> You currently have modules installed globally with `npm`. These will no'\n    # shellcheck disable=SC2016\n    echo '=> longer be linked to the active version of Node when you install a new node'\n    # shellcheck disable=SC2016\n    echo '=> with `nvm`; and they may (depending on how you construct your `$PATH`)'\n    # shellcheck disable=SC2016\n    echo '=> override the binaries of modules installed with `nvm`:'\n    echo\n\n    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\"\n    echo '=> If you wish to uninstall them at a later point (or re-install them under your'\n    # shellcheck disable=SC2016\n    echo '=> `nvm` Nodes), you can remove them from the system Node as follows:'\n    echo\n    echo '     $ nvm use system'\n    echo '     $ npm uninstall -g a_module'\n    echo\n  fi\n}\n\nnvm_do_install() {\n  if [ -n \"${NVM_DIR-}\" ] && ! [ -d \"${NVM_DIR}\" ]; then\n    if [ -e \"${NVM_DIR}\" ]; then\n      echo >&2 \"File \\\"${NVM_DIR}\\\" has the same name as installation directory.\"\n      exit 1\n    fi\n\n    if [ \"${NVM_DIR}\" = \"$(nvm_default_install_dir)\" ]; then\n      mkdir \"${NVM_DIR}\"\n    else\n      echo >&2 \"You have \\$NVM_DIR set to \\\"${NVM_DIR}\\\", but that directory does not exist. Check your profile files and environment.\"\n      exit 1\n    fi\n  fi\n  if [ -z \"${METHOD}\" ]; then\n    # Autodetect install method\n    if nvm_has git; then\n      install_nvm_from_git\n    elif nvm_has nvm_download; then\n      install_nvm_as_script\n    else\n      echo >&2 'You need git, curl, or wget to install nvm'\n      exit 1\n    fi\n  elif [ \"${METHOD}\" = 'git' ]; then\n    if ! nvm_has git; then\n      echo >&2 \"You need git to install nvm\"\n      exit 1\n    fi\n    install_nvm_from_git\n  elif [ \"${METHOD}\" = 'script' ]; then\n    if ! nvm_has nvm_download; then\n      echo >&2 \"You need curl or wget to install nvm\"\n      exit 1\n    fi\n    install_nvm_as_script\n  else\n    echo >&2 \"The environment variable \\$METHOD is set to \\\"${METHOD}\\\", which is not recognized as a valid installation method.\"\n    exit 1\n  fi\n\n  echo\n\n  local NVM_PROFILE\n  NVM_PROFILE=\"$(nvm_detect_profile)\"\n  local PROFILE_INSTALL_DIR\n  PROFILE_INSTALL_DIR=\"$(nvm_install_dir | command sed \"s:^$HOME:\\$HOME:\")\"\n\n  SOURCE_STR=\"\\\\nexport NVM_DIR=\\\"${PROFILE_INSTALL_DIR}\\\"\\\\n[ -s \\\"\\$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"\\$NVM_DIR/nvm.sh\\\"  # This loads nvm\\\\n\"\n\n  # shellcheck disable=SC2016\n  COMPLETION_STR='[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\\n'\n  BASH_OR_ZSH=false\n\n  if [ -z \"${NVM_PROFILE-}\" ] ; then\n    local TRIED_PROFILE\n    if [ -n \"${PROFILE}\" ]; then\n      TRIED_PROFILE=\"${NVM_PROFILE} (as defined in \\$PROFILE), \"\n    fi\n    echo \"=> Profile not found. Tried ${TRIED_PROFILE-}~/.bashrc, ~/.bash_profile, ~/.zshrc, and ~/.profile.\"\n    echo \"=> Create one of them and run this script again\"\n    echo \"   OR\"\n    echo \"=> Append the following lines to the correct file yourself:\"\n    command printf \"${SOURCE_STR}\"\n    echo\n  else\n    if nvm_profile_is_bash_or_zsh \"${NVM_PROFILE-}\"; then\n      BASH_OR_ZSH=true\n    fi\n    if ! command grep -qc '/nvm.sh' \"$NVM_PROFILE\"; then\n      echo \"=> Appending nvm source string to $NVM_PROFILE\"\n      command printf \"${SOURCE_STR}\" >> \"$NVM_PROFILE\"\n    else\n      echo \"=> nvm source string already in ${NVM_PROFILE}\"\n    fi\n    # shellcheck disable=SC2016\n    if ${BASH_OR_ZSH} && ! command grep -qc '$NVM_DIR/bash_completion' \"$NVM_PROFILE\"; then\n      echo \"=> Appending bash_completion source string to $NVM_PROFILE\"\n      command printf \"$COMPLETION_STR\" >> \"$NVM_PROFILE\"\n    else\n      echo \"=> bash_completion source string already in ${NVM_PROFILE}\"\n    fi\n  fi\n  if ${BASH_OR_ZSH} && [ -z \"${NVM_PROFILE-}\" ] ; then\n    echo \"=> Please also append the following lines to the if you are using bash/zsh shell:\"\n    command printf \"${COMPLETION_STR}\"\n  fi\n\n  # Source nvm\n  # shellcheck source=/dev/null\n  \\. \"$(nvm_install_dir)/nvm.sh\"\n\n  nvm_check_global_modules\n\n  nvm_install_node\n\n  nvm_reset\n\n  echo \"=> Close and reopen your terminal to start using nvm or run the following to use it now:\"\n  command printf \"${SOURCE_STR}\"\n  if ${BASH_OR_ZSH} ; then\n    command printf \"${COMPLETION_STR}\"\n  fi\n}\n\n#\n# Unsets the various functions defined\n# during the execution of the install script\n#\nnvm_reset() {\n  unset -f nvm_has nvm_install_dir nvm_latest_version nvm_profile_is_bash_or_zsh \\\n    nvm_source nvm_node_version nvm_download install_nvm_from_git nvm_install_node \\\n    install_nvm_as_script nvm_try_profile nvm_detect_profile nvm_check_global_modules \\\n    nvm_do_install nvm_reset nvm_default_install_dir\n}\n\n[ \"_$NVM_ENV\" = \"_testing\" ] || nvm_do_install\n\n} # this ensures the entire script is downloaded #", "stdout_lines": ["#!/usr/bin/env bash", "", "{ # this ensures the entire script is downloaded #", "", "nvm_has() {", "  type \"$1\" > /dev/null 2>&1", "}", "", "nvm_default_install_dir() {", "  [ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\"", "}", "", "nvm_install_dir() {", "  if [ -n \"$NVM_DIR\" ]; then", "    printf %s \"${NVM_DIR}\"", "  else", "    nvm_default_install_dir", "  fi", "}", "", "nvm_latest_version() {", "  echo \"v0.35.3\"", "}", "", "nvm_profile_is_bash_or_zsh() {", "  local TEST_PROFILE", "  TEST_PROFILE=\"${1-}\"", "  case \"${TEST_PROFILE-}\" in", "    *\"/.bashrc\" | *\"/.bash_profile\" | *\"/.zshrc\")", "      return", "    ;;", "    *)", "      return 1", "    ;;", "  esac", "}", "", "#", "# Outputs the location to NVM depending on:", "# * The availability of $NVM_SOURCE", "# * The method used (\"script\" or \"git\" in the script, defaults to \"git\")", "# NVM_SOURCE always takes precedence unless the method is \"script-nvm-exec\"", "#", "nvm_source() {", "  local NVM_METHOD", "  NVM_METHOD=\"$1\"", "  local NVM_SOURCE_URL", "  NVM_SOURCE_URL=\"$NVM_SOURCE\"", "  if [ \"_$NVM_METHOD\" = \"_script-nvm-exec\" ]; then", "    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm-exec\"", "  elif [ \"_$NVM_METHOD\" = \"_script-nvm-bash-completion\" ]; then", "    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/bash_completion\"", "  elif [ -z \"$NVM_SOURCE_URL\" ]; then", "    if [ \"_$NVM_METHOD\" = \"_script\" ]; then", "      NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm.sh\"", "    elif [ \"_$NVM_METHOD\" = \"_git\" ] || [ -z \"$NVM_METHOD\" ]; then", "      NVM_SOURCE_URL=\"https://github.com/nvm-sh/nvm.git\"", "    else", "      echo >&2 \"Unexpected value \\\"$NVM_METHOD\\\" for \\$NVM_METHOD\"", "      return 1", "    fi", "  fi", "  echo \"$NVM_SOURCE_URL\"", "}", "", "#", "# Node.js version to install", "#", "nvm_node_version() {", "  echo \"$NODE_VERSION\"", "}", "", "nvm_download() {", "  if nvm_has \"curl\"; then", "    curl --compressed -q \"$@\"", "  elif nvm_has \"wget\"; then", "    # Emulate curl with wget", "    ARGS=$(echo \"$*\" | command sed -e 's/--progress-bar /--progress=bar /' \\", "                            -e 's/-L //' \\", "                            -e 's/--compressed //' \\", "                            -e 's/-I /--server-response /' \\", "                            -e 's/-s /-q /' \\", "                            -e 's/-o /-O /' \\", "                            -e 's/-C - /-c /')", "    # shellcheck disable=SC2086", "    eval wget $ARGS", "  fi", "}", "", "install_nvm_from_git() {", "  local INSTALL_DIR", "  INSTALL_DIR=\"$(nvm_install_dir)\"", "", "  if [ -d \"$INSTALL_DIR/.git\" ]; then", "    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update using git\"", "    command printf '\\r=> '", "    command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 2> /dev/null || {", "      echo >&2 \"Failed to update nvm, run 'git fetch' in $INSTALL_DIR yourself.\"", "      exit 1", "    }", "  else", "    # Cloning to $INSTALL_DIR", "    echo \"=> Downloading nvm from git to '$INSTALL_DIR'\"", "    command printf '\\r=> '", "    mkdir -p \"${INSTALL_DIR}\"", "    if [ \"$(ls -A \"${INSTALL_DIR}\")\" ]; then", "      command git init \"${INSTALL_DIR}\" || {", "        echo >&2 'Failed to initialize nvm repo. Please report this!'", "        exit 2", "      }", "      command git --git-dir=\"${INSTALL_DIR}/.git\" remote add origin \"$(nvm_source)\" 2> /dev/null \\", "        || command git --git-dir=\"${INSTALL_DIR}/.git\" remote set-url origin \"$(nvm_source)\" || {", "        echo >&2 'Failed to add remote \"origin\" (or set the URL). Please report this!'", "        exit 2", "      }", "      command git --git-dir=\"${INSTALL_DIR}/.git\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 || {", "        echo >&2 'Failed to fetch origin with tags. Please report this!'", "        exit 2", "      }", "    else", "      command git -c advice.detachedHead=false clone \"$(nvm_source)\" -b \"$(nvm_latest_version)\" --depth=1 \"${INSTALL_DIR}\" || {", "        echo >&2 'Failed to clone nvm repo. Please report this!'", "        exit 2", "      }", "    fi", "  fi", "  command git -c advice.detachedHead=false --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" checkout -f --quiet \"$(nvm_latest_version)\"", "  if [ -n \"$(command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" show-ref refs/heads/master)\" ]; then", "    if command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet 2>/dev/null; then", "      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet -D master >/dev/null 2>&1", "    else", "      echo >&2 \"Your version of git is out of date. Please update it!\"", "      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch -D master >/dev/null 2>&1", "    fi", "  fi", "", "  echo \"=> Compressing and cleaning up git repository\"", "  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" reflog expire --expire=now --all; then", "    echo >&2 \"Your version of git is out of date. Please update it!\"", "  fi", "  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" gc --auto --aggressive --prune=now ; then", "    echo >&2 \"Your version of git is out of date. Please update it!\"", "  fi", "  return", "}", "", "#", "# Automatically install Node.js", "#", "nvm_install_node() {", "  local NODE_VERSION_LOCAL", "  NODE_VERSION_LOCAL=\"$(nvm_node_version)\"", "", "  if [ -z \"$NODE_VERSION_LOCAL\" ]; then", "    return 0", "  fi", "", "  echo \"=> Installing Node.js version $NODE_VERSION_LOCAL\"", "  nvm install \"$NODE_VERSION_LOCAL\"", "  local CURRENT_NVM_NODE", "", "  CURRENT_NVM_NODE=\"$(nvm_version current)\"", "  if [ \"$(nvm_version \"$NODE_VERSION_LOCAL\")\" == \"$CURRENT_NVM_NODE\" ]; then", "    echo \"=> Node.js version $NODE_VERSION_LOCAL has been successfully installed\"", "  else", "    echo >&2 \"Failed to install Node.js $NODE_VERSION_LOCAL\"", "  fi", "}", "", "install_nvm_as_script() {", "  local INSTALL_DIR", "  INSTALL_DIR=\"$(nvm_install_dir)\"", "  local NVM_SOURCE_LOCAL", "  NVM_SOURCE_LOCAL=\"$(nvm_source script)\"", "  local NVM_EXEC_SOURCE", "  NVM_EXEC_SOURCE=\"$(nvm_source script-nvm-exec)\"", "  local NVM_BASH_COMPLETION_SOURCE", "  NVM_BASH_COMPLETION_SOURCE=\"$(nvm_source script-nvm-bash-completion)\"", "", "  # Downloading to $INSTALL_DIR", "  mkdir -p \"$INSTALL_DIR\"", "  if [ -f \"$INSTALL_DIR/nvm.sh\" ]; then", "    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update the script\"", "  else", "    echo \"=> Downloading nvm as script to '$INSTALL_DIR'\"", "  fi", "  nvm_download -s \"$NVM_SOURCE_LOCAL\" -o \"$INSTALL_DIR/nvm.sh\" || {", "    echo >&2 \"Failed to download '$NVM_SOURCE_LOCAL'\"", "    return 1", "  } &", "  nvm_download -s \"$NVM_EXEC_SOURCE\" -o \"$INSTALL_DIR/nvm-exec\" || {", "    echo >&2 \"Failed to download '$NVM_EXEC_SOURCE'\"", "    return 2", "  } &", "  nvm_download -s \"$NVM_BASH_COMPLETION_SOURCE\" -o \"$INSTALL_DIR/bash_completion\" || {", "    echo >&2 \"Failed to download '$NVM_BASH_COMPLETION_SOURCE'\"", "    return 2", "  } &", "  for job in $(jobs -p | command sort)", "  do", "    wait \"$job\" || return $?", "  done", "  chmod a+x \"$INSTALL_DIR/nvm-exec\" || {", "    echo >&2 \"Failed to mark '$INSTALL_DIR/nvm-exec' as executable\"", "    return 3", "  }", "}", "", "nvm_try_profile() {", "  if [ -z \"${1-}\" ] || [ ! -f \"${1}\" ]; then", "    return 1", "  fi", "  echo \"${1}\"", "}", "", "#", "# Detect profile file if not specified as environment variable", "# (eg: PROFILE=~/.myprofile)", "# The echo'ed path is guaranteed to be an existing file", "# Otherwise, an empty string is returned", "#", "nvm_detect_profile() {", "  if [ \"${PROFILE-}\" = '/dev/null' ]; then", "    # the user has specifically requested NOT to have nvm touch their profile", "    return", "  fi", "", "  if [ -n \"${PROFILE}\" ] && [ -f \"${PROFILE}\" ]; then", "    echo \"${PROFILE}\"", "    return", "  fi", "", "  local DETECTED_PROFILE", "  DETECTED_PROFILE=''", "", "  if [ -n \"${BASH_VERSION-}\" ]; then", "    if [ -f \"$HOME/.bashrc\" ]; then", "      DETECTED_PROFILE=\"$HOME/.bashrc\"", "    elif [ -f \"$HOME/.bash_profile\" ]; then", "      DETECTED_PROFILE=\"$HOME/.bash_profile\"", "    fi", "  elif [ -n \"${ZSH_VERSION-}\" ]; then", "    DETECTED_PROFILE=\"$HOME/.zshrc\"", "  fi", "", "  if [ -z \"$DETECTED_PROFILE\" ]; then", "    for EACH_PROFILE in \".profile\" \".bashrc\" \".bash_profile\" \".zshrc\"", "    do", "      if DETECTED_PROFILE=\"$(nvm_try_profile \"${HOME}/${EACH_PROFILE}\")\"; then", "        break", "      fi", "    done", "  fi", "", "  if [ -n \"$DETECTED_PROFILE\" ]; then", "    echo \"$DETECTED_PROFILE\"", "  fi", "}", "", "#", "# Check whether the user has any globally-installed npm modules in their system", "# Node, and warn them if so.", "#", "nvm_check_global_modules() {", "  command -v npm >/dev/null 2>&1 || return 0", "", "  local NPM_VERSION", "  NPM_VERSION=\"$(npm --version)\"", "  NPM_VERSION=\"${NPM_VERSION:--1}\"", "  [ \"${NPM_VERSION%%[!-0-9]*}\" -gt 0 ] || return 0", "", "  local NPM_GLOBAL_MODULES", "  NPM_GLOBAL_MODULES=\"$(", "    npm list -g --depth=0 |", "    command sed -e '/ npm@/d' -e '/ (empty)$/d'", "  )\"", "", "  local MODULE_COUNT", "  MODULE_COUNT=\"$(", "    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\" |", "    command sed -ne '1!p' |                     # Remove the first line", "    wc -l | command tr -d ' '                   # Count entries", "  )\"", "", "  if [ \"${MODULE_COUNT}\" != '0' ]; then", "    # shellcheck disable=SC2016", "    echo '=> You currently have modules installed globally with `npm`. These will no'", "    # shellcheck disable=SC2016", "    echo '=> longer be linked to the active version of Node when you install a new node'", "    # shellcheck disable=SC2016", "    echo '=> with `nvm`; and they may (depending on how you construct your `$PATH`)'", "    # shellcheck disable=SC2016", "    echo '=> override the binaries of modules installed with `nvm`:'", "    echo", "", "    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\"", "    echo '=> If you wish to uninstall them at a later point (or re-install them under your'", "    # shellcheck disable=SC2016", "    echo '=> `nvm` Nodes), you can remove them from the system Node as follows:'", "    echo", "    echo '     $ nvm use system'", "    echo '     $ npm uninstall -g a_module'", "    echo", "  fi", "}", "", "nvm_do_install() {", "  if [ -n \"${NVM_DIR-}\" ] && ! [ -d \"${NVM_DIR}\" ]; then", "    if [ -e \"${NVM_DIR}\" ]; then", "      echo >&2 \"File \\\"${NVM_DIR}\\\" has the same name as installation directory.\"", "      exit 1", "    fi", "", "    if [ \"${NVM_DIR}\" = \"$(nvm_default_install_dir)\" ]; then", "      mkdir \"${NVM_DIR}\"", "    else", "      echo >&2 \"You have \\$NVM_DIR set to \\\"${NVM_DIR}\\\", but that directory does not exist. Check your profile files and environment.\"", "      exit 1", "    fi", "  fi", "  if [ -z \"${METHOD}\" ]; then", "    # Autodetect install method", "    if nvm_has git; then", "      install_nvm_from_git", "    elif nvm_has nvm_download; then", "      install_nvm_as_script", "    else", "      echo >&2 'You need git, curl, or wget to install nvm'", "      exit 1", "    fi", "  elif [ \"${METHOD}\" = 'git' ]; then", "    if ! nvm_has git; then", "      echo >&2 \"You need git to install nvm\"", "      exit 1", "    fi", "    install_nvm_from_git", "  elif [ \"${METHOD}\" = 'script' ]; then", "    if ! nvm_has nvm_download; then", "      echo >&2 \"You need curl or wget to install nvm\"", "      exit 1", "    fi", "    install_nvm_as_script", "  else", "    echo >&2 \"The environment variable \\$METHOD is set to \\\"${METHOD}\\\", which is not recognized as a valid installation method.\"", "    exit 1", "  fi", "", "  echo", "", "  local NVM_PROFILE", "  NVM_PROFILE=\"$(nvm_detect_profile)\"", "  local PROFILE_INSTALL_DIR", "  PROFILE_INSTALL_DIR=\"$(nvm_install_dir | command sed \"s:^$HOME:\\$HOME:\")\"", "", "  SOURCE_STR=\"\\\\nexport NVM_DIR=\\\"${PROFILE_INSTALL_DIR}\\\"\\\\n[ -s \\\"\\$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"\\$NVM_DIR/nvm.sh\\\"  # This loads nvm\\\\n\"", "", "  # shellcheck disable=SC2016", "  COMPLETION_STR='[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\\n'", "  BASH_OR_ZSH=false", "", "  if [ -z \"${NVM_PROFILE-}\" ] ; then", "    local TRIED_PROFILE", "    if [ -n \"${PROFILE}\" ]; then", "      TRIED_PROFILE=\"${NVM_PROFILE} (as defined in \\$PROFILE), \"", "    fi", "    echo \"=> Profile not found. Tried ${TRIED_PROFILE-}~/.bashrc, ~/.bash_profile, ~/.zshrc, and ~/.profile.\"", "    echo \"=> Create one of them and run this script again\"", "    echo \"   OR\"", "    echo \"=> Append the following lines to the correct file yourself:\"", "    command printf \"${SOURCE_STR}\"", "    echo", "  else", "    if nvm_profile_is_bash_or_zsh \"${NVM_PROFILE-}\"; then", "      BASH_OR_ZSH=true", "    fi", "    if ! command grep -qc '/nvm.sh' \"$NVM_PROFILE\"; then", "      echo \"=> Appending nvm source string to $NVM_PROFILE\"", "      command printf \"${SOURCE_STR}\" >> \"$NVM_PROFILE\"", "    else", "      echo \"=> nvm source string already in ${NVM_PROFILE}\"", "    fi", "    # shellcheck disable=SC2016", "    if ${BASH_OR_ZSH} && ! command grep -qc '$NVM_DIR/bash_completion' \"$NVM_PROFILE\"; then", "      echo \"=> Appending bash_completion source string to $NVM_PROFILE\"", "      command printf \"$COMPLETION_STR\" >> \"$NVM_PROFILE\"", "    else", "      echo \"=> bash_completion source string already in ${NVM_PROFILE}\"", "    fi", "  fi", "  if ${BASH_OR_ZSH} && [ -z \"${NVM_PROFILE-}\" ] ; then", "    echo \"=> Please also append the following lines to the if you are using bash/zsh shell:\"", "    command printf \"${COMPLETION_STR}\"", "  fi", "", "  # Source nvm", "  # shellcheck source=/dev/null", "  \\. \"$(nvm_install_dir)/nvm.sh\"", "", "  nvm_check_global_modules", "", "  nvm_install_node", "", "  nvm_reset", "", "  echo \"=> Close and reopen your terminal to start using nvm or run the following to use it now:\"", "  command printf \"${SOURCE_STR}\"", "  if ${BASH_OR_ZSH} ; then", "    command printf \"${COMPLETION_STR}\"", "  fi", "}", "", "#", "# Unsets the various functions defined", "# during the execution of the install script", "#", "nvm_reset() {", "  unset -f nvm_has nvm_install_dir nvm_latest_version nvm_profile_is_bash_or_zsh \\", "    nvm_source nvm_node_version nvm_download install_nvm_from_git nvm_install_node \\", "    install_nvm_as_script nvm_try_profile nvm_detect_profile nvm_check_global_modules \\", "    nvm_do_install nvm_reset nvm_default_install_dir", "}", "", "[ \"_$NVM_ENV\" = \"_testing\" ] || nvm_do_install", "", "} # this ensures the entire script is downloaded #"]}
2024-05-23 20:53:39,677 p=114776 u=root n=ansible | PLAY RECAP **********************************************************************************
2024-05-23 20:53:39,677 p=114776 u=root n=ansible | localhost                  : ok=12   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 20:56:39,131 p=117823 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 20:56:39,289 p=117823 u=root n=ansible | PLAY [Configure local machine] **************************************************************
2024-05-23 20:56:39,297 p=117823 u=root n=ansible | TASK [Gathering Facts] **********************************************************************
2024-05-23 20:56:40,374 p=117823 u=root n=ansible | ok: [localhost]
2024-05-23 20:56:40,407 p=117823 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] **********************************
2024-05-23 20:56:41,373 p=117823 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716477794, "cache_updated": false, "changed": false}
2024-05-23 20:56:41,380 p=117823 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ***************************************
2024-05-23 20:56:41,394 p=117823 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 20:56:41,403 p=117823 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ***********************************
2024-05-23 20:56:41,414 p=117823 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 20:56:41,423 p=117823 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] **********************************
2024-05-23 20:56:44,382 p=117823 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716478003, "cache_updated": true, "changed": true}
2024-05-23 20:56:44,391 p=117823 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] ****************************************
2024-05-23 20:56:44,406 p=117823 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 20:56:44,413 p=117823 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] **************************************************
2024-05-23 20:56:44,425 p=117823 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 20:56:44,434 p=117823 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] *****************************************
2024-05-23 20:56:44,446 p=117823 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 20:56:44,463 p=117823 u=root n=ansible | TASK [setup : include_vars] *****************************************************************
2024-05-23 20:56:44,478 p=117823 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 20:56:44,487 p=117823 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] ************************
2024-05-23 20:56:45,331 p=117823 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716478003, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 20:56:46,157 p=117823 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716478003, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 20:56:46,988 p=117823 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716478003, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 20:56:47,876 p=117823 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716478003, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 20:56:48,702 p=117823 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716478003, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 20:56:49,545 p=117823 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716478003, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 20:56:50,371 p=117823 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716478003, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 20:56:51,202 p=117823 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716478003, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 20:56:52,030 p=117823 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716478003, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 20:56:52,853 p=117823 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716478003, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 20:56:53,723 p=117823 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716478003, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 20:56:54,623 p=117823 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716478003, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 20:56:55,473 p=117823 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716478003, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 20:56:56,305 p=117823 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716478003, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 20:56:57,325 p=117823 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716478003, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 20:56:58,228 p=117823 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716478003, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 20:56:58,240 p=117823 u=root n=ansible | TASK [setup : install all command line tool on macOS] ***************************************
2024-05-23 20:56:58,258 p=117823 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 20:56:58,263 p=117823 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 20:56:58,268 p=117823 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 20:56:58,273 p=117823 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 20:56:58,278 p=117823 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 20:56:58,285 p=117823 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 20:56:58,287 p=117823 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 20:56:58,288 p=117823 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 20:56:58,288 p=117823 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 20:56:58,288 p=117823 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 20:56:58,289 p=117823 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 20:56:58,289 p=117823 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 20:56:58,290 p=117823 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 20:56:58,290 p=117823 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 20:56:58,290 p=117823 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 20:56:58,291 p=117823 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 20:56:58,291 p=117823 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 20:56:58,299 p=117823 u=root n=ansible | TASK [setup : install python tools] *********************************************************
2024-05-23 20:57:00,140 p=117823 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.569286", "end": "2024-05-23 20:57:00.113586", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 20:56:58.544300", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 20:57:01,823 p=117823 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.532110", "end": "2024-05-23 20:57:01.802400", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 20:57:00.270290", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 20:57:03,548 p=117823 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.570366", "end": "2024-05-23 20:57:03.526341", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 20:57:01.955975", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 20:57:03,559 p=117823 u=root n=ansible | TASK [setup : checking Var require in scripts] **********************************************
2024-05-23 20:57:03,573 p=117823 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 20:57:03,580 p=117823 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ***************************************
2024-05-23 20:57:04,435 p=117823 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716478003, "cache_updated": false, "changed": false}
2024-05-23 20:57:04,444 p=117823 u=root n=ansible | TASK [setup : Install Neovim on macOS] ******************************************************
2024-05-23 20:57:04,459 p=117823 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 20:57:04,467 p=117823 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] *********************************
2024-05-23 20:57:04,736 p=117823 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 20:57:04,744 p=117823 u=root n=ansible | TASK [setup : Clone the Neovim config] ******************************************************
2024-05-23 20:57:05,743 p=117823 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 20:57:05,754 p=117823 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] *******************************
2024-05-23 20:57:05,764 p=117823 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 20:57:05,775 p=117823 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] ****************
2024-05-23 20:57:05,792 p=117823 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 20:57:05,801 p=117823 u=root n=ansible | TASK [setup : Download NVM] *****************************************************************
2024-05-23 20:57:06,044 p=117823 u=root n=ansible | changed: [localhost] => {"changed": true, "cmd": ["curl", "-o-", "https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh"], "delta": "0:00:00.066297", "end": "2024-05-23 20:57:06.020780", "msg": "", "rc": 0, "start": "2024-05-23 20:57:05.954483", "stderr": "  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\r100 13527  100 13527    0     0   223k      0 --:--:-- --:--:-- --:--:--  223k", "stderr_lines": ["  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current", "                                 Dload  Upload   Total   Spent    Left  Speed", "", "  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0", "100 13527  100 13527    0     0   223k      0 --:--:-- --:--:-- --:--:--  223k"], "stdout": "#!/usr/bin/env bash\n\n{ # this ensures the entire script is downloaded #\n\nnvm_has() {\n  type \"$1\" > /dev/null 2>&1\n}\n\nnvm_default_install_dir() {\n  [ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\"\n}\n\nnvm_install_dir() {\n  if [ -n \"$NVM_DIR\" ]; then\n    printf %s \"${NVM_DIR}\"\n  else\n    nvm_default_install_dir\n  fi\n}\n\nnvm_latest_version() {\n  echo \"v0.35.3\"\n}\n\nnvm_profile_is_bash_or_zsh() {\n  local TEST_PROFILE\n  TEST_PROFILE=\"${1-}\"\n  case \"${TEST_PROFILE-}\" in\n    *\"/.bashrc\" | *\"/.bash_profile\" | *\"/.zshrc\")\n      return\n    ;;\n    *)\n      return 1\n    ;;\n  esac\n}\n\n#\n# Outputs the location to NVM depending on:\n# * The availability of $NVM_SOURCE\n# * The method used (\"script\" or \"git\" in the script, defaults to \"git\")\n# NVM_SOURCE always takes precedence unless the method is \"script-nvm-exec\"\n#\nnvm_source() {\n  local NVM_METHOD\n  NVM_METHOD=\"$1\"\n  local NVM_SOURCE_URL\n  NVM_SOURCE_URL=\"$NVM_SOURCE\"\n  if [ \"_$NVM_METHOD\" = \"_script-nvm-exec\" ]; then\n    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm-exec\"\n  elif [ \"_$NVM_METHOD\" = \"_script-nvm-bash-completion\" ]; then\n    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/bash_completion\"\n  elif [ -z \"$NVM_SOURCE_URL\" ]; then\n    if [ \"_$NVM_METHOD\" = \"_script\" ]; then\n      NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm.sh\"\n    elif [ \"_$NVM_METHOD\" = \"_git\" ] || [ -z \"$NVM_METHOD\" ]; then\n      NVM_SOURCE_URL=\"https://github.com/nvm-sh/nvm.git\"\n    else\n      echo >&2 \"Unexpected value \\\"$NVM_METHOD\\\" for \\$NVM_METHOD\"\n      return 1\n    fi\n  fi\n  echo \"$NVM_SOURCE_URL\"\n}\n\n#\n# Node.js version to install\n#\nnvm_node_version() {\n  echo \"$NODE_VERSION\"\n}\n\nnvm_download() {\n  if nvm_has \"curl\"; then\n    curl --compressed -q \"$@\"\n  elif nvm_has \"wget\"; then\n    # Emulate curl with wget\n    ARGS=$(echo \"$*\" | command sed -e 's/--progress-bar /--progress=bar /' \\\n                            -e 's/-L //' \\\n                            -e 's/--compressed //' \\\n                            -e 's/-I /--server-response /' \\\n                            -e 's/-s /-q /' \\\n                            -e 's/-o /-O /' \\\n                            -e 's/-C - /-c /')\n    # shellcheck disable=SC2086\n    eval wget $ARGS\n  fi\n}\n\ninstall_nvm_from_git() {\n  local INSTALL_DIR\n  INSTALL_DIR=\"$(nvm_install_dir)\"\n\n  if [ -d \"$INSTALL_DIR/.git\" ]; then\n    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update using git\"\n    command printf '\\r=> '\n    command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 2> /dev/null || {\n      echo >&2 \"Failed to update nvm, run 'git fetch' in $INSTALL_DIR yourself.\"\n      exit 1\n    }\n  else\n    # Cloning to $INSTALL_DIR\n    echo \"=> Downloading nvm from git to '$INSTALL_DIR'\"\n    command printf '\\r=> '\n    mkdir -p \"${INSTALL_DIR}\"\n    if [ \"$(ls -A \"${INSTALL_DIR}\")\" ]; then\n      command git init \"${INSTALL_DIR}\" || {\n        echo >&2 'Failed to initialize nvm repo. Please report this!'\n        exit 2\n      }\n      command git --git-dir=\"${INSTALL_DIR}/.git\" remote add origin \"$(nvm_source)\" 2> /dev/null \\\n        || command git --git-dir=\"${INSTALL_DIR}/.git\" remote set-url origin \"$(nvm_source)\" || {\n        echo >&2 'Failed to add remote \"origin\" (or set the URL). Please report this!'\n        exit 2\n      }\n      command git --git-dir=\"${INSTALL_DIR}/.git\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 || {\n        echo >&2 'Failed to fetch origin with tags. Please report this!'\n        exit 2\n      }\n    else\n      command git -c advice.detachedHead=false clone \"$(nvm_source)\" -b \"$(nvm_latest_version)\" --depth=1 \"${INSTALL_DIR}\" || {\n        echo >&2 'Failed to clone nvm repo. Please report this!'\n        exit 2\n      }\n    fi\n  fi\n  command git -c advice.detachedHead=false --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" checkout -f --quiet \"$(nvm_latest_version)\"\n  if [ -n \"$(command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" show-ref refs/heads/master)\" ]; then\n    if command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet 2>/dev/null; then\n      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet -D master >/dev/null 2>&1\n    else\n      echo >&2 \"Your version of git is out of date. Please update it!\"\n      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch -D master >/dev/null 2>&1\n    fi\n  fi\n\n  echo \"=> Compressing and cleaning up git repository\"\n  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" reflog expire --expire=now --all; then\n    echo >&2 \"Your version of git is out of date. Please update it!\"\n  fi\n  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" gc --auto --aggressive --prune=now ; then\n    echo >&2 \"Your version of git is out of date. Please update it!\"\n  fi\n  return\n}\n\n#\n# Automatically install Node.js\n#\nnvm_install_node() {\n  local NODE_VERSION_LOCAL\n  NODE_VERSION_LOCAL=\"$(nvm_node_version)\"\n\n  if [ -z \"$NODE_VERSION_LOCAL\" ]; then\n    return 0\n  fi\n\n  echo \"=> Installing Node.js version $NODE_VERSION_LOCAL\"\n  nvm install \"$NODE_VERSION_LOCAL\"\n  local CURRENT_NVM_NODE\n\n  CURRENT_NVM_NODE=\"$(nvm_version current)\"\n  if [ \"$(nvm_version \"$NODE_VERSION_LOCAL\")\" == \"$CURRENT_NVM_NODE\" ]; then\n    echo \"=> Node.js version $NODE_VERSION_LOCAL has been successfully installed\"\n  else\n    echo >&2 \"Failed to install Node.js $NODE_VERSION_LOCAL\"\n  fi\n}\n\ninstall_nvm_as_script() {\n  local INSTALL_DIR\n  INSTALL_DIR=\"$(nvm_install_dir)\"\n  local NVM_SOURCE_LOCAL\n  NVM_SOURCE_LOCAL=\"$(nvm_source script)\"\n  local NVM_EXEC_SOURCE\n  NVM_EXEC_SOURCE=\"$(nvm_source script-nvm-exec)\"\n  local NVM_BASH_COMPLETION_SOURCE\n  NVM_BASH_COMPLETION_SOURCE=\"$(nvm_source script-nvm-bash-completion)\"\n\n  # Downloading to $INSTALL_DIR\n  mkdir -p \"$INSTALL_DIR\"\n  if [ -f \"$INSTALL_DIR/nvm.sh\" ]; then\n    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update the script\"\n  else\n    echo \"=> Downloading nvm as script to '$INSTALL_DIR'\"\n  fi\n  nvm_download -s \"$NVM_SOURCE_LOCAL\" -o \"$INSTALL_DIR/nvm.sh\" || {\n    echo >&2 \"Failed to download '$NVM_SOURCE_LOCAL'\"\n    return 1\n  } &\n  nvm_download -s \"$NVM_EXEC_SOURCE\" -o \"$INSTALL_DIR/nvm-exec\" || {\n    echo >&2 \"Failed to download '$NVM_EXEC_SOURCE'\"\n    return 2\n  } &\n  nvm_download -s \"$NVM_BASH_COMPLETION_SOURCE\" -o \"$INSTALL_DIR/bash_completion\" || {\n    echo >&2 \"Failed to download '$NVM_BASH_COMPLETION_SOURCE'\"\n    return 2\n  } &\n  for job in $(jobs -p | command sort)\n  do\n    wait \"$job\" || return $?\n  done\n  chmod a+x \"$INSTALL_DIR/nvm-exec\" || {\n    echo >&2 \"Failed to mark '$INSTALL_DIR/nvm-exec' as executable\"\n    return 3\n  }\n}\n\nnvm_try_profile() {\n  if [ -z \"${1-}\" ] || [ ! -f \"${1}\" ]; then\n    return 1\n  fi\n  echo \"${1}\"\n}\n\n#\n# Detect profile file if not specified as environment variable\n# (eg: PROFILE=~/.myprofile)\n# The echo'ed path is guaranteed to be an existing file\n# Otherwise, an empty string is returned\n#\nnvm_detect_profile() {\n  if [ \"${PROFILE-}\" = '/dev/null' ]; then\n    # the user has specifically requested NOT to have nvm touch their profile\n    return\n  fi\n\n  if [ -n \"${PROFILE}\" ] && [ -f \"${PROFILE}\" ]; then\n    echo \"${PROFILE}\"\n    return\n  fi\n\n  local DETECTED_PROFILE\n  DETECTED_PROFILE=''\n\n  if [ -n \"${BASH_VERSION-}\" ]; then\n    if [ -f \"$HOME/.bashrc\" ]; then\n      DETECTED_PROFILE=\"$HOME/.bashrc\"\n    elif [ -f \"$HOME/.bash_profile\" ]; then\n      DETECTED_PROFILE=\"$HOME/.bash_profile\"\n    fi\n  elif [ -n \"${ZSH_VERSION-}\" ]; then\n    DETECTED_PROFILE=\"$HOME/.zshrc\"\n  fi\n\n  if [ -z \"$DETECTED_PROFILE\" ]; then\n    for EACH_PROFILE in \".profile\" \".bashrc\" \".bash_profile\" \".zshrc\"\n    do\n      if DETECTED_PROFILE=\"$(nvm_try_profile \"${HOME}/${EACH_PROFILE}\")\"; then\n        break\n      fi\n    done\n  fi\n\n  if [ -n \"$DETECTED_PROFILE\" ]; then\n    echo \"$DETECTED_PROFILE\"\n  fi\n}\n\n#\n# Check whether the user has any globally-installed npm modules in their system\n# Node, and warn them if so.\n#\nnvm_check_global_modules() {\n  command -v npm >/dev/null 2>&1 || return 0\n\n  local NPM_VERSION\n  NPM_VERSION=\"$(npm --version)\"\n  NPM_VERSION=\"${NPM_VERSION:--1}\"\n  [ \"${NPM_VERSION%%[!-0-9]*}\" -gt 0 ] || return 0\n\n  local NPM_GLOBAL_MODULES\n  NPM_GLOBAL_MODULES=\"$(\n    npm list -g --depth=0 |\n    command sed -e '/ npm@/d' -e '/ (empty)$/d'\n  )\"\n\n  local MODULE_COUNT\n  MODULE_COUNT=\"$(\n    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\" |\n    command sed -ne '1!p' |                     # Remove the first line\n    wc -l | command tr -d ' '                   # Count entries\n  )\"\n\n  if [ \"${MODULE_COUNT}\" != '0' ]; then\n    # shellcheck disable=SC2016\n    echo '=> You currently have modules installed globally with `npm`. These will no'\n    # shellcheck disable=SC2016\n    echo '=> longer be linked to the active version of Node when you install a new node'\n    # shellcheck disable=SC2016\n    echo '=> with `nvm`; and they may (depending on how you construct your `$PATH`)'\n    # shellcheck disable=SC2016\n    echo '=> override the binaries of modules installed with `nvm`:'\n    echo\n\n    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\"\n    echo '=> If you wish to uninstall them at a later point (or re-install them under your'\n    # shellcheck disable=SC2016\n    echo '=> `nvm` Nodes), you can remove them from the system Node as follows:'\n    echo\n    echo '     $ nvm use system'\n    echo '     $ npm uninstall -g a_module'\n    echo\n  fi\n}\n\nnvm_do_install() {\n  if [ -n \"${NVM_DIR-}\" ] && ! [ -d \"${NVM_DIR}\" ]; then\n    if [ -e \"${NVM_DIR}\" ]; then\n      echo >&2 \"File \\\"${NVM_DIR}\\\" has the same name as installation directory.\"\n      exit 1\n    fi\n\n    if [ \"${NVM_DIR}\" = \"$(nvm_default_install_dir)\" ]; then\n      mkdir \"${NVM_DIR}\"\n    else\n      echo >&2 \"You have \\$NVM_DIR set to \\\"${NVM_DIR}\\\", but that directory does not exist. Check your profile files and environment.\"\n      exit 1\n    fi\n  fi\n  if [ -z \"${METHOD}\" ]; then\n    # Autodetect install method\n    if nvm_has git; then\n      install_nvm_from_git\n    elif nvm_has nvm_download; then\n      install_nvm_as_script\n    else\n      echo >&2 'You need git, curl, or wget to install nvm'\n      exit 1\n    fi\n  elif [ \"${METHOD}\" = 'git' ]; then\n    if ! nvm_has git; then\n      echo >&2 \"You need git to install nvm\"\n      exit 1\n    fi\n    install_nvm_from_git\n  elif [ \"${METHOD}\" = 'script' ]; then\n    if ! nvm_has nvm_download; then\n      echo >&2 \"You need curl or wget to install nvm\"\n      exit 1\n    fi\n    install_nvm_as_script\n  else\n    echo >&2 \"The environment variable \\$METHOD is set to \\\"${METHOD}\\\", which is not recognized as a valid installation method.\"\n    exit 1\n  fi\n\n  echo\n\n  local NVM_PROFILE\n  NVM_PROFILE=\"$(nvm_detect_profile)\"\n  local PROFILE_INSTALL_DIR\n  PROFILE_INSTALL_DIR=\"$(nvm_install_dir | command sed \"s:^$HOME:\\$HOME:\")\"\n\n  SOURCE_STR=\"\\\\nexport NVM_DIR=\\\"${PROFILE_INSTALL_DIR}\\\"\\\\n[ -s \\\"\\$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"\\$NVM_DIR/nvm.sh\\\"  # This loads nvm\\\\n\"\n\n  # shellcheck disable=SC2016\n  COMPLETION_STR='[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\\n'\n  BASH_OR_ZSH=false\n\n  if [ -z \"${NVM_PROFILE-}\" ] ; then\n    local TRIED_PROFILE\n    if [ -n \"${PROFILE}\" ]; then\n      TRIED_PROFILE=\"${NVM_PROFILE} (as defined in \\$PROFILE), \"\n    fi\n    echo \"=> Profile not found. Tried ${TRIED_PROFILE-}~/.bashrc, ~/.bash_profile, ~/.zshrc, and ~/.profile.\"\n    echo \"=> Create one of them and run this script again\"\n    echo \"   OR\"\n    echo \"=> Append the following lines to the correct file yourself:\"\n    command printf \"${SOURCE_STR}\"\n    echo\n  else\n    if nvm_profile_is_bash_or_zsh \"${NVM_PROFILE-}\"; then\n      BASH_OR_ZSH=true\n    fi\n    if ! command grep -qc '/nvm.sh' \"$NVM_PROFILE\"; then\n      echo \"=> Appending nvm source string to $NVM_PROFILE\"\n      command printf \"${SOURCE_STR}\" >> \"$NVM_PROFILE\"\n    else\n      echo \"=> nvm source string already in ${NVM_PROFILE}\"\n    fi\n    # shellcheck disable=SC2016\n    if ${BASH_OR_ZSH} && ! command grep -qc '$NVM_DIR/bash_completion' \"$NVM_PROFILE\"; then\n      echo \"=> Appending bash_completion source string to $NVM_PROFILE\"\n      command printf \"$COMPLETION_STR\" >> \"$NVM_PROFILE\"\n    else\n      echo \"=> bash_completion source string already in ${NVM_PROFILE}\"\n    fi\n  fi\n  if ${BASH_OR_ZSH} && [ -z \"${NVM_PROFILE-}\" ] ; then\n    echo \"=> Please also append the following lines to the if you are using bash/zsh shell:\"\n    command printf \"${COMPLETION_STR}\"\n  fi\n\n  # Source nvm\n  # shellcheck source=/dev/null\n  \\. \"$(nvm_install_dir)/nvm.sh\"\n\n  nvm_check_global_modules\n\n  nvm_install_node\n\n  nvm_reset\n\n  echo \"=> Close and reopen your terminal to start using nvm or run the following to use it now:\"\n  command printf \"${SOURCE_STR}\"\n  if ${BASH_OR_ZSH} ; then\n    command printf \"${COMPLETION_STR}\"\n  fi\n}\n\n#\n# Unsets the various functions defined\n# during the execution of the install script\n#\nnvm_reset() {\n  unset -f nvm_has nvm_install_dir nvm_latest_version nvm_profile_is_bash_or_zsh \\\n    nvm_source nvm_node_version nvm_download install_nvm_from_git nvm_install_node \\\n    install_nvm_as_script nvm_try_profile nvm_detect_profile nvm_check_global_modules \\\n    nvm_do_install nvm_reset nvm_default_install_dir\n}\n\n[ \"_$NVM_ENV\" = \"_testing\" ] || nvm_do_install\n\n} # this ensures the entire script is downloaded #", "stdout_lines": ["#!/usr/bin/env bash", "", "{ # this ensures the entire script is downloaded #", "", "nvm_has() {", "  type \"$1\" > /dev/null 2>&1", "}", "", "nvm_default_install_dir() {", "  [ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\"", "}", "", "nvm_install_dir() {", "  if [ -n \"$NVM_DIR\" ]; then", "    printf %s \"${NVM_DIR}\"", "  else", "    nvm_default_install_dir", "  fi", "}", "", "nvm_latest_version() {", "  echo \"v0.35.3\"", "}", "", "nvm_profile_is_bash_or_zsh() {", "  local TEST_PROFILE", "  TEST_PROFILE=\"${1-}\"", "  case \"${TEST_PROFILE-}\" in", "    *\"/.bashrc\" | *\"/.bash_profile\" | *\"/.zshrc\")", "      return", "    ;;", "    *)", "      return 1", "    ;;", "  esac", "}", "", "#", "# Outputs the location to NVM depending on:", "# * The availability of $NVM_SOURCE", "# * The method used (\"script\" or \"git\" in the script, defaults to \"git\")", "# NVM_SOURCE always takes precedence unless the method is \"script-nvm-exec\"", "#", "nvm_source() {", "  local NVM_METHOD", "  NVM_METHOD=\"$1\"", "  local NVM_SOURCE_URL", "  NVM_SOURCE_URL=\"$NVM_SOURCE\"", "  if [ \"_$NVM_METHOD\" = \"_script-nvm-exec\" ]; then", "    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm-exec\"", "  elif [ \"_$NVM_METHOD\" = \"_script-nvm-bash-completion\" ]; then", "    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/bash_completion\"", "  elif [ -z \"$NVM_SOURCE_URL\" ]; then", "    if [ \"_$NVM_METHOD\" = \"_script\" ]; then", "      NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm.sh\"", "    elif [ \"_$NVM_METHOD\" = \"_git\" ] || [ -z \"$NVM_METHOD\" ]; then", "      NVM_SOURCE_URL=\"https://github.com/nvm-sh/nvm.git\"", "    else", "      echo >&2 \"Unexpected value \\\"$NVM_METHOD\\\" for \\$NVM_METHOD\"", "      return 1", "    fi", "  fi", "  echo \"$NVM_SOURCE_URL\"", "}", "", "#", "# Node.js version to install", "#", "nvm_node_version() {", "  echo \"$NODE_VERSION\"", "}", "", "nvm_download() {", "  if nvm_has \"curl\"; then", "    curl --compressed -q \"$@\"", "  elif nvm_has \"wget\"; then", "    # Emulate curl with wget", "    ARGS=$(echo \"$*\" | command sed -e 's/--progress-bar /--progress=bar /' \\", "                            -e 's/-L //' \\", "                            -e 's/--compressed //' \\", "                            -e 's/-I /--server-response /' \\", "                            -e 's/-s /-q /' \\", "                            -e 's/-o /-O /' \\", "                            -e 's/-C - /-c /')", "    # shellcheck disable=SC2086", "    eval wget $ARGS", "  fi", "}", "", "install_nvm_from_git() {", "  local INSTALL_DIR", "  INSTALL_DIR=\"$(nvm_install_dir)\"", "", "  if [ -d \"$INSTALL_DIR/.git\" ]; then", "    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update using git\"", "    command printf '\\r=> '", "    command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 2> /dev/null || {", "      echo >&2 \"Failed to update nvm, run 'git fetch' in $INSTALL_DIR yourself.\"", "      exit 1", "    }", "  else", "    # Cloning to $INSTALL_DIR", "    echo \"=> Downloading nvm from git to '$INSTALL_DIR'\"", "    command printf '\\r=> '", "    mkdir -p \"${INSTALL_DIR}\"", "    if [ \"$(ls -A \"${INSTALL_DIR}\")\" ]; then", "      command git init \"${INSTALL_DIR}\" || {", "        echo >&2 'Failed to initialize nvm repo. Please report this!'", "        exit 2", "      }", "      command git --git-dir=\"${INSTALL_DIR}/.git\" remote add origin \"$(nvm_source)\" 2> /dev/null \\", "        || command git --git-dir=\"${INSTALL_DIR}/.git\" remote set-url origin \"$(nvm_source)\" || {", "        echo >&2 'Failed to add remote \"origin\" (or set the URL). Please report this!'", "        exit 2", "      }", "      command git --git-dir=\"${INSTALL_DIR}/.git\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 || {", "        echo >&2 'Failed to fetch origin with tags. Please report this!'", "        exit 2", "      }", "    else", "      command git -c advice.detachedHead=false clone \"$(nvm_source)\" -b \"$(nvm_latest_version)\" --depth=1 \"${INSTALL_DIR}\" || {", "        echo >&2 'Failed to clone nvm repo. Please report this!'", "        exit 2", "      }", "    fi", "  fi", "  command git -c advice.detachedHead=false --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" checkout -f --quiet \"$(nvm_latest_version)\"", "  if [ -n \"$(command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" show-ref refs/heads/master)\" ]; then", "    if command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet 2>/dev/null; then", "      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet -D master >/dev/null 2>&1", "    else", "      echo >&2 \"Your version of git is out of date. Please update it!\"", "      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch -D master >/dev/null 2>&1", "    fi", "  fi", "", "  echo \"=> Compressing and cleaning up git repository\"", "  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" reflog expire --expire=now --all; then", "    echo >&2 \"Your version of git is out of date. Please update it!\"", "  fi", "  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" gc --auto --aggressive --prune=now ; then", "    echo >&2 \"Your version of git is out of date. Please update it!\"", "  fi", "  return", "}", "", "#", "# Automatically install Node.js", "#", "nvm_install_node() {", "  local NODE_VERSION_LOCAL", "  NODE_VERSION_LOCAL=\"$(nvm_node_version)\"", "", "  if [ -z \"$NODE_VERSION_LOCAL\" ]; then", "    return 0", "  fi", "", "  echo \"=> Installing Node.js version $NODE_VERSION_LOCAL\"", "  nvm install \"$NODE_VERSION_LOCAL\"", "  local CURRENT_NVM_NODE", "", "  CURRENT_NVM_NODE=\"$(nvm_version current)\"", "  if [ \"$(nvm_version \"$NODE_VERSION_LOCAL\")\" == \"$CURRENT_NVM_NODE\" ]; then", "    echo \"=> Node.js version $NODE_VERSION_LOCAL has been successfully installed\"", "  else", "    echo >&2 \"Failed to install Node.js $NODE_VERSION_LOCAL\"", "  fi", "}", "", "install_nvm_as_script() {", "  local INSTALL_DIR", "  INSTALL_DIR=\"$(nvm_install_dir)\"", "  local NVM_SOURCE_LOCAL", "  NVM_SOURCE_LOCAL=\"$(nvm_source script)\"", "  local NVM_EXEC_SOURCE", "  NVM_EXEC_SOURCE=\"$(nvm_source script-nvm-exec)\"", "  local NVM_BASH_COMPLETION_SOURCE", "  NVM_BASH_COMPLETION_SOURCE=\"$(nvm_source script-nvm-bash-completion)\"", "", "  # Downloading to $INSTALL_DIR", "  mkdir -p \"$INSTALL_DIR\"", "  if [ -f \"$INSTALL_DIR/nvm.sh\" ]; then", "    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update the script\"", "  else", "    echo \"=> Downloading nvm as script to '$INSTALL_DIR'\"", "  fi", "  nvm_download -s \"$NVM_SOURCE_LOCAL\" -o \"$INSTALL_DIR/nvm.sh\" || {", "    echo >&2 \"Failed to download '$NVM_SOURCE_LOCAL'\"", "    return 1", "  } &", "  nvm_download -s \"$NVM_EXEC_SOURCE\" -o \"$INSTALL_DIR/nvm-exec\" || {", "    echo >&2 \"Failed to download '$NVM_EXEC_SOURCE'\"", "    return 2", "  } &", "  nvm_download -s \"$NVM_BASH_COMPLETION_SOURCE\" -o \"$INSTALL_DIR/bash_completion\" || {", "    echo >&2 \"Failed to download '$NVM_BASH_COMPLETION_SOURCE'\"", "    return 2", "  } &", "  for job in $(jobs -p | command sort)", "  do", "    wait \"$job\" || return $?", "  done", "  chmod a+x \"$INSTALL_DIR/nvm-exec\" || {", "    echo >&2 \"Failed to mark '$INSTALL_DIR/nvm-exec' as executable\"", "    return 3", "  }", "}", "", "nvm_try_profile() {", "  if [ -z \"${1-}\" ] || [ ! -f \"${1}\" ]; then", "    return 1", "  fi", "  echo \"${1}\"", "}", "", "#", "# Detect profile file if not specified as environment variable", "# (eg: PROFILE=~/.myprofile)", "# The echo'ed path is guaranteed to be an existing file", "# Otherwise, an empty string is returned", "#", "nvm_detect_profile() {", "  if [ \"${PROFILE-}\" = '/dev/null' ]; then", "    # the user has specifically requested NOT to have nvm touch their profile", "    return", "  fi", "", "  if [ -n \"${PROFILE}\" ] && [ -f \"${PROFILE}\" ]; then", "    echo \"${PROFILE}\"", "    return", "  fi", "", "  local DETECTED_PROFILE", "  DETECTED_PROFILE=''", "", "  if [ -n \"${BASH_VERSION-}\" ]; then", "    if [ -f \"$HOME/.bashrc\" ]; then", "      DETECTED_PROFILE=\"$HOME/.bashrc\"", "    elif [ -f \"$HOME/.bash_profile\" ]; then", "      DETECTED_PROFILE=\"$HOME/.bash_profile\"", "    fi", "  elif [ -n \"${ZSH_VERSION-}\" ]; then", "    DETECTED_PROFILE=\"$HOME/.zshrc\"", "  fi", "", "  if [ -z \"$DETECTED_PROFILE\" ]; then", "    for EACH_PROFILE in \".profile\" \".bashrc\" \".bash_profile\" \".zshrc\"", "    do", "      if DETECTED_PROFILE=\"$(nvm_try_profile \"${HOME}/${EACH_PROFILE}\")\"; then", "        break", "      fi", "    done", "  fi", "", "  if [ -n \"$DETECTED_PROFILE\" ]; then", "    echo \"$DETECTED_PROFILE\"", "  fi", "}", "", "#", "# Check whether the user has any globally-installed npm modules in their system", "# Node, and warn them if so.", "#", "nvm_check_global_modules() {", "  command -v npm >/dev/null 2>&1 || return 0", "", "  local NPM_VERSION", "  NPM_VERSION=\"$(npm --version)\"", "  NPM_VERSION=\"${NPM_VERSION:--1}\"", "  [ \"${NPM_VERSION%%[!-0-9]*}\" -gt 0 ] || return 0", "", "  local NPM_GLOBAL_MODULES", "  NPM_GLOBAL_MODULES=\"$(", "    npm list -g --depth=0 |", "    command sed -e '/ npm@/d' -e '/ (empty)$/d'", "  )\"", "", "  local MODULE_COUNT", "  MODULE_COUNT=\"$(", "    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\" |", "    command sed -ne '1!p' |                     # Remove the first line", "    wc -l | command tr -d ' '                   # Count entries", "  )\"", "", "  if [ \"${MODULE_COUNT}\" != '0' ]; then", "    # shellcheck disable=SC2016", "    echo '=> You currently have modules installed globally with `npm`. These will no'", "    # shellcheck disable=SC2016", "    echo '=> longer be linked to the active version of Node when you install a new node'", "    # shellcheck disable=SC2016", "    echo '=> with `nvm`; and they may (depending on how you construct your `$PATH`)'", "    # shellcheck disable=SC2016", "    echo '=> override the binaries of modules installed with `nvm`:'", "    echo", "", "    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\"", "    echo '=> If you wish to uninstall them at a later point (or re-install them under your'", "    # shellcheck disable=SC2016", "    echo '=> `nvm` Nodes), you can remove them from the system Node as follows:'", "    echo", "    echo '     $ nvm use system'", "    echo '     $ npm uninstall -g a_module'", "    echo", "  fi", "}", "", "nvm_do_install() {", "  if [ -n \"${NVM_DIR-}\" ] && ! [ -d \"${NVM_DIR}\" ]; then", "    if [ -e \"${NVM_DIR}\" ]; then", "      echo >&2 \"File \\\"${NVM_DIR}\\\" has the same name as installation directory.\"", "      exit 1", "    fi", "", "    if [ \"${NVM_DIR}\" = \"$(nvm_default_install_dir)\" ]; then", "      mkdir \"${NVM_DIR}\"", "    else", "      echo >&2 \"You have \\$NVM_DIR set to \\\"${NVM_DIR}\\\", but that directory does not exist. Check your profile files and environment.\"", "      exit 1", "    fi", "  fi", "  if [ -z \"${METHOD}\" ]; then", "    # Autodetect install method", "    if nvm_has git; then", "      install_nvm_from_git", "    elif nvm_has nvm_download; then", "      install_nvm_as_script", "    else", "      echo >&2 'You need git, curl, or wget to install nvm'", "      exit 1", "    fi", "  elif [ \"${METHOD}\" = 'git' ]; then", "    if ! nvm_has git; then", "      echo >&2 \"You need git to install nvm\"", "      exit 1", "    fi", "    install_nvm_from_git", "  elif [ \"${METHOD}\" = 'script' ]; then", "    if ! nvm_has nvm_download; then", "      echo >&2 \"You need curl or wget to install nvm\"", "      exit 1", "    fi", "    install_nvm_as_script", "  else", "    echo >&2 \"The environment variable \\$METHOD is set to \\\"${METHOD}\\\", which is not recognized as a valid installation method.\"", "    exit 1", "  fi", "", "  echo", "", "  local NVM_PROFILE", "  NVM_PROFILE=\"$(nvm_detect_profile)\"", "  local PROFILE_INSTALL_DIR", "  PROFILE_INSTALL_DIR=\"$(nvm_install_dir | command sed \"s:^$HOME:\\$HOME:\")\"", "", "  SOURCE_STR=\"\\\\nexport NVM_DIR=\\\"${PROFILE_INSTALL_DIR}\\\"\\\\n[ -s \\\"\\$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"\\$NVM_DIR/nvm.sh\\\"  # This loads nvm\\\\n\"", "", "  # shellcheck disable=SC2016", "  COMPLETION_STR='[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\\n'", "  BASH_OR_ZSH=false", "", "  if [ -z \"${NVM_PROFILE-}\" ] ; then", "    local TRIED_PROFILE", "    if [ -n \"${PROFILE}\" ]; then", "      TRIED_PROFILE=\"${NVM_PROFILE} (as defined in \\$PROFILE), \"", "    fi", "    echo \"=> Profile not found. Tried ${TRIED_PROFILE-}~/.bashrc, ~/.bash_profile, ~/.zshrc, and ~/.profile.\"", "    echo \"=> Create one of them and run this script again\"", "    echo \"   OR\"", "    echo \"=> Append the following lines to the correct file yourself:\"", "    command printf \"${SOURCE_STR}\"", "    echo", "  else", "    if nvm_profile_is_bash_or_zsh \"${NVM_PROFILE-}\"; then", "      BASH_OR_ZSH=true", "    fi", "    if ! command grep -qc '/nvm.sh' \"$NVM_PROFILE\"; then", "      echo \"=> Appending nvm source string to $NVM_PROFILE\"", "      command printf \"${SOURCE_STR}\" >> \"$NVM_PROFILE\"", "    else", "      echo \"=> nvm source string already in ${NVM_PROFILE}\"", "    fi", "    # shellcheck disable=SC2016", "    if ${BASH_OR_ZSH} && ! command grep -qc '$NVM_DIR/bash_completion' \"$NVM_PROFILE\"; then", "      echo \"=> Appending bash_completion source string to $NVM_PROFILE\"", "      command printf \"$COMPLETION_STR\" >> \"$NVM_PROFILE\"", "    else", "      echo \"=> bash_completion source string already in ${NVM_PROFILE}\"", "    fi", "  fi", "  if ${BASH_OR_ZSH} && [ -z \"${NVM_PROFILE-}\" ] ; then", "    echo \"=> Please also append the following lines to the if you are using bash/zsh shell:\"", "    command printf \"${COMPLETION_STR}\"", "  fi", "", "  # Source nvm", "  # shellcheck source=/dev/null", "  \\. \"$(nvm_install_dir)/nvm.sh\"", "", "  nvm_check_global_modules", "", "  nvm_install_node", "", "  nvm_reset", "", "  echo \"=> Close and reopen your terminal to start using nvm or run the following to use it now:\"", "  command printf \"${SOURCE_STR}\"", "  if ${BASH_OR_ZSH} ; then", "    command printf \"${COMPLETION_STR}\"", "  fi", "}", "", "#", "# Unsets the various functions defined", "# during the execution of the install script", "#", "nvm_reset() {", "  unset -f nvm_has nvm_install_dir nvm_latest_version nvm_profile_is_bash_or_zsh \\", "    nvm_source nvm_node_version nvm_download install_nvm_from_git nvm_install_node \\", "    install_nvm_as_script nvm_try_profile nvm_detect_profile nvm_check_global_modules \\", "    nvm_do_install nvm_reset nvm_default_install_dir", "}", "", "[ \"_$NVM_ENV\" = \"_testing\" ] || nvm_do_install", "", "} # this ensures the entire script is downloaded #"]}
2024-05-23 20:57:06,052 p=117823 u=root n=ansible | TASK [setup : Install nvm] ******************************************************************
2024-05-23 20:57:06,223 p=117823 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["sh", "install.sh"], "delta": "0:00:00.004281", "end": "2024-05-23 20:57:06.204365", "msg": "non-zero return code", "rc": 2, "start": "2024-05-23 20:57:06.200084", "stderr": "sh: 0: cannot open install.sh: No such file", "stderr_lines": ["sh: 0: cannot open install.sh: No such file"], "stdout": "", "stdout_lines": []}
2024-05-23 20:57:06,224 p=117823 u=root n=ansible | PLAY RECAP **********************************************************************************
2024-05-23 20:57:06,224 p=117823 u=root n=ansible | localhost                  : ok=13   changed=3    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 20:59:32,858 p=120688 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 20:59:32,982 p=120688 u=root n=ansible | PLAY [Configure local machine] **************************************************************
2024-05-23 20:59:32,989 p=120688 u=root n=ansible | TASK [Gathering Facts] **********************************************************************
2024-05-23 20:59:33,725 p=120688 u=root n=ansible | ok: [localhost]
2024-05-23 20:59:33,747 p=120688 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] **********************************
2024-05-23 20:59:34,782 p=120688 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716478003, "cache_updated": false, "changed": false}
2024-05-23 20:59:34,792 p=120688 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ***************************************
2024-05-23 20:59:34,806 p=120688 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 20:59:34,815 p=120688 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ***********************************
2024-05-23 20:59:34,829 p=120688 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 20:59:34,839 p=120688 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] **********************************
2024-05-23 20:59:38,545 p=120688 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716478178, "cache_updated": true, "changed": true}
2024-05-23 20:59:38,554 p=120688 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] ****************************************
2024-05-23 20:59:38,570 p=120688 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 20:59:38,578 p=120688 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] **************************************************
2024-05-23 20:59:38,590 p=120688 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 20:59:38,597 p=120688 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] *****************************************
2024-05-23 20:59:38,613 p=120688 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 20:59:38,629 p=120688 u=root n=ansible | TASK [setup : include_vars] *****************************************************************
2024-05-23 20:59:38,644 p=120688 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 20:59:38,653 p=120688 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] ************************
2024-05-23 20:59:39,602 p=120688 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716478178, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 20:59:40,494 p=120688 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716478178, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 20:59:41,340 p=120688 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716478178, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 20:59:42,176 p=120688 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716478178, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 20:59:43,013 p=120688 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716478178, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 20:59:43,871 p=120688 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716478178, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 20:59:44,792 p=120688 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716478178, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 20:59:45,638 p=120688 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716478178, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 20:59:46,474 p=120688 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716478178, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 20:59:47,323 p=120688 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716478178, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 20:59:48,163 p=120688 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716478178, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 20:59:49,004 p=120688 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716478178, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 20:59:49,875 p=120688 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716478178, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 20:59:50,915 p=120688 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716478178, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 20:59:51,763 p=120688 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716478178, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 20:59:52,615 p=120688 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716478178, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 20:59:52,626 p=120688 u=root n=ansible | TASK [setup : install all command line tool on macOS] ***************************************
2024-05-23 20:59:52,639 p=120688 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 20:59:52,641 p=120688 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 20:59:52,646 p=120688 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 20:59:52,653 p=120688 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 20:59:52,657 p=120688 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 20:59:52,663 p=120688 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 20:59:52,663 p=120688 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 20:59:52,663 p=120688 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 20:59:52,663 p=120688 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 20:59:52,664 p=120688 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 20:59:52,664 p=120688 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 20:59:52,664 p=120688 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 20:59:52,664 p=120688 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 20:59:52,664 p=120688 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 20:59:52,667 p=120688 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 20:59:52,668 p=120688 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 20:59:52,670 p=120688 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 20:59:52,678 p=120688 u=root n=ansible | TASK [setup : install python tools] *********************************************************
2024-05-23 20:59:54,518 p=120688 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.566297", "end": "2024-05-23 20:59:54.492516", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 20:59:52.926219", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 20:59:56,226 p=120688 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.554926", "end": "2024-05-23 20:59:56.202969", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 20:59:54.648043", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 20:59:57,965 p=120688 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.587182", "end": "2024-05-23 20:59:57.943996", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 20:59:56.356814", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 20:59:57,975 p=120688 u=root n=ansible | TASK [setup : checking Var require in scripts] **********************************************
2024-05-23 20:59:57,990 p=120688 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 20:59:57,997 p=120688 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ***************************************
2024-05-23 20:59:58,906 p=120688 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716478178, "cache_updated": false, "changed": false}
2024-05-23 20:59:58,914 p=120688 u=root n=ansible | TASK [setup : Install Neovim on macOS] ******************************************************
2024-05-23 20:59:58,926 p=120688 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 20:59:58,934 p=120688 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] *********************************
2024-05-23 20:59:59,224 p=120688 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 20:59:59,232 p=120688 u=root n=ansible | TASK [setup : Clone the Neovim config] ******************************************************
2024-05-23 21:00:00,339 p=120688 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 21:00:00,352 p=120688 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] *******************************
2024-05-23 21:00:00,374 p=120688 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:00:00,395 p=120688 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] ****************
2024-05-23 21:00:00,420 p=120688 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 21:00:00,435 p=120688 u=root n=ansible | TASK [setup : Download NVM] *****************************************************************
2024-05-23 21:00:01,106 p=120688 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["curl", "-o-", "-sS", "https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh", "|", "bash"], "delta": "0:00:00.472237", "end": "2024-05-23 21:00:01.074966", "msg": "non-zero return code", "rc": 6, "start": "2024-05-23 21:00:00.602729", "stderr": "curl: (6) Could not resolve host: |\ncurl: (6) Could not resolve host: bash", "stderr_lines": ["curl: (6) Could not resolve host: |", "curl: (6) Could not resolve host: bash"], "stdout": "#!/usr/bin/env bash\n\n{ # this ensures the entire script is downloaded #\n\nnvm_has() {\n  type \"$1\" > /dev/null 2>&1\n}\n\nnvm_default_install_dir() {\n  [ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\"\n}\n\nnvm_install_dir() {\n  if [ -n \"$NVM_DIR\" ]; then\n    printf %s \"${NVM_DIR}\"\n  else\n    nvm_default_install_dir\n  fi\n}\n\nnvm_latest_version() {\n  echo \"v0.35.3\"\n}\n\nnvm_profile_is_bash_or_zsh() {\n  local TEST_PROFILE\n  TEST_PROFILE=\"${1-}\"\n  case \"${TEST_PROFILE-}\" in\n    *\"/.bashrc\" | *\"/.bash_profile\" | *\"/.zshrc\")\n      return\n    ;;\n    *)\n      return 1\n    ;;\n  esac\n}\n\n#\n# Outputs the location to NVM depending on:\n# * The availability of $NVM_SOURCE\n# * The method used (\"script\" or \"git\" in the script, defaults to \"git\")\n# NVM_SOURCE always takes precedence unless the method is \"script-nvm-exec\"\n#\nnvm_source() {\n  local NVM_METHOD\n  NVM_METHOD=\"$1\"\n  local NVM_SOURCE_URL\n  NVM_SOURCE_URL=\"$NVM_SOURCE\"\n  if [ \"_$NVM_METHOD\" = \"_script-nvm-exec\" ]; then\n    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm-exec\"\n  elif [ \"_$NVM_METHOD\" = \"_script-nvm-bash-completion\" ]; then\n    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/bash_completion\"\n  elif [ -z \"$NVM_SOURCE_URL\" ]; then\n    if [ \"_$NVM_METHOD\" = \"_script\" ]; then\n      NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm.sh\"\n    elif [ \"_$NVM_METHOD\" = \"_git\" ] || [ -z \"$NVM_METHOD\" ]; then\n      NVM_SOURCE_URL=\"https://github.com/nvm-sh/nvm.git\"\n    else\n      echo >&2 \"Unexpected value \\\"$NVM_METHOD\\\" for \\$NVM_METHOD\"\n      return 1\n    fi\n  fi\n  echo \"$NVM_SOURCE_URL\"\n}\n\n#\n# Node.js version to install\n#\nnvm_node_version() {\n  echo \"$NODE_VERSION\"\n}\n\nnvm_download() {\n  if nvm_has \"curl\"; then\n    curl --compressed -q \"$@\"\n  elif nvm_has \"wget\"; then\n    # Emulate curl with wget\n    ARGS=$(echo \"$*\" | command sed -e 's/--progress-bar /--progress=bar /' \\\n                            -e 's/-L //' \\\n                            -e 's/--compressed //' \\\n                            -e 's/-I /--server-response /' \\\n                            -e 's/-s /-q /' \\\n                            -e 's/-o /-O /' \\\n                            -e 's/-C - /-c /')\n    # shellcheck disable=SC2086\n    eval wget $ARGS\n  fi\n}\n\ninstall_nvm_from_git() {\n  local INSTALL_DIR\n  INSTALL_DIR=\"$(nvm_install_dir)\"\n\n  if [ -d \"$INSTALL_DIR/.git\" ]; then\n    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update using git\"\n    command printf '\\r=> '\n    command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 2> /dev/null || {\n      echo >&2 \"Failed to update nvm, run 'git fetch' in $INSTALL_DIR yourself.\"\n      exit 1\n    }\n  else\n    # Cloning to $INSTALL_DIR\n    echo \"=> Downloading nvm from git to '$INSTALL_DIR'\"\n    command printf '\\r=> '\n    mkdir -p \"${INSTALL_DIR}\"\n    if [ \"$(ls -A \"${INSTALL_DIR}\")\" ]; then\n      command git init \"${INSTALL_DIR}\" || {\n        echo >&2 'Failed to initialize nvm repo. Please report this!'\n        exit 2\n      }\n      command git --git-dir=\"${INSTALL_DIR}/.git\" remote add origin \"$(nvm_source)\" 2> /dev/null \\\n        || command git --git-dir=\"${INSTALL_DIR}/.git\" remote set-url origin \"$(nvm_source)\" || {\n        echo >&2 'Failed to add remote \"origin\" (or set the URL). Please report this!'\n        exit 2\n      }\n      command git --git-dir=\"${INSTALL_DIR}/.git\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 || {\n        echo >&2 'Failed to fetch origin with tags. Please report this!'\n        exit 2\n      }\n    else\n      command git -c advice.detachedHead=false clone \"$(nvm_source)\" -b \"$(nvm_latest_version)\" --depth=1 \"${INSTALL_DIR}\" || {\n        echo >&2 'Failed to clone nvm repo. Please report this!'\n        exit 2\n      }\n    fi\n  fi\n  command git -c advice.detachedHead=false --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" checkout -f --quiet \"$(nvm_latest_version)\"\n  if [ -n \"$(command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" show-ref refs/heads/master)\" ]; then\n    if command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet 2>/dev/null; then\n      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet -D master >/dev/null 2>&1\n    else\n      echo >&2 \"Your version of git is out of date. Please update it!\"\n      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch -D master >/dev/null 2>&1\n    fi\n  fi\n\n  echo \"=> Compressing and cleaning up git repository\"\n  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" reflog expire --expire=now --all; then\n    echo >&2 \"Your version of git is out of date. Please update it!\"\n  fi\n  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" gc --auto --aggressive --prune=now ; then\n    echo >&2 \"Your version of git is out of date. Please update it!\"\n  fi\n  return\n}\n\n#\n# Automatically install Node.js\n#\nnvm_install_node() {\n  local NODE_VERSION_LOCAL\n  NODE_VERSION_LOCAL=\"$(nvm_node_version)\"\n\n  if [ -z \"$NODE_VERSION_LOCAL\" ]; then\n    return 0\n  fi\n\n  echo \"=> Installing Node.js version $NODE_VERSION_LOCAL\"\n  nvm install \"$NODE_VERSION_LOCAL\"\n  local CURRENT_NVM_NODE\n\n  CURRENT_NVM_NODE=\"$(nvm_version current)\"\n  if [ \"$(nvm_version \"$NODE_VERSION_LOCAL\")\" == \"$CURRENT_NVM_NODE\" ]; then\n    echo \"=> Node.js version $NODE_VERSION_LOCAL has been successfully installed\"\n  else\n    echo >&2 \"Failed to install Node.js $NODE_VERSION_LOCAL\"\n  fi\n}\n\ninstall_nvm_as_script() {\n  local INSTALL_DIR\n  INSTALL_DIR=\"$(nvm_install_dir)\"\n  local NVM_SOURCE_LOCAL\n  NVM_SOURCE_LOCAL=\"$(nvm_source script)\"\n  local NVM_EXEC_SOURCE\n  NVM_EXEC_SOURCE=\"$(nvm_source script-nvm-exec)\"\n  local NVM_BASH_COMPLETION_SOURCE\n  NVM_BASH_COMPLETION_SOURCE=\"$(nvm_source script-nvm-bash-completion)\"\n\n  # Downloading to $INSTALL_DIR\n  mkdir -p \"$INSTALL_DIR\"\n  if [ -f \"$INSTALL_DIR/nvm.sh\" ]; then\n    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update the script\"\n  else\n    echo \"=> Downloading nvm as script to '$INSTALL_DIR'\"\n  fi\n  nvm_download -s \"$NVM_SOURCE_LOCAL\" -o \"$INSTALL_DIR/nvm.sh\" || {\n    echo >&2 \"Failed to download '$NVM_SOURCE_LOCAL'\"\n    return 1\n  } &\n  nvm_download -s \"$NVM_EXEC_SOURCE\" -o \"$INSTALL_DIR/nvm-exec\" || {\n    echo >&2 \"Failed to download '$NVM_EXEC_SOURCE'\"\n    return 2\n  } &\n  nvm_download -s \"$NVM_BASH_COMPLETION_SOURCE\" -o \"$INSTALL_DIR/bash_completion\" || {\n    echo >&2 \"Failed to download '$NVM_BASH_COMPLETION_SOURCE'\"\n    return 2\n  } &\n  for job in $(jobs -p | command sort)\n  do\n    wait \"$job\" || return $?\n  done\n  chmod a+x \"$INSTALL_DIR/nvm-exec\" || {\n    echo >&2 \"Failed to mark '$INSTALL_DIR/nvm-exec' as executable\"\n    return 3\n  }\n}\n\nnvm_try_profile() {\n  if [ -z \"${1-}\" ] || [ ! -f \"${1}\" ]; then\n    return 1\n  fi\n  echo \"${1}\"\n}\n\n#\n# Detect profile file if not specified as environment variable\n# (eg: PROFILE=~/.myprofile)\n# The echo'ed path is guaranteed to be an existing file\n# Otherwise, an empty string is returned\n#\nnvm_detect_profile() {\n  if [ \"${PROFILE-}\" = '/dev/null' ]; then\n    # the user has specifically requested NOT to have nvm touch their profile\n    return\n  fi\n\n  if [ -n \"${PROFILE}\" ] && [ -f \"${PROFILE}\" ]; then\n    echo \"${PROFILE}\"\n    return\n  fi\n\n  local DETECTED_PROFILE\n  DETECTED_PROFILE=''\n\n  if [ -n \"${BASH_VERSION-}\" ]; then\n    if [ -f \"$HOME/.bashrc\" ]; then\n      DETECTED_PROFILE=\"$HOME/.bashrc\"\n    elif [ -f \"$HOME/.bash_profile\" ]; then\n      DETECTED_PROFILE=\"$HOME/.bash_profile\"\n    fi\n  elif [ -n \"${ZSH_VERSION-}\" ]; then\n    DETECTED_PROFILE=\"$HOME/.zshrc\"\n  fi\n\n  if [ -z \"$DETECTED_PROFILE\" ]; then\n    for EACH_PROFILE in \".profile\" \".bashrc\" \".bash_profile\" \".zshrc\"\n    do\n      if DETECTED_PROFILE=\"$(nvm_try_profile \"${HOME}/${EACH_PROFILE}\")\"; then\n        break\n      fi\n    done\n  fi\n\n  if [ -n \"$DETECTED_PROFILE\" ]; then\n    echo \"$DETECTED_PROFILE\"\n  fi\n}\n\n#\n# Check whether the user has any globally-installed npm modules in their system\n# Node, and warn them if so.\n#\nnvm_check_global_modules() {\n  command -v npm >/dev/null 2>&1 || return 0\n\n  local NPM_VERSION\n  NPM_VERSION=\"$(npm --version)\"\n  NPM_VERSION=\"${NPM_VERSION:--1}\"\n  [ \"${NPM_VERSION%%[!-0-9]*}\" -gt 0 ] || return 0\n\n  local NPM_GLOBAL_MODULES\n  NPM_GLOBAL_MODULES=\"$(\n    npm list -g --depth=0 |\n    command sed -e '/ npm@/d' -e '/ (empty)$/d'\n  )\"\n\n  local MODULE_COUNT\n  MODULE_COUNT=\"$(\n    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\" |\n    command sed -ne '1!p' |                     # Remove the first line\n    wc -l | command tr -d ' '                   # Count entries\n  )\"\n\n  if [ \"${MODULE_COUNT}\" != '0' ]; then\n    # shellcheck disable=SC2016\n    echo '=> You currently have modules installed globally with `npm`. These will no'\n    # shellcheck disable=SC2016\n    echo '=> longer be linked to the active version of Node when you install a new node'\n    # shellcheck disable=SC2016\n    echo '=> with `nvm`; and they may (depending on how you construct your `$PATH`)'\n    # shellcheck disable=SC2016\n    echo '=> override the binaries of modules installed with `nvm`:'\n    echo\n\n    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\"\n    echo '=> If you wish to uninstall them at a later point (or re-install them under your'\n    # shellcheck disable=SC2016\n    echo '=> `nvm` Nodes), you can remove them from the system Node as follows:'\n    echo\n    echo '     $ nvm use system'\n    echo '     $ npm uninstall -g a_module'\n    echo\n  fi\n}\n\nnvm_do_install() {\n  if [ -n \"${NVM_DIR-}\" ] && ! [ -d \"${NVM_DIR}\" ]; then\n    if [ -e \"${NVM_DIR}\" ]; then\n      echo >&2 \"File \\\"${NVM_DIR}\\\" has the same name as installation directory.\"\n      exit 1\n    fi\n\n    if [ \"${NVM_DIR}\" = \"$(nvm_default_install_dir)\" ]; then\n      mkdir \"${NVM_DIR}\"\n    else\n      echo >&2 \"You have \\$NVM_DIR set to \\\"${NVM_DIR}\\\", but that directory does not exist. Check your profile files and environment.\"\n      exit 1\n    fi\n  fi\n  if [ -z \"${METHOD}\" ]; then\n    # Autodetect install method\n    if nvm_has git; then\n      install_nvm_from_git\n    elif nvm_has nvm_download; then\n      install_nvm_as_script\n    else\n      echo >&2 'You need git, curl, or wget to install nvm'\n      exit 1\n    fi\n  elif [ \"${METHOD}\" = 'git' ]; then\n    if ! nvm_has git; then\n      echo >&2 \"You need git to install nvm\"\n      exit 1\n    fi\n    install_nvm_from_git\n  elif [ \"${METHOD}\" = 'script' ]; then\n    if ! nvm_has nvm_download; then\n      echo >&2 \"You need curl or wget to install nvm\"\n      exit 1\n    fi\n    install_nvm_as_script\n  else\n    echo >&2 \"The environment variable \\$METHOD is set to \\\"${METHOD}\\\", which is not recognized as a valid installation method.\"\n    exit 1\n  fi\n\n  echo\n\n  local NVM_PROFILE\n  NVM_PROFILE=\"$(nvm_detect_profile)\"\n  local PROFILE_INSTALL_DIR\n  PROFILE_INSTALL_DIR=\"$(nvm_install_dir | command sed \"s:^$HOME:\\$HOME:\")\"\n\n  SOURCE_STR=\"\\\\nexport NVM_DIR=\\\"${PROFILE_INSTALL_DIR}\\\"\\\\n[ -s \\\"\\$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"\\$NVM_DIR/nvm.sh\\\"  # This loads nvm\\\\n\"\n\n  # shellcheck disable=SC2016\n  COMPLETION_STR='[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\\n'\n  BASH_OR_ZSH=false\n\n  if [ -z \"${NVM_PROFILE-}\" ] ; then\n    local TRIED_PROFILE\n    if [ -n \"${PROFILE}\" ]; then\n      TRIED_PROFILE=\"${NVM_PROFILE} (as defined in \\$PROFILE), \"\n    fi\n    echo \"=> Profile not found. Tried ${TRIED_PROFILE-}~/.bashrc, ~/.bash_profile, ~/.zshrc, and ~/.profile.\"\n    echo \"=> Create one of them and run this script again\"\n    echo \"   OR\"\n    echo \"=> Append the following lines to the correct file yourself:\"\n    command printf \"${SOURCE_STR}\"\n    echo\n  else\n    if nvm_profile_is_bash_or_zsh \"${NVM_PROFILE-}\"; then\n      BASH_OR_ZSH=true\n    fi\n    if ! command grep -qc '/nvm.sh' \"$NVM_PROFILE\"; then\n      echo \"=> Appending nvm source string to $NVM_PROFILE\"\n      command printf \"${SOURCE_STR}\" >> \"$NVM_PROFILE\"\n    else\n      echo \"=> nvm source string already in ${NVM_PROFILE}\"\n    fi\n    # shellcheck disable=SC2016\n    if ${BASH_OR_ZSH} && ! command grep -qc '$NVM_DIR/bash_completion' \"$NVM_PROFILE\"; then\n      echo \"=> Appending bash_completion source string to $NVM_PROFILE\"\n      command printf \"$COMPLETION_STR\" >> \"$NVM_PROFILE\"\n    else\n      echo \"=> bash_completion source string already in ${NVM_PROFILE}\"\n    fi\n  fi\n  if ${BASH_OR_ZSH} && [ -z \"${NVM_PROFILE-}\" ] ; then\n    echo \"=> Please also append the following lines to the if you are using bash/zsh shell:\"\n    command printf \"${COMPLETION_STR}\"\n  fi\n\n  # Source nvm\n  # shellcheck source=/dev/null\n  \\. \"$(nvm_install_dir)/nvm.sh\"\n\n  nvm_check_global_modules\n\n  nvm_install_node\n\n  nvm_reset\n\n  echo \"=> Close and reopen your terminal to start using nvm or run the following to use it now:\"\n  command printf \"${SOURCE_STR}\"\n  if ${BASH_OR_ZSH} ; then\n    command printf \"${COMPLETION_STR}\"\n  fi\n}\n\n#\n# Unsets the various functions defined\n# during the execution of the install script\n#\nnvm_reset() {\n  unset -f nvm_has nvm_install_dir nvm_latest_version nvm_profile_is_bash_or_zsh \\\n    nvm_source nvm_node_version nvm_download install_nvm_from_git nvm_install_node \\\n    install_nvm_as_script nvm_try_profile nvm_detect_profile nvm_check_global_modules \\\n    nvm_do_install nvm_reset nvm_default_install_dir\n}\n\n[ \"_$NVM_ENV\" = \"_testing\" ] || nvm_do_install\n\n} # this ensures the entire script is downloaded #", "stdout_lines": ["#!/usr/bin/env bash", "", "{ # this ensures the entire script is downloaded #", "", "nvm_has() {", "  type \"$1\" > /dev/null 2>&1", "}", "", "nvm_default_install_dir() {", "  [ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\"", "}", "", "nvm_install_dir() {", "  if [ -n \"$NVM_DIR\" ]; then", "    printf %s \"${NVM_DIR}\"", "  else", "    nvm_default_install_dir", "  fi", "}", "", "nvm_latest_version() {", "  echo \"v0.35.3\"", "}", "", "nvm_profile_is_bash_or_zsh() {", "  local TEST_PROFILE", "  TEST_PROFILE=\"${1-}\"", "  case \"${TEST_PROFILE-}\" in", "    *\"/.bashrc\" | *\"/.bash_profile\" | *\"/.zshrc\")", "      return", "    ;;", "    *)", "      return 1", "    ;;", "  esac", "}", "", "#", "# Outputs the location to NVM depending on:", "# * The availability of $NVM_SOURCE", "# * The method used (\"script\" or \"git\" in the script, defaults to \"git\")", "# NVM_SOURCE always takes precedence unless the method is \"script-nvm-exec\"", "#", "nvm_source() {", "  local NVM_METHOD", "  NVM_METHOD=\"$1\"", "  local NVM_SOURCE_URL", "  NVM_SOURCE_URL=\"$NVM_SOURCE\"", "  if [ \"_$NVM_METHOD\" = \"_script-nvm-exec\" ]; then", "    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm-exec\"", "  elif [ \"_$NVM_METHOD\" = \"_script-nvm-bash-completion\" ]; then", "    NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/bash_completion\"", "  elif [ -z \"$NVM_SOURCE_URL\" ]; then", "    if [ \"_$NVM_METHOD\" = \"_script\" ]; then", "      NVM_SOURCE_URL=\"https://raw.githubusercontent.com/nvm-sh/nvm/$(nvm_latest_version)/nvm.sh\"", "    elif [ \"_$NVM_METHOD\" = \"_git\" ] || [ -z \"$NVM_METHOD\" ]; then", "      NVM_SOURCE_URL=\"https://github.com/nvm-sh/nvm.git\"", "    else", "      echo >&2 \"Unexpected value \\\"$NVM_METHOD\\\" for \\$NVM_METHOD\"", "      return 1", "    fi", "  fi", "  echo \"$NVM_SOURCE_URL\"", "}", "", "#", "# Node.js version to install", "#", "nvm_node_version() {", "  echo \"$NODE_VERSION\"", "}", "", "nvm_download() {", "  if nvm_has \"curl\"; then", "    curl --compressed -q \"$@\"", "  elif nvm_has \"wget\"; then", "    # Emulate curl with wget", "    ARGS=$(echo \"$*\" | command sed -e 's/--progress-bar /--progress=bar /' \\", "                            -e 's/-L //' \\", "                            -e 's/--compressed //' \\", "                            -e 's/-I /--server-response /' \\", "                            -e 's/-s /-q /' \\", "                            -e 's/-o /-O /' \\", "                            -e 's/-C - /-c /')", "    # shellcheck disable=SC2086", "    eval wget $ARGS", "  fi", "}", "", "install_nvm_from_git() {", "  local INSTALL_DIR", "  INSTALL_DIR=\"$(nvm_install_dir)\"", "", "  if [ -d \"$INSTALL_DIR/.git\" ]; then", "    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update using git\"", "    command printf '\\r=> '", "    command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 2> /dev/null || {", "      echo >&2 \"Failed to update nvm, run 'git fetch' in $INSTALL_DIR yourself.\"", "      exit 1", "    }", "  else", "    # Cloning to $INSTALL_DIR", "    echo \"=> Downloading nvm from git to '$INSTALL_DIR'\"", "    command printf '\\r=> '", "    mkdir -p \"${INSTALL_DIR}\"", "    if [ \"$(ls -A \"${INSTALL_DIR}\")\" ]; then", "      command git init \"${INSTALL_DIR}\" || {", "        echo >&2 'Failed to initialize nvm repo. Please report this!'", "        exit 2", "      }", "      command git --git-dir=\"${INSTALL_DIR}/.git\" remote add origin \"$(nvm_source)\" 2> /dev/null \\", "        || command git --git-dir=\"${INSTALL_DIR}/.git\" remote set-url origin \"$(nvm_source)\" || {", "        echo >&2 'Failed to add remote \"origin\" (or set the URL). Please report this!'", "        exit 2", "      }", "      command git --git-dir=\"${INSTALL_DIR}/.git\" fetch origin tag \"$(nvm_latest_version)\" --depth=1 || {", "        echo >&2 'Failed to fetch origin with tags. Please report this!'", "        exit 2", "      }", "    else", "      command git -c advice.detachedHead=false clone \"$(nvm_source)\" -b \"$(nvm_latest_version)\" --depth=1 \"${INSTALL_DIR}\" || {", "        echo >&2 'Failed to clone nvm repo. Please report this!'", "        exit 2", "      }", "    fi", "  fi", "  command git -c advice.detachedHead=false --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" checkout -f --quiet \"$(nvm_latest_version)\"", "  if [ -n \"$(command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" show-ref refs/heads/master)\" ]; then", "    if command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet 2>/dev/null; then", "      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch --quiet -D master >/dev/null 2>&1", "    else", "      echo >&2 \"Your version of git is out of date. Please update it!\"", "      command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" branch -D master >/dev/null 2>&1", "    fi", "  fi", "", "  echo \"=> Compressing and cleaning up git repository\"", "  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" reflog expire --expire=now --all; then", "    echo >&2 \"Your version of git is out of date. Please update it!\"", "  fi", "  if ! command git --git-dir=\"$INSTALL_DIR\"/.git --work-tree=\"$INSTALL_DIR\" gc --auto --aggressive --prune=now ; then", "    echo >&2 \"Your version of git is out of date. Please update it!\"", "  fi", "  return", "}", "", "#", "# Automatically install Node.js", "#", "nvm_install_node() {", "  local NODE_VERSION_LOCAL", "  NODE_VERSION_LOCAL=\"$(nvm_node_version)\"", "", "  if [ -z \"$NODE_VERSION_LOCAL\" ]; then", "    return 0", "  fi", "", "  echo \"=> Installing Node.js version $NODE_VERSION_LOCAL\"", "  nvm install \"$NODE_VERSION_LOCAL\"", "  local CURRENT_NVM_NODE", "", "  CURRENT_NVM_NODE=\"$(nvm_version current)\"", "  if [ \"$(nvm_version \"$NODE_VERSION_LOCAL\")\" == \"$CURRENT_NVM_NODE\" ]; then", "    echo \"=> Node.js version $NODE_VERSION_LOCAL has been successfully installed\"", "  else", "    echo >&2 \"Failed to install Node.js $NODE_VERSION_LOCAL\"", "  fi", "}", "", "install_nvm_as_script() {", "  local INSTALL_DIR", "  INSTALL_DIR=\"$(nvm_install_dir)\"", "  local NVM_SOURCE_LOCAL", "  NVM_SOURCE_LOCAL=\"$(nvm_source script)\"", "  local NVM_EXEC_SOURCE", "  NVM_EXEC_SOURCE=\"$(nvm_source script-nvm-exec)\"", "  local NVM_BASH_COMPLETION_SOURCE", "  NVM_BASH_COMPLETION_SOURCE=\"$(nvm_source script-nvm-bash-completion)\"", "", "  # Downloading to $INSTALL_DIR", "  mkdir -p \"$INSTALL_DIR\"", "  if [ -f \"$INSTALL_DIR/nvm.sh\" ]; then", "    echo \"=> nvm is already installed in $INSTALL_DIR, trying to update the script\"", "  else", "    echo \"=> Downloading nvm as script to '$INSTALL_DIR'\"", "  fi", "  nvm_download -s \"$NVM_SOURCE_LOCAL\" -o \"$INSTALL_DIR/nvm.sh\" || {", "    echo >&2 \"Failed to download '$NVM_SOURCE_LOCAL'\"", "    return 1", "  } &", "  nvm_download -s \"$NVM_EXEC_SOURCE\" -o \"$INSTALL_DIR/nvm-exec\" || {", "    echo >&2 \"Failed to download '$NVM_EXEC_SOURCE'\"", "    return 2", "  } &", "  nvm_download -s \"$NVM_BASH_COMPLETION_SOURCE\" -o \"$INSTALL_DIR/bash_completion\" || {", "    echo >&2 \"Failed to download '$NVM_BASH_COMPLETION_SOURCE'\"", "    return 2", "  } &", "  for job in $(jobs -p | command sort)", "  do", "    wait \"$job\" || return $?", "  done", "  chmod a+x \"$INSTALL_DIR/nvm-exec\" || {", "    echo >&2 \"Failed to mark '$INSTALL_DIR/nvm-exec' as executable\"", "    return 3", "  }", "}", "", "nvm_try_profile() {", "  if [ -z \"${1-}\" ] || [ ! -f \"${1}\" ]; then", "    return 1", "  fi", "  echo \"${1}\"", "}", "", "#", "# Detect profile file if not specified as environment variable", "# (eg: PROFILE=~/.myprofile)", "# The echo'ed path is guaranteed to be an existing file", "# Otherwise, an empty string is returned", "#", "nvm_detect_profile() {", "  if [ \"${PROFILE-}\" = '/dev/null' ]; then", "    # the user has specifically requested NOT to have nvm touch their profile", "    return", "  fi", "", "  if [ -n \"${PROFILE}\" ] && [ -f \"${PROFILE}\" ]; then", "    echo \"${PROFILE}\"", "    return", "  fi", "", "  local DETECTED_PROFILE", "  DETECTED_PROFILE=''", "", "  if [ -n \"${BASH_VERSION-}\" ]; then", "    if [ -f \"$HOME/.bashrc\" ]; then", "      DETECTED_PROFILE=\"$HOME/.bashrc\"", "    elif [ -f \"$HOME/.bash_profile\" ]; then", "      DETECTED_PROFILE=\"$HOME/.bash_profile\"", "    fi", "  elif [ -n \"${ZSH_VERSION-}\" ]; then", "    DETECTED_PROFILE=\"$HOME/.zshrc\"", "  fi", "", "  if [ -z \"$DETECTED_PROFILE\" ]; then", "    for EACH_PROFILE in \".profile\" \".bashrc\" \".bash_profile\" \".zshrc\"", "    do", "      if DETECTED_PROFILE=\"$(nvm_try_profile \"${HOME}/${EACH_PROFILE}\")\"; then", "        break", "      fi", "    done", "  fi", "", "  if [ -n \"$DETECTED_PROFILE\" ]; then", "    echo \"$DETECTED_PROFILE\"", "  fi", "}", "", "#", "# Check whether the user has any globally-installed npm modules in their system", "# Node, and warn them if so.", "#", "nvm_check_global_modules() {", "  command -v npm >/dev/null 2>&1 || return 0", "", "  local NPM_VERSION", "  NPM_VERSION=\"$(npm --version)\"", "  NPM_VERSION=\"${NPM_VERSION:--1}\"", "  [ \"${NPM_VERSION%%[!-0-9]*}\" -gt 0 ] || return 0", "", "  local NPM_GLOBAL_MODULES", "  NPM_GLOBAL_MODULES=\"$(", "    npm list -g --depth=0 |", "    command sed -e '/ npm@/d' -e '/ (empty)$/d'", "  )\"", "", "  local MODULE_COUNT", "  MODULE_COUNT=\"$(", "    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\" |", "    command sed -ne '1!p' |                     # Remove the first line", "    wc -l | command tr -d ' '                   # Count entries", "  )\"", "", "  if [ \"${MODULE_COUNT}\" != '0' ]; then", "    # shellcheck disable=SC2016", "    echo '=> You currently have modules installed globally with `npm`. These will no'", "    # shellcheck disable=SC2016", "    echo '=> longer be linked to the active version of Node when you install a new node'", "    # shellcheck disable=SC2016", "    echo '=> with `nvm`; and they may (depending on how you construct your `$PATH`)'", "    # shellcheck disable=SC2016", "    echo '=> override the binaries of modules installed with `nvm`:'", "    echo", "", "    command printf %s\\\\n \"$NPM_GLOBAL_MODULES\"", "    echo '=> If you wish to uninstall them at a later point (or re-install them under your'", "    # shellcheck disable=SC2016", "    echo '=> `nvm` Nodes), you can remove them from the system Node as follows:'", "    echo", "    echo '     $ nvm use system'", "    echo '     $ npm uninstall -g a_module'", "    echo", "  fi", "}", "", "nvm_do_install() {", "  if [ -n \"${NVM_DIR-}\" ] && ! [ -d \"${NVM_DIR}\" ]; then", "    if [ -e \"${NVM_DIR}\" ]; then", "      echo >&2 \"File \\\"${NVM_DIR}\\\" has the same name as installation directory.\"", "      exit 1", "    fi", "", "    if [ \"${NVM_DIR}\" = \"$(nvm_default_install_dir)\" ]; then", "      mkdir \"${NVM_DIR}\"", "    else", "      echo >&2 \"You have \\$NVM_DIR set to \\\"${NVM_DIR}\\\", but that directory does not exist. Check your profile files and environment.\"", "      exit 1", "    fi", "  fi", "  if [ -z \"${METHOD}\" ]; then", "    # Autodetect install method", "    if nvm_has git; then", "      install_nvm_from_git", "    elif nvm_has nvm_download; then", "      install_nvm_as_script", "    else", "      echo >&2 'You need git, curl, or wget to install nvm'", "      exit 1", "    fi", "  elif [ \"${METHOD}\" = 'git' ]; then", "    if ! nvm_has git; then", "      echo >&2 \"You need git to install nvm\"", "      exit 1", "    fi", "    install_nvm_from_git", "  elif [ \"${METHOD}\" = 'script' ]; then", "    if ! nvm_has nvm_download; then", "      echo >&2 \"You need curl or wget to install nvm\"", "      exit 1", "    fi", "    install_nvm_as_script", "  else", "    echo >&2 \"The environment variable \\$METHOD is set to \\\"${METHOD}\\\", which is not recognized as a valid installation method.\"", "    exit 1", "  fi", "", "  echo", "", "  local NVM_PROFILE", "  NVM_PROFILE=\"$(nvm_detect_profile)\"", "  local PROFILE_INSTALL_DIR", "  PROFILE_INSTALL_DIR=\"$(nvm_install_dir | command sed \"s:^$HOME:\\$HOME:\")\"", "", "  SOURCE_STR=\"\\\\nexport NVM_DIR=\\\"${PROFILE_INSTALL_DIR}\\\"\\\\n[ -s \\\"\\$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"\\$NVM_DIR/nvm.sh\\\"  # This loads nvm\\\\n\"", "", "  # shellcheck disable=SC2016", "  COMPLETION_STR='[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\\n'", "  BASH_OR_ZSH=false", "", "  if [ -z \"${NVM_PROFILE-}\" ] ; then", "    local TRIED_PROFILE", "    if [ -n \"${PROFILE}\" ]; then", "      TRIED_PROFILE=\"${NVM_PROFILE} (as defined in \\$PROFILE), \"", "    fi", "    echo \"=> Profile not found. Tried ${TRIED_PROFILE-}~/.bashrc, ~/.bash_profile, ~/.zshrc, and ~/.profile.\"", "    echo \"=> Create one of them and run this script again\"", "    echo \"   OR\"", "    echo \"=> Append the following lines to the correct file yourself:\"", "    command printf \"${SOURCE_STR}\"", "    echo", "  else", "    if nvm_profile_is_bash_or_zsh \"${NVM_PROFILE-}\"; then", "      BASH_OR_ZSH=true", "    fi", "    if ! command grep -qc '/nvm.sh' \"$NVM_PROFILE\"; then", "      echo \"=> Appending nvm source string to $NVM_PROFILE\"", "      command printf \"${SOURCE_STR}\" >> \"$NVM_PROFILE\"", "    else", "      echo \"=> nvm source string already in ${NVM_PROFILE}\"", "    fi", "    # shellcheck disable=SC2016", "    if ${BASH_OR_ZSH} && ! command grep -qc '$NVM_DIR/bash_completion' \"$NVM_PROFILE\"; then", "      echo \"=> Appending bash_completion source string to $NVM_PROFILE\"", "      command printf \"$COMPLETION_STR\" >> \"$NVM_PROFILE\"", "    else", "      echo \"=> bash_completion source string already in ${NVM_PROFILE}\"", "    fi", "  fi", "  if ${BASH_OR_ZSH} && [ -z \"${NVM_PROFILE-}\" ] ; then", "    echo \"=> Please also append the following lines to the if you are using bash/zsh shell:\"", "    command printf \"${COMPLETION_STR}\"", "  fi", "", "  # Source nvm", "  # shellcheck source=/dev/null", "  \\. \"$(nvm_install_dir)/nvm.sh\"", "", "  nvm_check_global_modules", "", "  nvm_install_node", "", "  nvm_reset", "", "  echo \"=> Close and reopen your terminal to start using nvm or run the following to use it now:\"", "  command printf \"${SOURCE_STR}\"", "  if ${BASH_OR_ZSH} ; then", "    command printf \"${COMPLETION_STR}\"", "  fi", "}", "", "#", "# Unsets the various functions defined", "# during the execution of the install script", "#", "nvm_reset() {", "  unset -f nvm_has nvm_install_dir nvm_latest_version nvm_profile_is_bash_or_zsh \\", "    nvm_source nvm_node_version nvm_download install_nvm_from_git nvm_install_node \\", "    install_nvm_as_script nvm_try_profile nvm_detect_profile nvm_check_global_modules \\", "    nvm_do_install nvm_reset nvm_default_install_dir", "}", "", "[ \"_$NVM_ENV\" = \"_testing\" ] || nvm_do_install", "", "} # this ensures the entire script is downloaded #"]}
2024-05-23 21:00:01,107 p=120688 u=root n=ansible | PLAY RECAP **********************************************************************************
2024-05-23 21:00:01,107 p=120688 u=root n=ansible | localhost                  : ok=12   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 21:05:49,517 p=124814 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 21:05:49,641 p=124814 u=root n=ansible | PLAY [Configure local machine] **************************************************************
2024-05-23 21:05:49,649 p=124814 u=root n=ansible | TASK [Gathering Facts] **********************************************************************
2024-05-23 21:05:50,394 p=124814 u=root n=ansible | ok: [localhost]
2024-05-23 21:05:50,412 p=124814 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] **********************************
2024-05-23 21:05:51,112 p=124814 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716478178, "cache_updated": false, "changed": false}
2024-05-23 21:05:51,120 p=124814 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ***************************************
2024-05-23 21:05:51,129 p=124814 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:05:51,138 p=124814 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ***********************************
2024-05-23 21:05:51,146 p=124814 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:05:51,155 p=124814 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] **********************************
2024-05-23 21:05:54,202 p=124814 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716478553, "cache_updated": true, "changed": true}
2024-05-23 21:05:54,208 p=124814 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] ****************************************
2024-05-23 21:05:54,221 p=124814 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 21:05:54,228 p=124814 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] **************************************************
2024-05-23 21:05:54,240 p=124814 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:05:54,247 p=124814 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] *****************************************
2024-05-23 21:05:54,258 p=124814 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:05:54,273 p=124814 u=root n=ansible | TASK [setup : include_vars] *****************************************************************
2024-05-23 21:05:54,284 p=124814 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 21:05:54,292 p=124814 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] ************************
2024-05-23 21:05:54,907 p=124814 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716478553, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 21:05:55,505 p=124814 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716478553, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 21:05:56,105 p=124814 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716478553, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 21:05:56,704 p=124814 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716478553, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 21:05:57,306 p=124814 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716478553, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 21:05:57,909 p=124814 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716478553, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 21:05:58,515 p=124814 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716478553, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 21:05:59,244 p=124814 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716478553, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 21:06:00,012 p=124814 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716478553, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 21:06:00,767 p=124814 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716478553, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 21:06:01,528 p=124814 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716478553, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 21:06:02,290 p=124814 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716478553, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 21:06:03,173 p=124814 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716478553, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 21:06:04,035 p=124814 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716478553, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 21:06:04,728 p=124814 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716478553, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 21:06:05,466 p=124814 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716478553, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 21:06:05,477 p=124814 u=root n=ansible | TASK [setup : install all command line tool on macOS] ***************************************
2024-05-23 21:06:05,495 p=124814 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 21:06:05,501 p=124814 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 21:06:05,505 p=124814 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 21:06:05,510 p=124814 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 21:06:05,518 p=124814 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 21:06:05,521 p=124814 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 21:06:05,526 p=124814 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 21:06:05,529 p=124814 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 21:06:05,529 p=124814 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 21:06:05,530 p=124814 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 21:06:05,530 p=124814 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 21:06:05,531 p=124814 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 21:06:05,532 p=124814 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 21:06:05,532 p=124814 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 21:06:05,532 p=124814 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 21:06:05,533 p=124814 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 21:06:05,534 p=124814 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 21:06:05,543 p=124814 u=root n=ansible | TASK [setup : install python tools] *********************************************************
2024-05-23 21:06:07,243 p=124814 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.439172", "end": "2024-05-23 21:06:07.223541", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 21:06:05.784369", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 21:06:08,844 p=124814 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.463759", "end": "2024-05-23 21:06:08.821683", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 21:06:07.357924", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 21:06:10,446 p=124814 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.455210", "end": "2024-05-23 21:06:10.425649", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 21:06:08.970439", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 21:06:10,457 p=124814 u=root n=ansible | TASK [setup : checking Var require in scripts] **********************************************
2024-05-23 21:06:10,471 p=124814 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 21:06:10,481 p=124814 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ***************************************
2024-05-23 21:06:11,385 p=124814 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716478553, "cache_updated": false, "changed": false}
2024-05-23 21:06:11,393 p=124814 u=root n=ansible | TASK [setup : Install Neovim on macOS] ******************************************************
2024-05-23 21:06:11,404 p=124814 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:06:11,411 p=124814 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] *********************************
2024-05-23 21:06:11,658 p=124814 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 21:06:11,665 p=124814 u=root n=ansible | TASK [setup : Clone the Neovim config] ******************************************************
2024-05-23 21:06:12,601 p=124814 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 21:06:12,608 p=124814 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] *******************************
2024-05-23 21:06:12,618 p=124814 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:06:12,649 p=124814 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] ****************
2024-05-23 21:06:12,663 p=124814 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 21:06:12,672 p=124814 u=root n=ansible | TASK [setup : Download NVM install script] **************************************************
2024-05-23 21:06:13,232 p=124814 u=root n=ansible | changed: [localhost] => {"changed": true, "checksum_dest": null, "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716478573.0103936-b7wnk6l_/tmphhsb42do", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 21:06:13,248 p=124814 u=root n=ansible | TASK [setup : Run NVM install script] *******************************************************
2024-05-23 21:06:13,441 p=124814 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": "sh /tmp/install_nvm.sh", "delta": "0:00:00.002930", "end": "2024-05-23 21:06:13.412098", "msg": "non-zero return code", "rc": 1, "start": "2024-05-23 21:06:13.409168", "stderr": "Error: the install instructions explicitly say to pipe the install script to `bash`; please follow them", "stderr_lines": ["Error: the install instructions explicitly say to pipe the install script to `bash`; please follow them"], "stdout": "", "stdout_lines": []}
2024-05-23 21:06:13,442 p=124814 u=root n=ansible | PLAY RECAP **********************************************************************************
2024-05-23 21:06:13,442 p=124814 u=root n=ansible | localhost                  : ok=13   changed=3    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 21:06:53,424 p=127280 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 21:06:53,573 p=127280 u=root n=ansible | PLAY [Configure local machine] **************************************************************
2024-05-23 21:06:53,581 p=127280 u=root n=ansible | TASK [Gathering Facts] **********************************************************************
2024-05-23 21:06:54,375 p=127280 u=root n=ansible | ok: [localhost]
2024-05-23 21:06:54,395 p=127280 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] **********************************
2024-05-23 21:06:55,245 p=127280 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716478553, "cache_updated": false, "changed": false}
2024-05-23 21:06:55,254 p=127280 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ***************************************
2024-05-23 21:06:55,263 p=127280 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:06:55,298 p=127280 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ***********************************
2024-05-23 21:06:55,308 p=127280 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:06:55,315 p=127280 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] **********************************
2024-05-23 21:06:58,164 p=127280 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716478617, "cache_updated": true, "changed": true}
2024-05-23 21:06:58,175 p=127280 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] ****************************************
2024-05-23 21:06:58,190 p=127280 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 21:06:58,201 p=127280 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] **************************************************
2024-05-23 21:06:58,213 p=127280 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:06:58,223 p=127280 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] *****************************************
2024-05-23 21:06:58,238 p=127280 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:06:58,260 p=127280 u=root n=ansible | TASK [setup : include_vars] *****************************************************************
2024-05-23 21:06:58,275 p=127280 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 21:06:58,287 p=127280 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] ************************
2024-05-23 21:06:59,352 p=127280 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716478617, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 21:07:00,186 p=127280 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716478617, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 21:07:01,051 p=127280 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716478617, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 21:07:01,893 p=127280 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716478617, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 21:07:02,749 p=127280 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716478617, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 21:07:03,609 p=127280 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716478617, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 21:07:04,519 p=127280 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716478617, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 21:07:05,411 p=127280 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716478617, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 21:07:06,254 p=127280 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716478617, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 21:07:07,117 p=127280 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716478617, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 21:07:07,988 p=127280 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716478617, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 21:07:08,874 p=127280 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716478617, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 21:07:09,770 p=127280 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716478617, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 21:07:10,629 p=127280 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716478617, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 21:07:11,492 p=127280 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716478617, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 21:07:12,360 p=127280 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716478617, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 21:07:12,371 p=127280 u=root n=ansible | TASK [setup : install all command line tool on macOS] ***************************************
2024-05-23 21:07:12,387 p=127280 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 21:07:12,391 p=127280 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 21:07:12,396 p=127280 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 21:07:12,402 p=127280 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 21:07:12,407 p=127280 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 21:07:12,412 p=127280 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 21:07:12,418 p=127280 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 21:07:12,421 p=127280 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 21:07:12,423 p=127280 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 21:07:12,423 p=127280 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 21:07:12,424 p=127280 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 21:07:12,424 p=127280 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 21:07:12,425 p=127280 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 21:07:12,425 p=127280 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 21:07:12,425 p=127280 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 21:07:12,426 p=127280 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 21:07:12,427 p=127280 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 21:07:12,437 p=127280 u=root n=ansible | TASK [setup : install python tools] *********************************************************
2024-05-23 21:07:14,425 p=127280 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.668469", "end": "2024-05-23 21:07:14.391054", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 21:07:12.722585", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 21:07:16,238 p=127280 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.654422", "end": "2024-05-23 21:07:16.214059", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 21:07:14.559637", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 21:07:17,979 p=127280 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.580046", "end": "2024-05-23 21:07:17.959752", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 21:07:16.379706", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 21:07:17,992 p=127280 u=root n=ansible | TASK [setup : checking Var require in scripts] **********************************************
2024-05-23 21:07:18,007 p=127280 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 21:07:18,017 p=127280 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ***************************************
2024-05-23 21:07:18,940 p=127280 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716478617, "cache_updated": false, "changed": false}
2024-05-23 21:07:18,947 p=127280 u=root n=ansible | TASK [setup : Install Neovim on macOS] ******************************************************
2024-05-23 21:07:18,958 p=127280 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:07:18,969 p=127280 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] *********************************
2024-05-23 21:07:19,253 p=127280 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 21:07:19,260 p=127280 u=root n=ansible | TASK [setup : Clone the Neovim config] ******************************************************
2024-05-23 21:07:20,272 p=127280 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 21:07:20,280 p=127280 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] *******************************
2024-05-23 21:07:20,291 p=127280 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:07:20,302 p=127280 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] ****************
2024-05-23 21:07:20,319 p=127280 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 21:07:20,327 p=127280 u=root n=ansible | TASK [setup : Download NVM install script] **************************************************
2024-05-23 21:07:20,790 p=127280 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716478640.6511338-fr5jr67l/tmpg69u5l9o", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 21:07:20,800 p=127280 u=root n=ansible | TASK [setup : Run NVM install script] *******************************************************
2024-05-23 21:12:13,649 p=127280 u=root n=ansible |  [ERROR]: User interrupted execution

2024-05-23 21:12:17,361 p=129916 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 21:12:17,523 p=129916 u=root n=ansible | PLAY [Configure local machine] **************************************************************
2024-05-23 21:12:17,533 p=129916 u=root n=ansible | TASK [Gathering Facts] **********************************************************************
2024-05-23 21:12:18,490 p=129916 u=root n=ansible | ok: [localhost]
2024-05-23 21:12:18,512 p=129916 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] **********************************
2024-05-23 21:12:19,514 p=129916 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716478617, "cache_updated": false, "changed": false}
2024-05-23 21:12:19,521 p=129916 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ***************************************
2024-05-23 21:12:19,534 p=129916 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:12:19,542 p=129916 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ***********************************
2024-05-23 21:12:19,552 p=129916 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:12:19,560 p=129916 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] **********************************
2024-05-23 21:12:38,078 p=129916 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716478957, "cache_updated": true, "changed": true}
2024-05-23 21:12:38,087 p=129916 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] ****************************************
2024-05-23 21:12:38,102 p=129916 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 21:12:38,110 p=129916 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] **************************************************
2024-05-23 21:12:38,126 p=129916 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:12:38,140 p=129916 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] *****************************************
2024-05-23 21:12:38,151 p=129916 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:12:38,166 p=129916 u=root n=ansible | TASK [setup : include_vars] *****************************************************************
2024-05-23 21:12:38,176 p=129916 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 21:12:38,187 p=129916 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] ************************
2024-05-23 21:12:39,115 p=129916 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716478957, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 21:12:40,021 p=129916 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716478957, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 21:12:40,876 p=129916 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716478957, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 21:12:41,737 p=129916 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716478957, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 21:12:42,586 p=129916 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716478957, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 21:12:43,462 p=129916 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716478957, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 21:12:44,324 p=129916 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716478957, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 21:12:45,190 p=129916 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716478957, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 21:12:46,046 p=129916 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716478957, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 21:12:46,909 p=129916 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716478957, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 21:12:47,766 p=129916 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716478957, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 21:12:48,635 p=129916 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716478957, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 21:12:49,501 p=129916 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716478957, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 21:12:50,358 p=129916 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716478957, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 21:12:51,218 p=129916 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716478957, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 21:12:52,077 p=129916 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716478957, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 21:12:52,088 p=129916 u=root n=ansible | TASK [setup : install all command line tool on macOS] ***************************************
2024-05-23 21:12:52,107 p=129916 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 21:12:52,111 p=129916 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 21:12:52,112 p=129916 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 21:12:52,117 p=129916 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 21:12:52,117 p=129916 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 21:12:52,117 p=129916 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 21:12:52,122 p=129916 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 21:12:52,122 p=129916 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 21:12:52,122 p=129916 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 21:12:52,127 p=129916 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 21:12:52,128 p=129916 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 21:12:52,128 p=129916 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 21:12:52,128 p=129916 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 21:12:52,134 p=129916 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 21:12:52,137 p=129916 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 21:12:52,137 p=129916 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 21:12:52,138 p=129916 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 21:12:52,147 p=129916 u=root n=ansible | TASK [setup : install python tools] *********************************************************
2024-05-23 21:12:54,037 p=129916 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.607359", "end": "2024-05-23 21:12:54.007881", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 21:12:52.400522", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 21:12:55,867 p=129916 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.656145", "end": "2024-05-23 21:12:55.841612", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 21:12:54.185467", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 21:12:57,648 p=129916 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.616290", "end": "2024-05-23 21:12:57.624873", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 21:12:56.008583", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 21:12:57,656 p=129916 u=root n=ansible | TASK [setup : checking Var require in scripts] **********************************************
2024-05-23 21:12:57,672 p=129916 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 21:12:57,681 p=129916 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ***************************************
2024-05-23 21:12:58,550 p=129916 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716478957, "cache_updated": false, "changed": false}
2024-05-23 21:12:58,557 p=129916 u=root n=ansible | TASK [setup : Install Neovim on macOS] ******************************************************
2024-05-23 21:12:58,568 p=129916 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:12:58,576 p=129916 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] *********************************
2024-05-23 21:12:58,866 p=129916 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 21:12:58,876 p=129916 u=root n=ansible | TASK [setup : Clone the Neovim config] ******************************************************
2024-05-23 21:12:59,909 p=129916 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 21:12:59,921 p=129916 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] *******************************
2024-05-23 21:12:59,934 p=129916 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:12:59,942 p=129916 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] ****************
2024-05-23 21:12:59,957 p=129916 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 21:12:59,967 p=129916 u=root n=ansible | TASK [setup : Download NVM install script] **************************************************
2024-05-23 21:13:00,777 p=129916 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716478980.343069-mrx2lzcs/tmp22pz3sse", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 21:13:00,789 p=129916 u=root n=ansible | TASK [setup : Run NVM install script] *******************************************************
2024-05-23 21:14:34,230 p=129916 u=root n=ansible |  [ERROR]: User interrupted execution

2024-05-23 21:27:39,540 p=149199 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 21:27:39,697 p=149199 u=root n=ansible | PLAY [Configure local machine] **************************************************************
2024-05-23 21:27:39,710 p=149199 u=root n=ansible | TASK [Gathering Facts] **********************************************************************
2024-05-23 21:27:40,582 p=149199 u=root n=ansible | ok: [localhost]
2024-05-23 21:27:40,603 p=149199 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] **********************************
2024-05-23 21:27:41,739 p=149199 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716478957, "cache_updated": false, "changed": false}
2024-05-23 21:27:41,747 p=149199 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ***************************************
2024-05-23 21:27:41,764 p=149199 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:27:41,783 p=149199 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ***********************************
2024-05-23 21:27:41,795 p=149199 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:27:41,807 p=149199 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] **********************************
2024-05-23 21:27:45,131 p=149199 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716479864, "cache_updated": true, "changed": true}
2024-05-23 21:27:45,140 p=149199 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] ****************************************
2024-05-23 21:27:45,152 p=149199 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 21:27:45,159 p=149199 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] **************************************************
2024-05-23 21:27:45,172 p=149199 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:27:45,180 p=149199 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] *****************************************
2024-05-23 21:27:45,193 p=149199 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:27:45,208 p=149199 u=root n=ansible | TASK [setup : include_vars] *****************************************************************
2024-05-23 21:27:45,224 p=149199 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 21:27:45,233 p=149199 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] ************************
2024-05-23 21:27:46,120 p=149199 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716479864, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 21:27:46,967 p=149199 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716479864, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 21:27:47,876 p=149199 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716479864, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 21:27:48,123 p=149199 u=root n=ansible |  [ERROR]: User interrupted execution

2024-05-23 21:28:47,424 p=151112 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 21:28:47,727 p=151112 u=root n=ansible | PLAY [Configure local machine] **************************************************************
2024-05-23 21:28:47,736 p=151112 u=root n=ansible | TASK [Gathering Facts] **********************************************************************
2024-05-23 21:28:48,779 p=151112 u=root n=ansible | ok: [localhost]
2024-05-23 21:28:48,801 p=151112 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] **********************************
2024-05-23 21:28:49,884 p=151112 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716479864, "cache_updated": false, "changed": false}
2024-05-23 21:28:49,891 p=151112 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ***************************************
2024-05-23 21:28:49,901 p=151112 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:28:49,909 p=151112 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ***********************************
2024-05-23 21:28:49,924 p=151112 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:28:49,933 p=151112 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] **********************************
2024-05-23 21:28:53,875 p=151112 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716479933, "cache_updated": true, "changed": true}
2024-05-23 21:28:53,887 p=151112 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] ****************************************
2024-05-23 21:28:53,905 p=151112 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 21:28:53,913 p=151112 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] **************************************************
2024-05-23 21:28:53,928 p=151112 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:28:53,940 p=151112 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] *****************************************
2024-05-23 21:28:53,953 p=151112 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:28:53,979 p=151112 u=root n=ansible | TASK [setup : include_vars] *****************************************************************
2024-05-23 21:28:53,994 p=151112 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 21:28:54,007 p=151112 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] ************************
2024-05-23 21:28:54,959 p=151112 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716479933, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 21:28:55,887 p=151112 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716479933, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 21:28:56,792 p=151112 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716479933, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 21:28:57,696 p=151112 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716479933, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 21:28:58,567 p=151112 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716479933, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 21:28:59,471 p=151112 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716479933, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 21:29:00,331 p=151112 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716479933, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 21:29:01,212 p=151112 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716479933, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 21:29:02,100 p=151112 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716479933, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 21:29:02,972 p=151112 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716479933, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 21:29:03,953 p=151112 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716479933, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 21:29:04,890 p=151112 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716479933, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 21:29:05,780 p=151112 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716479933, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 21:29:06,670 p=151112 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716479933, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 21:29:07,591 p=151112 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716479933, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 21:29:08,500 p=151112 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716479933, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 21:29:08,509 p=151112 u=root n=ansible | TASK [setup : install all command line tool on macOS] ***************************************
2024-05-23 21:29:08,526 p=151112 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 21:29:08,530 p=151112 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 21:29:08,536 p=151112 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 21:29:08,541 p=151112 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 21:29:08,546 p=151112 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 21:29:08,551 p=151112 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 21:29:08,557 p=151112 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 21:29:08,558 p=151112 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 21:29:08,558 p=151112 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 21:29:08,559 p=151112 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 21:29:08,559 p=151112 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 21:29:08,559 p=151112 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 21:29:08,560 p=151112 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 21:29:08,560 p=151112 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 21:29:08,560 p=151112 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 21:29:08,560 p=151112 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 21:29:08,561 p=151112 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 21:29:08,575 p=151112 u=root n=ansible | TASK [setup : install python tools] *********************************************************
2024-05-23 21:29:10,524 p=151112 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.661401", "end": "2024-05-23 21:29:10.497587", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 21:29:08.836186", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 21:29:12,325 p=151112 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.630811", "end": "2024-05-23 21:29:12.293720", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 21:29:10.662909", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 21:29:14,161 p=151112 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.669278", "end": "2024-05-23 21:29:14.140425", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 21:29:12.471147", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 21:29:14,172 p=151112 u=root n=ansible | TASK [setup : checking Var require in scripts] **********************************************
2024-05-23 21:29:14,186 p=151112 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 21:29:14,194 p=151112 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ***************************************
2024-05-23 21:29:15,133 p=151112 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716479933, "cache_updated": false, "changed": false}
2024-05-23 21:29:15,141 p=151112 u=root n=ansible | TASK [setup : Install Neovim on macOS] ******************************************************
2024-05-23 21:29:15,151 p=151112 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:29:15,159 p=151112 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] *********************************
2024-05-23 21:29:15,443 p=151112 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 21:29:15,450 p=151112 u=root n=ansible | TASK [setup : Clone the Neovim config] ******************************************************
2024-05-23 21:29:17,355 p=151112 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 21:29:17,364 p=151112 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] *******************************
2024-05-23 21:29:17,379 p=151112 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:29:17,396 p=151112 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] ****************
2024-05-23 21:29:17,417 p=151112 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 21:29:17,427 p=151112 u=root n=ansible | TASK [setup : Download NVM install script] **************************************************
2024-05-23 21:29:17,860 p=151112 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716479957.762344-yzm8vp5j/tmpz0dkz2q6", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 21:29:17,869 p=151112 u=root n=ansible | TASK [setup : Run NVM install script] *******************************************************
2024-05-23 21:29:45,944 p=151112 u=root n=ansible |  [ERROR]: User interrupted execution

2024-05-23 21:29:54,182 p=153755 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 21:29:54,363 p=153755 u=root n=ansible | PLAY [Configure local machine] **************************************************************
2024-05-23 21:29:54,386 p=153755 u=root n=ansible | TASK [Gathering Facts] **********************************************************************
2024-05-23 21:29:55,538 p=153755 u=root n=ansible | ok: [localhost]
2024-05-23 21:29:55,580 p=153755 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] **********************************
2024-05-23 21:29:56,604 p=153755 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716479933, "cache_updated": false, "changed": false}
2024-05-23 21:29:56,611 p=153755 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ***************************************
2024-05-23 21:29:56,624 p=153755 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:29:56,633 p=153755 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ***********************************
2024-05-23 21:29:56,647 p=153755 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:29:56,656 p=153755 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] **********************************
2024-05-23 21:30:00,185 p=153755 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716479999, "cache_updated": true, "changed": true}
2024-05-23 21:30:00,192 p=153755 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] ****************************************
2024-05-23 21:30:00,208 p=153755 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 21:30:00,218 p=153755 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] **************************************************
2024-05-23 21:30:00,230 p=153755 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:30:00,243 p=153755 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] *****************************************
2024-05-23 21:30:00,256 p=153755 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:30:00,270 p=153755 u=root n=ansible | TASK [setup : include_vars] *****************************************************************
2024-05-23 21:30:00,279 p=153755 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 21:30:00,292 p=153755 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] ************************
2024-05-23 21:30:01,172 p=153755 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716479999, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 21:30:02,021 p=153755 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716479999, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 21:30:02,854 p=153755 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716479999, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 21:30:03,684 p=153755 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716479999, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 21:30:04,543 p=153755 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716479999, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 21:30:05,419 p=153755 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716479999, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 21:30:06,264 p=153755 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716479999, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 21:30:07,113 p=153755 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716479999, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 21:30:07,987 p=153755 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716479999, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 21:30:08,894 p=153755 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716479999, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 21:30:09,764 p=153755 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716479999, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 21:30:10,600 p=153755 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716479999, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 21:30:11,409 p=153755 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716479999, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 21:30:12,238 p=153755 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716479999, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 21:30:13,054 p=153755 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716479999, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 21:30:13,892 p=153755 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716479999, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 21:30:13,902 p=153755 u=root n=ansible | TASK [setup : install all command line tool on macOS] ***************************************
2024-05-23 21:30:13,915 p=153755 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 21:30:13,920 p=153755 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 21:30:13,925 p=153755 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 21:30:13,931 p=153755 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 21:30:13,939 p=153755 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 21:30:13,942 p=153755 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 21:30:13,947 p=153755 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 21:30:13,950 p=153755 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 21:30:13,952 p=153755 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 21:30:13,952 p=153755 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 21:30:13,953 p=153755 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 21:30:13,953 p=153755 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 21:30:13,954 p=153755 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 21:30:13,954 p=153755 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 21:30:13,954 p=153755 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 21:30:13,955 p=153755 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 21:30:13,956 p=153755 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 21:30:13,963 p=153755 u=root n=ansible | TASK [setup : install python tools] *********************************************************
2024-05-23 21:30:15,929 p=153755 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.654539", "end": "2024-05-23 21:30:15.898279", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 21:30:14.243740", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 21:30:17,690 p=153755 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.604392", "end": "2024-05-23 21:30:17.665020", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 21:30:16.060628", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 21:30:19,478 p=153755 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.619727", "end": "2024-05-23 21:30:19.455100", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 21:30:17.835373", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 21:30:19,490 p=153755 u=root n=ansible | TASK [setup : checking Var require in scripts] **********************************************
2024-05-23 21:30:19,505 p=153755 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 21:30:19,513 p=153755 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ***************************************
2024-05-23 21:30:20,357 p=153755 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716479999, "cache_updated": false, "changed": false}
2024-05-23 21:30:20,365 p=153755 u=root n=ansible | TASK [setup : Install Neovim on macOS] ******************************************************
2024-05-23 21:30:20,378 p=153755 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:30:20,389 p=153755 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] *********************************
2024-05-23 21:30:20,673 p=153755 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 21:30:20,713 p=153755 u=root n=ansible | TASK [setup : Clone the Neovim config] ******************************************************
2024-05-23 21:30:21,695 p=153755 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 21:30:21,703 p=153755 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] *******************************
2024-05-23 21:30:21,713 p=153755 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:30:21,724 p=153755 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] ****************
2024-05-23 21:30:21,744 p=153755 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 21:30:21,753 p=153755 u=root n=ansible | TASK [setup : Download NVM install script] **************************************************
2024-05-23 21:30:22,429 p=153755 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716480022.0900002-l80oq7mm/tmpxi7e017b", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 21:30:22,444 p=153755 u=root n=ansible | TASK [setup : Run NVM install script] *******************************************************
2024-05-23 21:33:19,520 p=153755 u=root n=ansible |  [ERROR]: User interrupted execution

2024-05-23 21:33:27,101 p=156844 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 21:33:27,223 p=156844 u=root n=ansible | PLAY [Configure local machine] **************************************************************
2024-05-23 21:33:27,230 p=156844 u=root n=ansible | TASK [Gathering Facts] **********************************************************************
2024-05-23 21:33:27,960 p=156844 u=root n=ansible | ok: [localhost]
2024-05-23 21:33:27,978 p=156844 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] **********************************
2024-05-23 21:33:28,680 p=156844 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716479999, "cache_updated": false, "changed": false}
2024-05-23 21:33:28,687 p=156844 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ***************************************
2024-05-23 21:33:28,697 p=156844 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:33:28,704 p=156844 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ***********************************
2024-05-23 21:33:28,714 p=156844 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:33:28,741 p=156844 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] **********************************
2024-05-23 21:33:31,858 p=156844 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716480211, "cache_updated": true, "changed": true}
2024-05-23 21:33:31,865 p=156844 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] ****************************************
2024-05-23 21:33:31,876 p=156844 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 21:33:31,884 p=156844 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] **************************************************
2024-05-23 21:33:31,893 p=156844 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:33:31,900 p=156844 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] *****************************************
2024-05-23 21:33:31,910 p=156844 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:33:31,923 p=156844 u=root n=ansible | TASK [setup : include_vars] *****************************************************************
2024-05-23 21:33:31,933 p=156844 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 21:33:31,940 p=156844 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] ************************
2024-05-23 21:33:32,553 p=156844 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716480211, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 21:33:33,153 p=156844 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716480211, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 21:33:33,754 p=156844 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716480211, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 21:33:34,379 p=156844 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716480211, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 21:33:34,981 p=156844 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716480211, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 21:33:35,578 p=156844 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716480211, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 21:33:36,177 p=156844 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716480211, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 21:33:36,778 p=156844 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716480211, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 21:33:37,382 p=156844 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716480211, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 21:33:37,983 p=156844 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716480211, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 21:33:38,581 p=156844 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716480211, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 21:33:39,193 p=156844 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716480211, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 21:33:39,791 p=156844 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716480211, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 21:33:40,391 p=156844 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716480211, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 21:33:40,991 p=156844 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716480211, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 21:33:41,586 p=156844 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716480211, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 21:33:41,593 p=156844 u=root n=ansible | TASK [setup : install all command line tool on macOS] ***************************************
2024-05-23 21:33:41,606 p=156844 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 21:33:41,611 p=156844 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 21:33:41,611 p=156844 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 21:33:41,616 p=156844 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 21:33:41,621 p=156844 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 21:33:41,627 p=156844 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 21:33:41,627 p=156844 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 21:33:41,627 p=156844 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 21:33:41,628 p=156844 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 21:33:41,628 p=156844 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 21:33:41,628 p=156844 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 21:33:41,628 p=156844 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 21:33:41,628 p=156844 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 21:33:41,629 p=156844 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 21:33:41,629 p=156844 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 21:33:41,629 p=156844 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 21:33:41,630 p=156844 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 21:33:41,637 p=156844 u=root n=ansible | TASK [setup : install python tools] *********************************************************
2024-05-23 21:33:43,176 p=156844 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.322275", "end": "2024-05-23 21:33:43.157203", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 21:33:41.834928", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 21:33:44,619 p=156844 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.317351", "end": "2024-05-23 21:33:44.601019", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 21:33:43.283668", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 21:33:46,057 p=156844 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.313973", "end": "2024-05-23 21:33:46.040631", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 21:33:44.726658", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 21:33:46,065 p=156844 u=root n=ansible | TASK [setup : checking Var require in scripts] **********************************************
2024-05-23 21:33:46,079 p=156844 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 21:33:46,087 p=156844 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ***************************************
2024-05-23 21:33:46,698 p=156844 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716480211, "cache_updated": false, "changed": false}
2024-05-23 21:33:46,705 p=156844 u=root n=ansible | TASK [setup : Install Neovim on macOS] ******************************************************
2024-05-23 21:33:46,713 p=156844 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 21:33:46,721 p=156844 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] *********************************
2024-05-23 21:33:46,926 p=156844 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 21:33:46,935 p=156844 u=root n=ansible | TASK [setup : Clone the Neovim config] ******************************************************
2024-05-23 21:33:47,876 p=156844 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 21:33:47,885 p=156844 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] *******************************
2024-05-23 21:33:47,894 p=156844 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 21:33:47,902 p=156844 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] ****************
2024-05-23 21:33:47,914 p=156844 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 21:33:47,921 p=156844 u=root n=ansible | TASK [setup : Download NVM install script] **************************************************
2024-05-23 21:33:48,262 p=156844 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716480228.1713994-svxd8lzm/tmp5pn5hvh0", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 21:33:48,269 p=156844 u=root n=ansible | TASK [setup : Run NVM install script] *******************************************************
2024-05-23 21:39:01,623 p=156844 u=root n=ansible | changed: [localhost] => {"changed": true, "cmd": "bash /tmp/install_nvm.sh", "delta": "0:05:13.197965", "end": "2024-05-23 21:39:01.596213", "msg": "", "rc": 0, "start": "2024-05-23 21:33:48.398248", "stderr": "internal error, please report: running \"node.npm\" failed: timeout waiting for snap system profiles to get updated", "stderr_lines": ["internal error, please report: running \"node.npm\" failed: timeout waiting for snap system profiles to get updated"], "stdout": "=> nvm is already installed in /home/vinayak/.nvm, trying to update using git\n\r=> => Compressing and cleaning up git repository\n\n=> nvm source string already in /home/vinayak/.zshrc\n=> bash_completion source string already in /home/vinayak/.zshrc\n=> Close and reopen your terminal to start using nvm or run the following to use it now:\n\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion", "stdout_lines": ["=> nvm is already installed in /home/vinayak/.nvm, trying to update using git", "", "=> => Compressing and cleaning up git repository", "", "=> nvm source string already in /home/vinayak/.zshrc", "=> bash_completion source string already in /home/vinayak/.zshrc", "=> Close and reopen your terminal to start using nvm or run the following to use it now:", "", "export NVM_DIR=\"$HOME/.nvm\"", "[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm", "[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion"]}
2024-05-23 21:39:01,631 p=156844 u=root n=ansible | TASK [setup : Install Node.js using NVM] ****************************************************
2024-05-23 21:39:01,776 p=156844 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": "vinayak/.nvm/nvm.sh install 22", "delta": "0:00:00.002275", "end": "2024-05-23 21:39:01.759919", "msg": "non-zero return code", "rc": 127, "start": "2024-05-23 21:39:01.757644", "stderr": "/bin/sh: 1: vinayak/.nvm/nvm.sh: not found", "stderr_lines": ["/bin/sh: 1: vinayak/.nvm/nvm.sh: not found"], "stdout": "", "stdout_lines": []}
2024-05-23 21:39:01,777 p=156844 u=root n=ansible | PLAY RECAP **********************************************************************************
2024-05-23 21:39:01,777 p=156844 u=root n=ansible | localhost                  : ok=14   changed=3    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 22:08:15,170 p=169023 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 22:08:15,358 p=169023 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 22:08:15,369 p=169023 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 22:08:16,343 p=169023 u=root n=ansible | ok: [localhost]
2024-05-23 22:08:16,369 p=169023 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:08:17,486 p=169023 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716480211, "cache_updated": false, "changed": false}
2024-05-23 22:08:17,492 p=169023 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 22:08:17,507 p=169023 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:08:17,520 p=169023 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 22:08:17,540 p=169023 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:08:17,552 p=169023 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:08:20,751 p=169023 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716482300, "cache_updated": true, "changed": true}
2024-05-23 22:08:20,758 p=169023 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 22:08:20,778 p=169023 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 22:08:20,788 p=169023 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 22:08:20,805 p=169023 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:08:20,815 p=169023 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 22:08:20,828 p=169023 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:08:20,849 p=169023 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 22:08:20,860 p=169023 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 22:08:20,874 p=169023 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 22:08:21,787 p=169023 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716482300, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 22:08:22,672 p=169023 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716482300, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 22:08:23,572 p=169023 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716482300, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 22:08:24,536 p=169023 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716482300, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 22:08:25,539 p=169023 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716482300, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 22:08:26,526 p=169023 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716482300, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 22:08:27,539 p=169023 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716482300, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 22:08:28,574 p=169023 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716482300, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 22:08:29,499 p=169023 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716482300, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 22:08:30,445 p=169023 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716482300, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 22:08:31,371 p=169023 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716482300, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 22:08:32,337 p=169023 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716482300, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 22:08:33,320 p=169023 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716482300, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 22:08:34,325 p=169023 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716482300, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 22:08:35,403 p=169023 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716482300, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 22:08:36,630 p=169023 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716482300, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 22:08:36,645 p=169023 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 22:08:36,669 p=169023 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 22:08:36,673 p=169023 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 22:08:36,685 p=169023 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 22:08:36,687 p=169023 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 22:08:36,689 p=169023 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 22:08:36,689 p=169023 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 22:08:36,698 p=169023 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 22:08:36,703 p=169023 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 22:08:36,704 p=169023 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 22:08:36,717 p=169023 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 22:08:36,721 p=169023 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 22:08:36,728 p=169023 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 22:08:36,730 p=169023 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 22:08:36,731 p=169023 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 22:08:36,731 p=169023 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 22:08:36,731 p=169023 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 22:08:36,733 p=169023 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 22:08:36,751 p=169023 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 22:08:38,735 p=169023 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.661631", "end": "2024-05-23 22:08:38.707491", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 22:08:37.045860", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 22:08:40,440 p=169023 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.522276", "end": "2024-05-23 22:08:40.419682", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 22:08:38.897406", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 22:08:42,178 p=169023 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.587379", "end": "2024-05-23 22:08:42.156675", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 22:08:40.569296", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 22:08:42,186 p=169023 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 22:08:42,201 p=169023 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 22:08:42,216 p=169023 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 22:08:42,997 p=169023 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716482300, "cache_updated": false, "changed": false}
2024-05-23 22:08:43,005 p=169023 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 22:08:43,023 p=169023 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:08:43,076 p=169023 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 22:08:43,301 p=169023 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:08:43,311 p=169023 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 22:08:44,278 p=169023 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 22:08:44,287 p=169023 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 22:08:44,301 p=169023 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:08:44,308 p=169023 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 22:08:44,326 p=169023 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 22:08:44,335 p=169023 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 22:08:44,761 p=169023 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716482324.6506445-hyrrqlck/tmpmbj4ta1y", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 22:08:44,769 p=169023 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 22:09:15,647 p=169023 u=root n=ansible |  [ERROR]: User interrupted execution

2024-05-23 22:09:59,348 p=171644 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 22:09:59,528 p=171644 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 22:09:59,539 p=171644 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 22:10:00,511 p=171644 u=root n=ansible | ok: [localhost]
2024-05-23 22:10:00,531 p=171644 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:10:01,539 p=171644 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716482300, "cache_updated": false, "changed": false}
2024-05-23 22:10:01,547 p=171644 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 22:10:01,576 p=171644 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:10:01,587 p=171644 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 22:10:01,602 p=171644 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:10:01,612 p=171644 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:10:05,211 p=171644 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716482404, "cache_updated": true, "changed": true}
2024-05-23 22:10:05,222 p=171644 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 22:10:05,241 p=171644 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 22:10:05,250 p=171644 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 22:10:05,263 p=171644 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:10:05,274 p=171644 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 22:10:05,295 p=171644 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:10:05,314 p=171644 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 22:10:05,340 p=171644 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "pip_tools": ["thefuck", "pyright", "pylint"]}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 22:10:05,354 p=171644 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 22:10:06,395 p=171644 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716482404, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 22:10:07,412 p=171644 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716482404, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 22:10:08,320 p=171644 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716482404, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 22:10:09,244 p=171644 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716482404, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 22:10:10,193 p=171644 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716482404, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 22:10:11,078 p=171644 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716482404, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 22:10:11,973 p=171644 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716482404, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 22:10:12,893 p=171644 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716482404, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 22:10:13,899 p=171644 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716482404, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 22:10:14,942 p=171644 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716482404, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 22:10:15,994 p=171644 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716482404, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 22:10:17,088 p=171644 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716482404, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 22:10:18,103 p=171644 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716482404, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 22:10:18,977 p=171644 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716482404, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 22:10:19,876 p=171644 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716482404, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 22:10:20,811 p=171644 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716482404, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 22:10:20,822 p=171644 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 22:10:20,841 p=171644 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 22:10:20,847 p=171644 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 22:10:20,849 p=171644 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 22:10:20,855 p=171644 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 22:10:20,859 p=171644 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 22:10:20,860 p=171644 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 22:10:20,868 p=171644 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 22:10:20,872 p=171644 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 22:10:20,872 p=171644 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 22:10:20,879 p=171644 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 22:10:20,885 p=171644 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 22:10:20,885 p=171644 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 22:10:20,886 p=171644 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 22:10:20,893 p=171644 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 22:10:20,894 p=171644 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 22:10:20,894 p=171644 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 22:10:20,895 p=171644 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 22:10:20,906 p=171644 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 22:10:22,795 p=171644 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.586265", "end": "2024-05-23 22:10:22.760430", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 22:10:21.174165", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 22:10:24,666 p=171644 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.671800", "end": "2024-05-23 22:10:24.636813", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 22:10:22.965013", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 22:10:26,544 p=171644 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.694669", "end": "2024-05-23 22:10:26.515619", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 22:10:24.820950", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 22:10:26,556 p=171644 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 22:10:26,577 p=171644 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 22:10:26,595 p=171644 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 22:10:27,588 p=171644 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716482404, "cache_updated": false, "changed": false}
2024-05-23 22:10:27,598 p=171644 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 22:10:27,613 p=171644 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:10:27,625 p=171644 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 22:10:27,932 p=171644 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:10:27,941 p=171644 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 22:10:28,962 p=171644 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 22:10:28,974 p=171644 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 22:10:28,993 p=171644 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:10:29,007 p=171644 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 22:10:29,022 p=171644 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 22:10:29,086 p=171644 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 22:10:29,507 p=171644 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716482429.3889632-t36cg0sg/tmpbin4vrxt", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 22:10:29,517 p=171644 u=root n=ansible | TASK [setup : Ensure NVM directory exists] ***************************************************************************************************************************************************
2024-05-23 22:10:29,711 p=171644 u=root n=ansible | changed: [localhost] => {"changed": true, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "vinayak/.nvm", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:10:29,721 p=171644 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 22:10:29,905 p=171644 u=root n=ansible | ok: [localhost] => {"changed": false, "cmd": "bash /tmp/install_nvm.sh", "delta": null, "end": null, "msg": "Did not run command since 'vinayak/.nvm' exists", "rc": 0, "start": null, "stderr": "", "stderr_lines": [], "stdout": "skipped, since vinayak/.nvm exists", "stdout_lines": ["skipped, since vinayak/.nvm exists"]}
2024-05-23 22:10:29,914 p=171644 u=root n=ansible | TASK [setup : print NVM version to confirm installation and check if NVM is working] *********************************************************************************************************
2024-05-23 22:10:30,107 p=171644 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": "vinayak/.nvm/nvm.sh --version", "delta": "0:00:00.002527", "end": "2024-05-23 22:10:30.075892", "msg": "non-zero return code", "rc": 127, "start": "2024-05-23 22:10:30.073365", "stderr": "/bin/sh: 1: vinayak/.nvm/nvm.sh: not found", "stderr_lines": ["/bin/sh: 1: vinayak/.nvm/nvm.sh: not found"], "stdout": "", "stdout_lines": []}
2024-05-23 22:10:30,108 p=171644 u=root n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2024-05-23 22:10:30,108 p=171644 u=root n=ansible | localhost                  : ok=15   changed=3    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 22:14:44,537 p=174614 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 22:14:44,706 p=174614 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 22:14:44,723 p=174614 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 22:14:45,686 p=174614 u=root n=ansible | ok: [localhost]
2024-05-23 22:14:45,718 p=174614 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:14:46,864 p=174614 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716482404, "cache_updated": false, "changed": false}
2024-05-23 22:14:46,873 p=174614 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 22:14:46,890 p=174614 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:14:46,905 p=174614 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 22:14:46,923 p=174614 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:14:46,933 p=174614 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:14:50,292 p=174614 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716482689, "cache_updated": true, "changed": true}
2024-05-23 22:14:50,303 p=174614 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 22:14:50,322 p=174614 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 22:14:50,333 p=174614 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 22:14:50,349 p=174614 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:14:50,359 p=174614 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 22:14:50,380 p=174614 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:14:50,405 p=174614 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 22:14:50,422 p=174614 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "pip_tools": ["thefuck", "pyright", "pylint"], "setup_dir": "/home/vinayak"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 22:14:50,435 p=174614 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 22:14:51,340 p=174614 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716482689, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 22:14:52,251 p=174614 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716482689, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 22:14:53,149 p=174614 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716482689, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 22:14:54,051 p=174614 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716482689, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 22:14:54,932 p=174614 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716482689, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 22:14:55,850 p=174614 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716482689, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 22:14:56,837 p=174614 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716482689, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 22:14:57,806 p=174614 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716482689, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 22:14:58,767 p=174614 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716482689, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 22:14:59,788 p=174614 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716482689, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 22:15:00,814 p=174614 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716482689, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 22:15:01,659 p=174614 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716482689, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 22:15:02,520 p=174614 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716482689, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 22:15:03,372 p=174614 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716482689, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 22:15:04,224 p=174614 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716482689, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 22:15:05,091 p=174614 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716482689, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 22:15:05,103 p=174614 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 22:15:05,122 p=174614 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 22:15:05,125 p=174614 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 22:15:05,130 p=174614 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 22:15:05,135 p=174614 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 22:15:05,141 p=174614 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 22:15:05,143 p=174614 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 22:15:05,145 p=174614 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 22:15:05,146 p=174614 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 22:15:05,146 p=174614 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 22:15:05,151 p=174614 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 22:15:05,156 p=174614 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 22:15:05,160 p=174614 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 22:15:05,162 p=174614 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 22:15:05,162 p=174614 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 22:15:05,163 p=174614 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 22:15:05,163 p=174614 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 22:15:05,165 p=174614 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 22:15:05,176 p=174614 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 22:15:07,113 p=174614 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.644965", "end": "2024-05-23 22:15:07.080291", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 22:15:05.435326", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 22:15:08,883 p=174614 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.585775", "end": "2024-05-23 22:15:08.850223", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 22:15:07.264448", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 22:15:10,746 p=174614 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.674735", "end": "2024-05-23 22:15:10.721538", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 22:15:09.046803", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 22:15:10,754 p=174614 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 22:15:10,772 p=174614 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 22:15:10,784 p=174614 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 22:15:11,667 p=174614 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716482689, "cache_updated": false, "changed": false}
2024-05-23 22:15:11,677 p=174614 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 22:15:11,689 p=174614 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:15:11,704 p=174614 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 22:15:11,999 p=174614 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:15:12,008 p=174614 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 22:15:13,013 p=174614 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 22:15:13,020 p=174614 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 22:15:13,035 p=174614 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:15:13,048 p=174614 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 22:15:13,066 p=174614 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 22:15:13,078 p=174614 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 22:15:13,606 p=174614 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716482713.4467025-17cya_0h/tmpwlt1yzu_", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 22:15:13,616 p=174614 u=root n=ansible | TASK [setup : Ensure NVM directory exists] ***************************************************************************************************************************************************
2024-05-23 22:15:13,814 p=174614 u=root n=ansible | changed: [localhost] => {"changed": true, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.nvm", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:15:13,822 p=174614 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 22:15:14,006 p=174614 u=root n=ansible | ok: [localhost] => {"changed": false, "cmd": "bash /tmp/install_nvm.sh", "delta": null, "end": null, "msg": "Did not run command since '/home/vinayak/.nvm' exists", "rc": 0, "start": null, "stderr": "", "stderr_lines": [], "stdout": "skipped, since /home/vinayak/.nvm exists", "stdout_lines": ["skipped, since /home/vinayak/.nvm exists"]}
2024-05-23 22:15:14,017 p=174614 u=root n=ansible | TASK [setup : print NVM version to confirm installation and check if NVM is working] *********************************************************************************************************
2024-05-23 22:15:14,217 p=174614 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": "/home/vinayak/.nvm/nvm.sh --version", "delta": "0:00:00.003879", "end": "2024-05-23 22:15:14.186264", "msg": "non-zero return code", "rc": 126, "start": "2024-05-23 22:15:14.182385", "stderr": "/bin/sh: 1: /home/vinayak/.nvm/nvm.sh: Permission denied", "stderr_lines": ["/bin/sh: 1: /home/vinayak/.nvm/nvm.sh: Permission denied"], "stdout": "", "stdout_lines": []}
2024-05-23 22:15:14,218 p=174614 u=root n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2024-05-23 22:15:14,218 p=174614 u=root n=ansible | localhost                  : ok=15   changed=3    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 22:30:05,102 p=179851 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 22:30:05,250 p=179851 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 22:30:05,263 p=179851 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 22:30:06,220 p=179851 u=root n=ansible | ok: [localhost]
2024-05-23 22:30:06,244 p=179851 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:30:07,364 p=179851 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716482689, "cache_updated": false, "changed": false}
2024-05-23 22:30:07,371 p=179851 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 22:30:07,385 p=179851 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:30:07,397 p=179851 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 22:30:07,409 p=179851 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:30:07,418 p=179851 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:30:15,342 p=179851 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716483614, "cache_updated": true, "changed": true}
2024-05-23 22:30:15,349 p=179851 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 22:30:15,365 p=179851 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 22:30:15,373 p=179851 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 22:30:15,386 p=179851 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:30:15,400 p=179851 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 22:30:15,413 p=179851 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:30:15,429 p=179851 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 22:30:15,438 p=179851 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "nvm_source_cmd": "\"export NVM_DIR='$([ -z '${XDG_CONFIG_HOME-}' ] && printf %s '${HOME}/.nvm' || printf %s '${XDG_CONFIG_HOME}/nvm')' [ -s '$NVM_DIR/nvm.sh' ] && \\. '$NVM_DIR/nvm.sh'\"\n", "pip_tools": ["thefuck", "pyright", "pylint"], "setup_dir": "/home/vinayak"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 22:30:15,449 p=179851 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 22:30:16,212 p=179851 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716483614, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 22:30:16,926 p=179851 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716483614, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 22:30:17,630 p=179851 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716483614, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 22:30:18,341 p=179851 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716483614, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 22:30:19,049 p=179851 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716483614, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 22:30:19,752 p=179851 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716483614, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 22:30:20,502 p=179851 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716483614, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 22:30:21,414 p=179851 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716483614, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 22:30:22,228 p=179851 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716483614, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 22:30:23,095 p=179851 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716483614, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 22:30:23,731 p=179851 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716483614, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 22:30:24,383 p=179851 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716483614, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 22:30:25,062 p=179851 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716483614, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 22:30:25,795 p=179851 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716483614, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 22:30:26,643 p=179851 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716483614, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 22:30:27,719 p=179851 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716483614, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 22:30:27,728 p=179851 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 22:30:27,743 p=179851 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 22:30:27,748 p=179851 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 22:30:27,753 p=179851 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 22:30:27,759 p=179851 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 22:30:27,764 p=179851 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 22:30:27,767 p=179851 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 22:30:27,767 p=179851 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 22:30:27,767 p=179851 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 22:30:27,767 p=179851 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 22:30:27,768 p=179851 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 22:30:27,768 p=179851 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 22:30:27,768 p=179851 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 22:30:27,768 p=179851 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 22:30:27,769 p=179851 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 22:30:27,769 p=179851 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 22:30:27,769 p=179851 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 22:30:27,769 p=179851 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 22:30:27,778 p=179851 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 22:30:29,514 p=179851 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.475414", "end": "2024-05-23 22:30:29.491547", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 22:30:28.016133", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 22:30:31,111 p=179851 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.449556", "end": "2024-05-23 22:30:31.089519", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 22:30:29.639963", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 22:30:32,729 p=179851 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.474871", "end": "2024-05-23 22:30:32.709787", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 22:30:31.234916", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 22:30:32,739 p=179851 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 22:30:32,752 p=179851 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 22:30:32,763 p=179851 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 22:30:33,569 p=179851 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716483614, "cache_updated": false, "changed": false}
2024-05-23 22:30:33,577 p=179851 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 22:30:33,590 p=179851 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:30:33,598 p=179851 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 22:30:33,849 p=179851 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:30:33,857 p=179851 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 22:30:35,061 p=179851 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 22:30:35,069 p=179851 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 22:30:35,080 p=179851 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:30:35,089 p=179851 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 22:30:35,104 p=179851 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 22:30:35,147 p=179851 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 22:30:36,004 p=179851 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716483635.4151292-b0gda996/tmpe8d5olnr", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 22:30:36,013 p=179851 u=root n=ansible | TASK [setup : Ensure NVM directory exists] ***************************************************************************************************************************************************
2024-05-23 22:30:36,174 p=179851 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.nvm", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:30:36,182 p=179851 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 22:30:36,340 p=179851 u=root n=ansible | ok: [localhost] => {"changed": false, "cmd": "bash /tmp/install_nvm.sh", "delta": null, "end": null, "msg": "Did not run command since '/home/vinayak/.nvm' exists", "rc": 0, "start": null, "stderr": "", "stderr_lines": [], "stdout": "skipped, since /home/vinayak/.nvm exists", "stdout_lines": ["skipped, since /home/vinayak/.nvm exists"]}
2024-05-23 22:30:36,347 p=179851 u=root n=ansible | TASK [setup : Source NVM] ********************************************************************************************************************************************************************
2024-05-23 22:30:36,537 p=179851 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": "source \"export NVM_DIR='$([ -z '${XDG_CONFIG_HOME-}' ] && printf %s '${HOME}/.nvm' || printf %s '${XDG_CONFIG_HOME}/nvm')' [ -s '$NVM_DIR/nvm.sh' ] && \\. '$NVM_DIR/nvm.sh'\"\n", "delta": "0:00:00.002652", "end": "2024-05-23 22:30:36.507773", "msg": "non-zero return code", "rc": 127, "start": "2024-05-23 22:30:36.505121", "stderr": "/bin/sh: 1: source: not found", "stderr_lines": ["/bin/sh: 1: source: not found"], "stdout": "", "stdout_lines": []}
2024-05-23 22:30:36,538 p=179851 u=root n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2024-05-23 22:30:36,538 p=179851 u=root n=ansible | localhost                  : ok=15   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 22:31:52,071 p=182392 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 22:31:52,196 p=182392 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 22:31:52,203 p=182392 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 22:31:52,918 p=182392 u=root n=ansible | ok: [localhost]
2024-05-23 22:31:52,938 p=182392 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:31:53,939 p=182392 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716483614, "cache_updated": false, "changed": false}
2024-05-23 22:31:54,003 p=182392 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 22:31:54,025 p=182392 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:31:54,043 p=182392 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 22:31:54,061 p=182392 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:31:54,083 p=182392 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:32:05,924 p=182392 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716483725, "cache_updated": true, "changed": true}
2024-05-23 22:32:05,933 p=182392 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 22:32:05,947 p=182392 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 22:32:05,954 p=182392 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 22:32:05,966 p=182392 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:32:05,973 p=182392 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 22:32:05,986 p=182392 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:32:06,005 p=182392 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 22:32:06,018 p=182392 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "nvm_source_command": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "pip_tools": ["thefuck", "pyright", "pylint"], "setup_dir": "/home/vinayak"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 22:32:06,026 p=182392 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 22:32:06,764 p=182392 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716483725, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 22:32:07,489 p=182392 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716483725, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 22:32:08,211 p=182392 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716483725, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 22:32:08,933 p=182392 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716483725, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 22:32:09,656 p=182392 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716483725, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 22:32:10,392 p=182392 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716483725, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 22:32:11,125 p=182392 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716483725, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 22:32:11,843 p=182392 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716483725, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 22:32:12,558 p=182392 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716483725, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 22:32:13,281 p=182392 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716483725, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 22:32:14,000 p=182392 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716483725, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 22:32:14,724 p=182392 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716483725, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 22:32:15,456 p=182392 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716483725, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 22:32:16,178 p=182392 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716483725, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 22:32:16,890 p=182392 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716483725, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 22:32:17,614 p=182392 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716483725, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 22:32:17,622 p=182392 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 22:32:17,638 p=182392 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 22:32:17,642 p=182392 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 22:32:17,648 p=182392 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 22:32:17,648 p=182392 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 22:32:17,648 p=182392 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 22:32:17,649 p=182392 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 22:32:17,649 p=182392 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 22:32:17,653 p=182392 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 22:32:17,654 p=182392 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 22:32:17,654 p=182392 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 22:32:17,654 p=182392 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 22:32:17,660 p=182392 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 22:32:17,664 p=182392 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 22:32:17,664 p=182392 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 22:32:17,665 p=182392 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 22:32:17,665 p=182392 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 22:32:17,666 p=182392 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 22:32:17,673 p=182392 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 22:32:19,399 p=182392 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.463545", "end": "2024-05-23 22:32:19.378992", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 22:32:17.915447", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 22:32:20,960 p=182392 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.421048", "end": "2024-05-23 22:32:20.937609", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 22:32:19.516561", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 22:32:22,529 p=182392 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.428862", "end": "2024-05-23 22:32:22.511085", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 22:32:21.082223", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 22:32:22,537 p=182392 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 22:32:22,550 p=182392 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 22:32:22,559 p=182392 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 22:32:23,332 p=182392 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716483725, "cache_updated": false, "changed": false}
2024-05-23 22:32:23,339 p=182392 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 22:32:23,351 p=182392 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:32:23,358 p=182392 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 22:32:23,669 p=182392 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:32:23,678 p=182392 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 22:32:24,792 p=182392 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 22:32:24,800 p=182392 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 22:32:24,813 p=182392 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:32:24,825 p=182392 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 22:32:24,839 p=182392 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 22:32:24,853 p=182392 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 22:32:30,315 p=182392 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 5, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716483745.158607-5c12ypzt/tmp75fc0nph", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 22:32:30,326 p=182392 u=root n=ansible | TASK [setup : Ensure NVM directory exists] ***************************************************************************************************************************************************
2024-05-23 22:32:30,591 p=182392 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.nvm", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:32:30,601 p=182392 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 22:32:30,814 p=182392 u=root n=ansible | ok: [localhost] => {"changed": false, "cmd": "bash /tmp/install_nvm.sh", "delta": null, "end": null, "msg": "Did not run command since '/home/vinayak/.nvm' exists", "rc": 0, "start": null, "stderr": "", "stderr_lines": [], "stdout": "skipped, since /home/vinayak/.nvm exists", "stdout_lines": ["skipped, since /home/vinayak/.nvm exists"]}
2024-05-23 22:32:30,821 p=182392 u=root n=ansible | TASK [setup : Source NVM] ********************************************************************************************************************************************************************
2024-05-23 22:32:30,835 p=182392 u=root n=ansible | fatal: [localhost]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'nvm_source_cmd' is undefined. 'nvm_source_cmd' is undefined\n\nThe error appears to be in '/home/vinayak/ansible_config/roles/setup/tasks/nvm.yml': line 28, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Source NVM\n  ^ here\n"}
2024-05-23 22:32:30,837 p=182392 u=root n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2024-05-23 22:32:30,837 p=182392 u=root n=ansible | localhost                  : ok=15   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 22:33:52,938 p=184849 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 22:33:53,101 p=184849 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 22:33:53,112 p=184849 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 22:33:54,124 p=184849 u=root n=ansible | ok: [localhost]
2024-05-23 22:33:54,147 p=184849 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:33:55,290 p=184849 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716483725, "cache_updated": false, "changed": false}
2024-05-23 22:33:55,308 p=184849 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 22:33:55,331 p=184849 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:33:55,349 p=184849 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 22:33:55,368 p=184849 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:33:55,388 p=184849 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:33:59,169 p=184849 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716483838, "cache_updated": true, "changed": true}
2024-05-23 22:33:59,176 p=184849 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 22:33:59,189 p=184849 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 22:33:59,199 p=184849 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 22:33:59,218 p=184849 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:33:59,227 p=184849 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 22:33:59,243 p=184849 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:33:59,260 p=184849 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 22:33:59,275 p=184849 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "nvm_source_command": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "pip_tools": ["thefuck", "pyright", "pylint"], "setup_dir": "/home/vinayak"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 22:33:59,283 p=184849 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 22:34:00,312 p=184849 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716483838, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 22:34:01,041 p=184849 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716483838, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 22:34:01,811 p=184849 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716483838, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 22:34:02,502 p=184849 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716483838, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 22:34:03,187 p=184849 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716483838, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 22:34:03,890 p=184849 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716483838, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 22:34:04,584 p=184849 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716483838, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 22:34:05,310 p=184849 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716483838, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 22:34:05,995 p=184849 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716483838, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 22:34:06,685 p=184849 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716483838, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 22:34:07,377 p=184849 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716483838, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 22:34:08,063 p=184849 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716483838, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 22:34:08,752 p=184849 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716483838, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 22:34:09,445 p=184849 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716483838, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 22:34:10,139 p=184849 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716483838, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 22:34:10,825 p=184849 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716483838, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 22:34:10,833 p=184849 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 22:34:10,853 p=184849 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 22:34:10,855 p=184849 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 22:34:10,861 p=184849 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 22:34:10,866 p=184849 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 22:34:10,871 p=184849 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 22:34:10,872 p=184849 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 22:34:10,872 p=184849 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 22:34:10,877 p=184849 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 22:34:10,879 p=184849 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 22:34:10,880 p=184849 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 22:34:10,881 p=184849 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 22:34:10,882 p=184849 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 22:34:10,882 p=184849 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 22:34:10,886 p=184849 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 22:34:10,886 p=184849 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 22:34:10,887 p=184849 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 22:34:10,888 p=184849 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 22:34:10,898 p=184849 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 22:34:12,559 p=184849 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.411959", "end": "2024-05-23 22:34:12.538724", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 22:34:11.126765", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 22:34:14,080 p=184849 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.381762", "end": "2024-05-23 22:34:14.058098", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 22:34:12.676336", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 22:34:15,655 p=184849 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.428213", "end": "2024-05-23 22:34:15.635890", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 22:34:14.207677", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 22:34:15,664 p=184849 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 22:34:15,676 p=184849 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 22:34:15,684 p=184849 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 22:34:16,390 p=184849 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716483838, "cache_updated": false, "changed": false}
2024-05-23 22:34:16,397 p=184849 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 22:34:16,407 p=184849 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:34:16,415 p=184849 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 22:34:16,648 p=184849 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:34:16,656 p=184849 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 22:34:17,625 p=184849 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 22:34:17,632 p=184849 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 22:34:17,644 p=184849 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:34:17,662 p=184849 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 22:34:17,687 p=184849 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 22:34:17,700 p=184849 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 22:34:18,101 p=184849 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716483858.0018802-jwggjgil/tmpkvxj0h0d", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 22:34:18,109 p=184849 u=root n=ansible | TASK [setup : Ensure NVM directory exists] ***************************************************************************************************************************************************
2024-05-23 22:34:18,291 p=184849 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.nvm", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:34:18,299 p=184849 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 22:34:18,456 p=184849 u=root n=ansible | ok: [localhost] => {"changed": false, "cmd": "bash /tmp/install_nvm.sh", "delta": null, "end": null, "msg": "Did not run command since '/home/vinayak/.nvm' exists", "rc": 0, "start": null, "stderr": "", "stderr_lines": [], "stdout": "skipped, since /home/vinayak/.nvm exists", "stdout_lines": ["skipped, since /home/vinayak/.nvm exists"]}
2024-05-23 22:34:18,464 p=184849 u=root n=ansible | TASK [setup : Source NVM] ********************************************************************************************************************************************************************
2024-05-23 22:34:18,625 p=184849 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": "source export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "delta": "0:00:00.003294", "end": "2024-05-23 22:34:18.602367", "msg": "non-zero return code", "rc": 1, "start": "2024-05-23 22:34:18.599073", "stderr": "/bin/sh: 1: source: not found", "stderr_lines": ["/bin/sh: 1: source: not found"], "stdout": "", "stdout_lines": []}
2024-05-23 22:34:18,625 p=184849 u=root n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2024-05-23 22:34:18,626 p=184849 u=root n=ansible | localhost                  : ok=15   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 22:36:26,650 p=187409 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 22:36:26,776 p=187409 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 22:36:26,783 p=187409 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 22:36:27,482 p=187409 u=root n=ansible | ok: [localhost]
2024-05-23 22:36:27,504 p=187409 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:36:28,377 p=187409 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716483838, "cache_updated": false, "changed": false}
2024-05-23 22:36:28,384 p=187409 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 22:36:28,393 p=187409 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:36:28,442 p=187409 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 22:36:28,460 p=187409 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:36:28,476 p=187409 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:36:32,906 p=187409 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716483992, "cache_updated": true, "changed": true}
2024-05-23 22:36:32,919 p=187409 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 22:36:32,941 p=187409 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 22:36:32,953 p=187409 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 22:36:32,970 p=187409 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:36:32,981 p=187409 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 22:36:32,994 p=187409 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:36:33,016 p=187409 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 22:36:33,032 p=187409 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "nvm_source_command": ". export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "pip_tools": ["thefuck", "pyright", "pylint"], "setup_dir": "/home/vinayak"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 22:36:33,042 p=187409 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 22:36:34,055 p=187409 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716483992, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 22:36:35,074 p=187409 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716483992, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 22:36:36,120 p=187409 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716483992, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 22:36:37,179 p=187409 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716483992, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 22:36:38,196 p=187409 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716483992, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 22:36:39,180 p=187409 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716483992, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 22:36:40,207 p=187409 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716483992, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 22:36:41,205 p=187409 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716483992, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 22:36:42,178 p=187409 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716483992, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 22:36:43,191 p=187409 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716483992, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 22:36:44,169 p=187409 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716483992, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 22:36:45,160 p=187409 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716483992, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 22:36:46,255 p=187409 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716483992, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 22:36:47,242 p=187409 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716483992, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 22:36:48,249 p=187409 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716483992, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 22:36:49,254 p=187409 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716483992, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 22:36:49,268 p=187409 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 22:36:49,290 p=187409 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 22:36:49,305 p=187409 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 22:36:49,310 p=187409 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 22:36:49,317 p=187409 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 22:36:49,321 p=187409 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 22:36:49,328 p=187409 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 22:36:49,333 p=187409 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 22:36:49,337 p=187409 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 22:36:49,344 p=187409 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 22:36:49,349 p=187409 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 22:36:49,354 p=187409 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 22:36:49,355 p=187409 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 22:36:49,355 p=187409 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 22:36:49,355 p=187409 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 22:36:49,355 p=187409 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 22:36:49,356 p=187409 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 22:36:49,356 p=187409 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 22:36:49,369 p=187409 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 22:36:51,337 p=187409 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.655251", "end": "2024-05-23 22:36:51.308653", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 22:36:49.653402", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 22:36:53,177 p=187409 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.655035", "end": "2024-05-23 22:36:53.145630", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 22:36:51.490595", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 22:36:55,325 p=187409 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.967715", "end": "2024-05-23 22:36:55.299468", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 22:36:53.331753", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 22:36:55,338 p=187409 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 22:36:55,362 p=187409 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 22:36:55,380 p=187409 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 22:36:56,410 p=187409 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716483992, "cache_updated": false, "changed": false}
2024-05-23 22:36:56,418 p=187409 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 22:36:56,434 p=187409 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:36:56,448 p=187409 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 22:36:56,778 p=187409 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:36:56,786 p=187409 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 22:36:57,827 p=187409 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 22:36:57,835 p=187409 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 22:36:57,853 p=187409 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:36:57,865 p=187409 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 22:36:57,892 p=187409 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 22:36:57,906 p=187409 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 22:36:58,595 p=187409 u=root n=ansible | ok: [localhost] => {"changed": false, "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "mode": "0755", "msg": "HTTP Error 304: Not Modified", "owner": "vinayak", "size": 16555, "state": "file", "status_code": 304, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 22:36:58,603 p=187409 u=root n=ansible | TASK [setup : Ensure NVM directory exists] ***************************************************************************************************************************************************
2024-05-23 22:36:58,822 p=187409 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.nvm", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:36:58,834 p=187409 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 22:36:59,038 p=187409 u=root n=ansible | ok: [localhost] => {"changed": false, "cmd": "bash /tmp/install_nvm.sh", "delta": null, "end": null, "msg": "Did not run command since '/home/vinayak/.nvm' exists", "rc": 0, "start": null, "stderr": "", "stderr_lines": [], "stdout": "skipped, since /home/vinayak/.nvm exists", "stdout_lines": ["skipped, since /home/vinayak/.nvm exists"]}
2024-05-23 22:36:59,049 p=187409 u=root n=ansible | TASK [setup : Source NVM] ********************************************************************************************************************************************************************
2024-05-23 22:36:59,251 p=187409 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": "source . export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "delta": "0:00:00.005795", "end": "2024-05-23 22:36:59.229848", "msg": "non-zero return code", "rc": 1, "start": "2024-05-23 22:36:59.224053", "stderr": "/bin/sh: 1: source: not found", "stderr_lines": ["/bin/sh: 1: source: not found"], "stdout": "", "stdout_lines": []}
2024-05-23 22:36:59,252 p=187409 u=root n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2024-05-23 22:36:59,252 p=187409 u=root n=ansible | localhost                  : ok=15   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 22:37:54,399 p=189843 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 22:37:54,577 p=189843 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 22:37:54,589 p=189843 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 22:37:55,698 p=189843 u=root n=ansible | ok: [localhost]
2024-05-23 22:37:55,723 p=189843 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:37:56,942 p=189843 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716483992, "cache_updated": false, "changed": false}
2024-05-23 22:37:56,950 p=189843 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 22:37:56,968 p=189843 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:37:56,982 p=189843 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 22:37:56,998 p=189843 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:37:57,010 p=189843 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:38:02,882 p=189843 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716484079, "cache_updated": true, "changed": true}
2024-05-23 22:38:02,892 p=189843 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 22:38:02,908 p=189843 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 22:38:02,920 p=189843 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 22:38:02,938 p=189843 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:38:02,947 p=189843 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 22:38:02,966 p=189843 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:38:02,989 p=189843 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 22:38:03,008 p=189843 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "nvm_source_command": ". export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "pip_tools": ["thefuck", "pyright", "pylint"], "setup_dir": "/home/vinayak"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 22:38:03,023 p=189843 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 22:38:04,244 p=189843 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716484079, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 22:38:05,439 p=189843 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716484079, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 22:38:06,477 p=189843 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716484079, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 22:38:07,526 p=189843 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716484079, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 22:38:08,561 p=189843 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716484079, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 22:38:09,614 p=189843 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716484079, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 22:38:10,678 p=189843 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716484079, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 22:38:11,759 p=189843 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716484079, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 22:38:12,818 p=189843 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716484079, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 22:38:13,842 p=189843 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716484079, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 22:38:14,873 p=189843 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716484079, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 22:38:15,977 p=189843 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716484079, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 22:38:17,023 p=189843 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716484079, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 22:38:18,094 p=189843 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716484079, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 22:38:19,178 p=189843 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716484079, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 22:38:20,240 p=189843 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716484079, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 22:38:20,253 p=189843 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 22:38:20,280 p=189843 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 22:38:20,286 p=189843 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 22:38:20,293 p=189843 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 22:38:20,299 p=189843 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 22:38:20,300 p=189843 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 22:38:20,302 p=189843 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 22:38:20,308 p=189843 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 22:38:20,314 p=189843 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 22:38:20,315 p=189843 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 22:38:20,317 p=189843 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 22:38:20,320 p=189843 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 22:38:20,325 p=189843 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 22:38:20,331 p=189843 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 22:38:20,332 p=189843 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 22:38:20,335 p=189843 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 22:38:20,337 p=189843 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 22:38:20,338 p=189843 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 22:38:20,347 p=189843 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 22:38:22,480 p=189843 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.789906", "end": "2024-05-23 22:38:22.445347", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 22:38:20.655441", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 22:38:24,405 p=189843 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.731457", "end": "2024-05-23 22:38:24.375473", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 22:38:22.644016", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 22:38:26,395 p=189843 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.777128", "end": "2024-05-23 22:38:26.370489", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 22:38:24.593361", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 22:38:26,407 p=189843 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 22:38:26,423 p=189843 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 22:38:26,434 p=189843 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 22:38:27,587 p=189843 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716484079, "cache_updated": false, "changed": false}
2024-05-23 22:38:27,595 p=189843 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 22:38:27,617 p=189843 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:38:27,636 p=189843 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 22:38:27,956 p=189843 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:38:27,968 p=189843 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 22:38:29,048 p=189843 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 22:38:29,060 p=189843 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 22:38:29,073 p=189843 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:38:29,093 p=189843 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 22:38:29,129 p=189843 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 22:38:29,184 p=189843 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 22:38:29,678 p=189843 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716484109.544709-yyr7xwqe/tmp5mu2qelr", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 22:38:29,691 p=189843 u=root n=ansible | TASK [setup : Ensure NVM directory exists] ***************************************************************************************************************************************************
2024-05-23 22:38:29,923 p=189843 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.nvm", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:38:29,936 p=189843 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 22:38:30,152 p=189843 u=root n=ansible | ok: [localhost] => {"changed": false, "cmd": "bash /tmp/install_nvm.sh", "delta": null, "end": null, "msg": "Did not run command since '/home/vinayak/.nvm' exists", "rc": 0, "start": null, "stderr": "", "stderr_lines": [], "stdout": "skipped, since /home/vinayak/.nvm exists", "stdout_lines": ["skipped, since /home/vinayak/.nvm exists"]}
2024-05-23 22:38:30,162 p=189843 u=root n=ansible | TASK [setup : Source NVM] ********************************************************************************************************************************************************************
2024-05-23 22:38:30,394 p=189843 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": ". export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "delta": "0:00:00.005977", "end": "2024-05-23 22:38:30.367562", "msg": "non-zero return code", "rc": 2, "start": "2024-05-23 22:38:30.361585", "stderr": "/bin/sh: 1: .: export: not found", "stderr_lines": ["/bin/sh: 1: .: export: not found"], "stdout": "", "stdout_lines": []}
2024-05-23 22:38:30,395 p=189843 u=root n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2024-05-23 22:38:30,395 p=189843 u=root n=ansible | localhost                  : ok=15   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 22:39:17,530 p=192305 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 22:39:17,656 p=192305 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 22:39:17,667 p=192305 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 22:39:18,447 p=192305 u=root n=ansible | ok: [localhost]
2024-05-23 22:39:18,468 p=192305 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:39:19,399 p=192305 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716484079, "cache_updated": false, "changed": false}
2024-05-23 22:39:19,426 p=192305 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 22:39:19,434 p=192305 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:39:19,441 p=192305 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 22:39:19,451 p=192305 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:39:19,458 p=192305 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:39:23,057 p=192305 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716484162, "cache_updated": true, "changed": true}
2024-05-23 22:39:23,065 p=192305 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 22:39:23,082 p=192305 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 22:39:23,090 p=192305 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 22:39:23,113 p=192305 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:39:23,125 p=192305 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 22:39:23,140 p=192305 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:39:23,160 p=192305 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 22:39:23,170 p=192305 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "nvm_source_command": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "pip_tools": ["thefuck", "pyright", "pylint"], "setup_dir": "/home/vinayak"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 22:39:23,182 p=192305 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 22:39:24,198 p=192305 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716484162, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 22:39:25,222 p=192305 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716484162, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 22:39:26,241 p=192305 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716484162, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 22:39:27,436 p=192305 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716484162, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 22:39:28,446 p=192305 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716484162, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 22:39:29,454 p=192305 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716484162, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 22:39:30,528 p=192305 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716484162, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 22:39:31,595 p=192305 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716484162, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 22:39:32,641 p=192305 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716484162, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 22:39:33,684 p=192305 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716484162, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 22:39:34,738 p=192305 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716484162, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 22:39:35,860 p=192305 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716484162, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 22:39:36,851 p=192305 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716484162, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 22:39:37,843 p=192305 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716484162, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 22:39:38,847 p=192305 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716484162, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 22:39:40,209 p=192305 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716484162, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 22:39:40,217 p=192305 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 22:39:40,234 p=192305 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 22:39:40,240 p=192305 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 22:39:40,244 p=192305 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 22:39:40,246 p=192305 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 22:39:40,248 p=192305 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 22:39:40,256 p=192305 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 22:39:40,258 p=192305 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 22:39:40,259 p=192305 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 22:39:40,260 p=192305 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 22:39:40,266 p=192305 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 22:39:40,272 p=192305 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 22:39:40,277 p=192305 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 22:39:40,279 p=192305 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 22:39:40,285 p=192305 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 22:39:40,288 p=192305 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 22:39:40,290 p=192305 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 22:39:40,291 p=192305 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 22:39:40,305 p=192305 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 22:39:42,285 p=192305 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.656360", "end": "2024-05-23 22:39:42.252849", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 22:39:40.596489", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 22:39:44,123 p=192305 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.654400", "end": "2024-05-23 22:39:44.092510", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 22:39:42.438110", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 22:39:46,341 p=192305 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:02.019901", "end": "2024-05-23 22:39:46.312814", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 22:39:44.292913", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 22:39:46,349 p=192305 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 22:39:46,365 p=192305 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 22:39:46,373 p=192305 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 22:39:47,468 p=192305 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716484162, "cache_updated": false, "changed": false}
2024-05-23 22:39:47,482 p=192305 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 22:39:47,500 p=192305 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:39:47,517 p=192305 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 22:39:47,825 p=192305 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:39:47,832 p=192305 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 22:39:48,854 p=192305 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 22:39:48,864 p=192305 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 22:39:48,885 p=192305 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:39:48,896 p=192305 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 22:39:48,914 p=192305 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 22:39:48,923 p=192305 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 22:39:49,518 p=192305 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716484189.3929338-dogovh4b/tmps4r343vj", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 22:39:49,530 p=192305 u=root n=ansible | TASK [setup : Ensure NVM directory exists] ***************************************************************************************************************************************************
2024-05-23 22:39:49,762 p=192305 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.nvm", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:39:49,775 p=192305 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 22:39:49,978 p=192305 u=root n=ansible | ok: [localhost] => {"changed": false, "cmd": "bash /tmp/install_nvm.sh", "delta": null, "end": null, "msg": "Did not run command since '/home/vinayak/.nvm' exists", "rc": 0, "start": null, "stderr": "", "stderr_lines": [], "stdout": "skipped, since /home/vinayak/.nvm exists", "stdout_lines": ["skipped, since /home/vinayak/.nvm exists"]}
2024-05-23 22:39:49,988 p=192305 u=root n=ansible | TASK [setup : Source NVM] ********************************************************************************************************************************************************************
2024-05-23 22:39:50,282 p=192305 u=root n=ansible | changed: [localhost] => {"changed": true, "cmd": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "delta": "0:00:00.086137", "end": "2024-05-23 22:39:50.250497", "msg": "", "rc": 0, "start": "2024-05-23 22:39:50.164360", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2024-05-23 22:39:50,292 p=192305 u=root n=ansible | TASK [setup : print NVM version to confirm installation and check if NVM is working] *********************************************************************************************************
2024-05-23 22:39:50,531 p=192305 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": "nvm -v", "delta": "0:00:00.004930", "end": "2024-05-23 22:39:50.502050", "msg": "non-zero return code", "rc": 127, "start": "2024-05-23 22:39:50.497120", "stderr": "/bin/sh: 1: nvm: not found", "stderr_lines": ["/bin/sh: 1: nvm: not found"], "stdout": "", "stdout_lines": []}
2024-05-23 22:39:50,532 p=192305 u=root n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2024-05-23 22:39:50,532 p=192305 u=root n=ansible | localhost                  : ok=16   changed=3    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 22:42:49,074 p=195306 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 22:42:49,270 p=195306 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 22:42:49,278 p=195306 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 22:42:50,393 p=195306 u=root n=ansible | ok: [localhost]
2024-05-23 22:42:50,420 p=195306 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:42:51,670 p=195306 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716484162, "cache_updated": false, "changed": false}
2024-05-23 22:42:51,678 p=195306 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 22:42:51,695 p=195306 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:42:51,709 p=195306 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 22:42:51,725 p=195306 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:42:51,736 p=195306 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:42:55,803 p=195306 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716484375, "cache_updated": true, "changed": true}
2024-05-23 22:42:55,810 p=195306 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 22:42:55,833 p=195306 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 22:42:55,844 p=195306 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 22:42:55,861 p=195306 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:42:55,873 p=195306 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 22:42:55,889 p=195306 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:42:55,914 p=195306 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 22:42:55,930 p=195306 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "nvm_source_command": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "pip_tools": ["thefuck", "pyright", "pylint"], "setup_dir": "/home/vinayak"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 22:42:55,943 p=195306 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 22:42:57,039 p=195306 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716484375, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 22:42:58,073 p=195306 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716484375, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 22:42:59,125 p=195306 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716484375, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 22:43:00,204 p=195306 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716484375, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 22:43:01,207 p=195306 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716484375, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 22:43:02,229 p=195306 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716484375, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 22:43:03,591 p=195306 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716484375, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 22:43:04,640 p=195306 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716484375, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 22:43:05,676 p=195306 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716484375, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 22:43:06,660 p=195306 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716484375, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 22:43:07,656 p=195306 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716484375, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 22:43:08,636 p=195306 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716484375, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 22:43:09,668 p=195306 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716484375, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 22:43:10,681 p=195306 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716484375, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 22:43:11,703 p=195306 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716484375, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 22:43:12,705 p=195306 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716484375, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 22:43:12,715 p=195306 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 22:43:12,732 p=195306 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 22:43:12,737 p=195306 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 22:43:12,742 p=195306 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 22:43:12,751 p=195306 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 22:43:12,754 p=195306 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 22:43:12,757 p=195306 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 22:43:12,764 p=195306 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 22:43:12,769 p=195306 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 22:43:12,773 p=195306 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 22:43:12,780 p=195306 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 22:43:12,785 p=195306 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 22:43:12,789 p=195306 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 22:43:12,790 p=195306 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 22:43:12,790 p=195306 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 22:43:12,790 p=195306 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 22:43:12,791 p=195306 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 22:43:12,791 p=195306 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 22:43:12,805 p=195306 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 22:43:14,820 p=195306 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.683912", "end": "2024-05-23 22:43:14.789239", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 22:43:13.105327", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 22:43:16,733 p=195306 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.709967", "end": "2024-05-23 22:43:16.691797", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 22:43:14.981830", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 22:43:18,571 p=195306 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.666000", "end": "2024-05-23 22:43:18.544213", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 22:43:16.878213", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 22:43:18,587 p=195306 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 22:43:18,602 p=195306 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 22:43:18,615 p=195306 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 22:43:19,685 p=195306 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716484375, "cache_updated": false, "changed": false}
2024-05-23 22:43:19,692 p=195306 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 22:43:19,713 p=195306 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:43:19,726 p=195306 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 22:43:20,045 p=195306 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:43:20,054 p=195306 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 22:43:21,190 p=195306 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 22:43:21,210 p=195306 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 22:43:21,243 p=195306 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:43:21,264 p=195306 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 22:43:21,292 p=195306 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 22:43:21,340 p=195306 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 22:43:21,807 p=195306 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716484401.6848674-7b61gcb9/tmpb6ivb1hc", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 22:43:21,817 p=195306 u=root n=ansible | TASK [setup : Ensure NVM directory exists] ***************************************************************************************************************************************************
2024-05-23 22:43:22,021 p=195306 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.nvm", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:43:22,033 p=195306 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 22:43:22,228 p=195306 u=root n=ansible | ok: [localhost] => {"changed": false, "cmd": "bash /tmp/install_nvm.sh", "delta": null, "end": null, "msg": "Did not run command since '/home/vinayak/.nvm' exists", "rc": 0, "start": null, "stderr": "", "stderr_lines": [], "stdout": "skipped, since /home/vinayak/.nvm exists", "stdout_lines": ["skipped, since /home/vinayak/.nvm exists"]}
2024-05-23 22:43:22,237 p=195306 u=root n=ansible | TASK [setup : print NVM version to confirm installation and check if NVM is working] *********************************************************************************************************
2024-05-23 22:43:22,255 p=195306 u=root n=ansible | fatal: [localhost]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'nvm_source_script' is undefined. 'nvm_source_script' is undefined\n\nThe error appears to be in '/home/vinayak/ansible_config/roles/setup/tasks/nvm.yml': line 28, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: print NVM version to confirm installation and check if NVM is working\n  ^ here\n"}
2024-05-23 22:43:22,257 p=195306 u=root n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2024-05-23 22:43:22,257 p=195306 u=root n=ansible | localhost                  : ok=15   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 22:44:40,060 p=197825 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 22:44:40,267 p=197825 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 22:44:40,278 p=197825 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 22:44:41,509 p=197825 u=root n=ansible | ok: [localhost]
2024-05-23 22:44:41,531 p=197825 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:44:42,783 p=197825 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716484375, "cache_updated": false, "changed": false}
2024-05-23 22:44:42,795 p=197825 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 22:44:42,812 p=197825 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:44:42,825 p=197825 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 22:44:42,841 p=197825 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:44:42,853 p=197825 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:44:45,799 p=197825 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716484485, "cache_updated": true, "changed": true}
2024-05-23 22:44:45,811 p=197825 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 22:44:45,829 p=197825 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 22:44:45,844 p=197825 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 22:44:45,860 p=197825 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:44:45,874 p=197825 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 22:44:45,891 p=197825 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:44:45,920 p=197825 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 22:44:45,934 p=197825 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "nvm_source_command": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "pip_tools": ["thefuck", "pyright", "pylint"], "setup_dir": "/home/vinayak"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 22:44:45,946 p=197825 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 22:44:46,997 p=197825 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716484485, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 22:44:48,041 p=197825 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716484485, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 22:44:49,243 p=197825 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716484485, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 22:44:50,405 p=197825 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716484485, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 22:44:51,559 p=197825 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716484485, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 22:44:52,764 p=197825 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716484485, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 22:44:54,064 p=197825 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716484485, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 22:44:55,151 p=197825 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716484485, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 22:44:56,014 p=197825 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716484485, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 22:44:56,671 p=197825 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716484485, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 22:44:57,338 p=197825 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716484485, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 22:44:57,945 p=197825 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716484485, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 22:44:58,548 p=197825 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716484485, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 22:44:59,160 p=197825 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716484485, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 22:44:59,891 p=197825 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716484485, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 22:45:00,682 p=197825 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716484485, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 22:45:00,692 p=197825 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 22:45:00,705 p=197825 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 22:45:00,710 p=197825 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 22:45:00,715 p=197825 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 22:45:00,716 p=197825 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 22:45:00,716 p=197825 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 22:45:00,717 p=197825 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 22:45:00,717 p=197825 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 22:45:00,717 p=197825 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 22:45:00,722 p=197825 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 22:45:00,728 p=197825 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 22:45:00,728 p=197825 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 22:45:00,728 p=197825 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 22:45:00,729 p=197825 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 22:45:00,729 p=197825 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 22:45:00,729 p=197825 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 22:45:00,729 p=197825 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 22:45:00,730 p=197825 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 22:45:00,738 p=197825 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 22:45:02,383 p=197825 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.384177", "end": "2024-05-23 22:45:02.357052", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 22:45:00.972875", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 22:45:04,196 p=197825 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.647448", "end": "2024-05-23 22:45:04.173101", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 22:45:02.525653", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 22:45:05,842 p=197825 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.478738", "end": "2024-05-23 22:45:05.823523", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 22:45:04.344785", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 22:45:05,851 p=197825 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 22:45:05,863 p=197825 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 22:45:05,871 p=197825 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 22:45:06,603 p=197825 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716484485, "cache_updated": false, "changed": false}
2024-05-23 22:45:06,610 p=197825 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 22:45:06,621 p=197825 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:45:06,629 p=197825 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 22:45:06,873 p=197825 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:45:06,880 p=197825 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 22:45:07,821 p=197825 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 22:45:07,827 p=197825 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 22:45:07,839 p=197825 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:45:07,846 p=197825 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 22:45:07,861 p=197825 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 22:45:07,871 p=197825 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 22:45:08,280 p=197825 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716484508.1790776-a2lssc8q/tmpww9m7nsx", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 22:45:08,287 p=197825 u=root n=ansible | TASK [setup : Ensure NVM directory exists] ***************************************************************************************************************************************************
2024-05-23 22:45:08,459 p=197825 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.nvm", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:45:08,469 p=197825 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 22:45:08,654 p=197825 u=root n=ansible | ok: [localhost] => {"changed": false, "cmd": "bash /tmp/install_nvm.sh", "delta": null, "end": null, "msg": "Did not run command since '/home/vinayak/.nvm' exists", "rc": 0, "start": null, "stderr": "", "stderr_lines": [], "stdout": "skipped, since /home/vinayak/.nvm exists", "stdout_lines": ["skipped, since /home/vinayak/.nvm exists"]}
2024-05-23 22:45:08,661 p=197825 u=root n=ansible | TASK [setup : print NVM version to confirm installation and check if NVM is working] *********************************************************************************************************
2024-05-23 22:45:08,675 p=197825 u=root n=ansible | fatal: [localhost]: FAILED! => {"msg": "The task includes an option with an undefined variable. The error was: 'nvm_source_script' is undefined. 'nvm_source_script' is undefined\n\nThe error appears to be in '/home/vinayak/ansible_config/roles/setup/tasks/nvm.yml': line 28, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: print NVM version to confirm installation and check if NVM is working\n  ^ here\n"}
2024-05-23 22:45:08,676 p=197825 u=root n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2024-05-23 22:45:08,676 p=197825 u=root n=ansible | localhost                  : ok=15   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 22:49:25,859 p=200637 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 22:49:26,017 p=200637 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 22:49:26,027 p=200637 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 22:49:26,820 p=200637 u=root n=ansible | ok: [localhost]
2024-05-23 22:49:26,839 p=200637 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:49:27,692 p=200637 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716484485, "cache_updated": false, "changed": false}
2024-05-23 22:49:27,703 p=200637 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 22:49:27,718 p=200637 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:49:27,751 p=200637 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 22:49:27,760 p=200637 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:49:27,776 p=200637 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:49:30,191 p=200637 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716484769, "cache_updated": true, "changed": true}
2024-05-23 22:49:30,203 p=200637 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 22:49:30,230 p=200637 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 22:49:30,242 p=200637 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 22:49:30,254 p=200637 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:49:30,263 p=200637 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 22:49:30,281 p=200637 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:49:30,308 p=200637 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 22:49:30,323 p=200637 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "nvm_source_command": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "pip_tools": ["thefuck", "pyright", "pylint"], "setup_dir": "/home/vinayak"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 22:49:30,337 p=200637 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 22:49:31,547 p=200637 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716484769, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 22:49:32,528 p=200637 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716484769, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 22:49:33,510 p=200637 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716484769, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 22:49:34,771 p=200637 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716484769, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 22:49:35,792 p=200637 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716484769, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 22:49:36,723 p=200637 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716484769, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 22:49:37,721 p=200637 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716484769, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 22:49:38,635 p=200637 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716484769, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 22:49:39,515 p=200637 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716484769, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 22:49:40,320 p=200637 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716484769, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 22:49:41,089 p=200637 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716484769, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 22:49:41,845 p=200637 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716484769, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 22:49:42,605 p=200637 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716484769, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 22:49:43,486 p=200637 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716484769, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 22:49:44,418 p=200637 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716484769, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 22:49:45,409 p=200637 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716484769, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 22:49:45,422 p=200637 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 22:49:45,441 p=200637 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 22:49:45,448 p=200637 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 22:49:45,454 p=200637 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 22:49:45,458 p=200637 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 22:49:45,464 p=200637 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 22:49:45,469 p=200637 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 22:49:45,474 p=200637 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 22:49:45,480 p=200637 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 22:49:45,481 p=200637 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 22:49:45,485 p=200637 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 22:49:45,485 p=200637 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 22:49:45,486 p=200637 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 22:49:45,486 p=200637 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 22:49:45,486 p=200637 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 22:49:45,487 p=200637 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 22:49:45,487 p=200637 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 22:49:45,487 p=200637 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 22:49:45,496 p=200637 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 22:49:47,470 p=200637 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.630940", "end": "2024-05-23 22:49:47.386763", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 22:49:45.755823", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 22:49:49,391 p=200637 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.719546", "end": "2024-05-23 22:49:49.367073", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 22:49:47.647527", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 22:49:51,029 p=200637 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.490852", "end": "2024-05-23 22:49:51.011577", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 22:49:49.520725", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 22:49:51,039 p=200637 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 22:49:51,052 p=200637 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 22:49:51,060 p=200637 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 22:49:51,842 p=200637 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716484769, "cache_updated": false, "changed": false}
2024-05-23 22:49:51,856 p=200637 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 22:49:51,869 p=200637 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:49:51,877 p=200637 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 22:49:52,132 p=200637 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:49:52,139 p=200637 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 22:49:53,172 p=200637 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 22:49:53,181 p=200637 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 22:49:53,192 p=200637 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:49:53,200 p=200637 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 22:49:53,215 p=200637 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 22:49:53,225 p=200637 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 22:49:53,759 p=200637 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716484793.526817-ttpdmtcz/tmp2qq547ne", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 22:49:53,795 p=200637 u=root n=ansible | TASK [setup : Ensure NVM directory exists] ***************************************************************************************************************************************************
2024-05-23 22:49:53,953 p=200637 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.nvm", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:49:53,962 p=200637 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 22:49:54,132 p=200637 u=root n=ansible | ok: [localhost] => {"changed": false, "cmd": "bash /tmp/install_nvm.sh", "delta": null, "end": null, "msg": "Did not run command since '/home/vinayak/.nvm' exists", "rc": 0, "start": null, "stderr": "", "stderr_lines": [], "stdout": "skipped, since /home/vinayak/.nvm exists", "stdout_lines": ["skipped, since /home/vinayak/.nvm exists"]}
2024-05-23 22:49:54,139 p=200637 u=root n=ansible | TASK [setup : print NVM version to confirm installation and check if NVM is working] *********************************************************************************************************
2024-05-23 22:49:54,378 p=200637 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n && nvm -v", "delta": "0:00:00.068116", "end": "2024-05-23 22:49:54.358358", "msg": "non-zero return code", "rc": 2, "start": "2024-05-23 22:49:54.290242", "stderr": "/bin/sh: 3: Syntax error: \"&&\" unexpected", "stderr_lines": ["/bin/sh: 3: Syntax error: \"&&\" unexpected"], "stdout": "", "stdout_lines": []}
2024-05-23 22:49:54,380 p=200637 u=root n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2024-05-23 22:49:54,380 p=200637 u=root n=ansible | localhost                  : ok=15   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 22:51:20,164 p=203371 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 22:51:20,297 p=203371 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 22:51:20,304 p=203371 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 22:51:21,044 p=203371 u=root n=ansible | ok: [localhost]
2024-05-23 22:51:21,066 p=203371 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:51:22,150 p=203371 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716484769, "cache_updated": false, "changed": false}
2024-05-23 22:51:22,161 p=203371 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 22:51:22,173 p=203371 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:51:22,180 p=203371 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 22:51:22,197 p=203371 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:51:22,213 p=203371 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:51:25,276 p=203371 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716484884, "cache_updated": true, "changed": true}
2024-05-23 22:51:25,286 p=203371 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 22:51:25,299 p=203371 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 22:51:25,308 p=203371 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 22:51:25,321 p=203371 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:51:25,330 p=203371 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 22:51:25,340 p=203371 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:51:25,358 p=203371 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 22:51:25,371 p=203371 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "nvm_source_command": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "pip_tools": ["thefuck", "pyright", "pylint"], "setup_dir": "/home/vinayak"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 22:51:25,379 p=203371 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 22:51:26,138 p=203371 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716484884, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 22:51:27,123 p=203371 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716484884, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 22:51:27,881 p=203371 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716484884, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 22:51:28,668 p=203371 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716484884, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 22:51:29,434 p=203371 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716484884, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 22:51:30,225 p=203371 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716484884, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 22:51:30,980 p=203371 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716484884, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 22:51:31,743 p=203371 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716484884, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 22:51:32,498 p=203371 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716484884, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 22:51:33,232 p=203371 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716484884, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 22:51:33,967 p=203371 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716484884, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 22:51:34,706 p=203371 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716484884, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 22:51:35,459 p=203371 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716484884, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 22:51:36,235 p=203371 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716484884, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 22:51:36,993 p=203371 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716484884, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 22:51:37,738 p=203371 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716484884, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 22:51:37,747 p=203371 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 22:51:37,761 p=203371 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 22:51:37,767 p=203371 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 22:51:37,771 p=203371 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 22:51:37,776 p=203371 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 22:51:37,785 p=203371 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 22:51:37,788 p=203371 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 22:51:37,790 p=203371 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 22:51:37,791 p=203371 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 22:51:37,791 p=203371 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 22:51:37,791 p=203371 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 22:51:37,792 p=203371 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 22:51:37,796 p=203371 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 22:51:37,800 p=203371 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 22:51:37,801 p=203371 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 22:51:37,802 p=203371 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 22:51:37,802 p=203371 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 22:51:37,804 p=203371 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 22:51:37,811 p=203371 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 22:51:39,783 p=203371 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.699118", "end": "2024-05-23 22:51:39.746052", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 22:51:38.046934", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 22:51:41,663 p=203371 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.647186", "end": "2024-05-23 22:51:41.642054", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 22:51:39.994868", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 22:51:43,352 p=203371 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.536685", "end": "2024-05-23 22:51:43.331324", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 22:51:41.794639", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 22:51:43,360 p=203371 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 22:51:43,378 p=203371 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 22:51:43,388 p=203371 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 22:51:44,153 p=203371 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716484884, "cache_updated": false, "changed": false}
2024-05-23 22:51:44,160 p=203371 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 22:51:44,172 p=203371 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:51:44,180 p=203371 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 22:51:44,447 p=203371 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:51:44,454 p=203371 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 22:51:45,878 p=203371 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 22:51:45,886 p=203371 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 22:51:45,894 p=203371 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:51:45,907 p=203371 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 22:51:45,924 p=203371 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 22:51:45,935 p=203371 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 22:51:46,416 p=203371 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716484906.2483976-ds9k4ul6/tmpzjnq7ia_", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 22:51:46,430 p=203371 u=root n=ansible | TASK [setup : Ensure NVM directory exists] ***************************************************************************************************************************************************
2024-05-23 22:51:46,755 p=203371 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.nvm", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:51:46,761 p=203371 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 22:51:46,917 p=203371 u=root n=ansible | ok: [localhost] => {"changed": false, "cmd": "bash /tmp/install_nvm.sh", "delta": null, "end": null, "msg": "Did not run command since '/home/vinayak/.nvm' exists", "rc": 0, "start": null, "stderr": "", "stderr_lines": [], "stdout": "skipped, since /home/vinayak/.nvm exists", "stdout_lines": ["skipped, since /home/vinayak/.nvm exists"]}
2024-05-23 22:51:46,924 p=203371 u=root n=ansible | TASK [setup : print NVM version to confirm installation and check if NVM is working] *********************************************************************************************************
2024-05-23 22:51:47,149 p=203371 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n && nvm -v", "delta": "0:00:00.065770", "end": "2024-05-23 22:51:47.127952", "msg": "non-zero return code", "rc": 2, "start": "2024-05-23 22:51:47.062182", "stderr": "/bin/sh: 3: Syntax error: \"&&\" unexpected", "stderr_lines": ["/bin/sh: 3: Syntax error: \"&&\" unexpected"], "stdout": "", "stdout_lines": []}
2024-05-23 22:51:47,150 p=203371 u=root n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2024-05-23 22:51:47,150 p=203371 u=root n=ansible | localhost                  : ok=15   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 22:57:04,838 p=206673 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 22:57:04,982 p=206673 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 22:57:04,990 p=206673 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 22:57:05,913 p=206673 u=root n=ansible | ok: [localhost]
2024-05-23 22:57:05,937 p=206673 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:57:06,975 p=206673 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716484884, "cache_updated": false, "changed": false}
2024-05-23 22:57:06,984 p=206673 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 22:57:06,999 p=206673 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:57:07,008 p=206673 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 22:57:07,019 p=206673 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:57:07,028 p=206673 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 22:57:10,246 p=206673 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716485229, "cache_updated": true, "changed": true}
2024-05-23 22:57:10,255 p=206673 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 22:57:10,274 p=206673 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 22:57:10,286 p=206673 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 22:57:10,298 p=206673 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:57:10,306 p=206673 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 22:57:10,317 p=206673 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:57:10,338 p=206673 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 22:57:10,354 p=206673 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "nvm_source_command": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n  [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "pip_tools": ["thefuck", "pyright", "pylint"], "setup_dir": "/home/vinayak"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 22:57:10,363 p=206673 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 22:57:11,221 p=206673 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716485229, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 22:57:12,148 p=206673 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716485229, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 22:57:12,968 p=206673 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716485229, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 22:57:13,701 p=206673 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716485229, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 22:57:14,433 p=206673 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716485229, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 22:57:15,476 p=206673 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716485229, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 22:57:16,732 p=206673 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716485229, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 22:57:17,926 p=206673 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716485229, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 22:57:19,018 p=206673 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716485229, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 22:57:20,202 p=206673 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716485229, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 22:57:21,366 p=206673 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716485229, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 22:57:22,292 p=206673 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716485229, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 22:57:23,277 p=206673 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716485229, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 22:57:24,213 p=206673 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716485229, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 22:57:25,165 p=206673 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716485229, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 22:57:26,123 p=206673 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716485229, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 22:57:26,132 p=206673 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 22:57:26,149 p=206673 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 22:57:26,156 p=206673 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 22:57:26,156 p=206673 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 22:57:26,157 p=206673 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 22:57:26,163 p=206673 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 22:57:26,167 p=206673 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 22:57:26,169 p=206673 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 22:57:26,169 p=206673 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 22:57:26,169 p=206673 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 22:57:26,172 p=206673 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 22:57:26,179 p=206673 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 22:57:26,184 p=206673 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 22:57:26,191 p=206673 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 22:57:26,194 p=206673 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 22:57:26,196 p=206673 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 22:57:26,197 p=206673 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 22:57:26,198 p=206673 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 22:57:26,210 p=206673 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 22:57:28,229 p=206673 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.700314", "end": "2024-05-23 22:57:28.199904", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 22:57:26.499590", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 22:57:30,056 p=206673 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.653653", "end": "2024-05-23 22:57:30.028874", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 22:57:28.375221", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 22:57:31,900 p=206673 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.666433", "end": "2024-05-23 22:57:31.877630", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 22:57:30.211197", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 22:57:31,909 p=206673 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 22:57:31,924 p=206673 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 22:57:31,932 p=206673 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 22:57:32,910 p=206673 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716485229, "cache_updated": false, "changed": false}
2024-05-23 22:57:32,917 p=206673 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 22:57:32,931 p=206673 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 22:57:32,982 p=206673 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 22:57:33,239 p=206673 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:57:33,248 p=206673 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 22:57:34,298 p=206673 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 22:57:34,346 p=206673 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 22:57:34,387 p=206673 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 22:57:34,411 p=206673 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 22:57:34,440 p=206673 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 22:57:34,452 p=206673 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 22:57:34,951 p=206673 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716485254.832813-3e34eij0/tmpz1hozxs4", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 22:57:34,962 p=206673 u=root n=ansible | TASK [setup : Ensure NVM directory exists] ***************************************************************************************************************************************************
2024-05-23 22:57:35,179 p=206673 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.nvm", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 22:57:35,190 p=206673 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 22:57:35,383 p=206673 u=root n=ansible | ok: [localhost] => {"changed": false, "cmd": "bash /tmp/install_nvm.sh", "delta": null, "end": null, "msg": "Did not run command since '/home/vinayak/.nvm' exists", "rc": 0, "start": null, "stderr": "", "stderr_lines": [], "stdout": "skipped, since /home/vinayak/.nvm exists", "stdout_lines": ["skipped, since /home/vinayak/.nvm exists"]}
2024-05-23 22:57:35,393 p=206673 u=root n=ansible | TASK [setup : print NVM version to confirm installation and check if NVM is working] *********************************************************************************************************
2024-05-23 22:57:35,674 p=206673 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n  [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n && nvm -v", "delta": "0:00:00.077191", "end": "2024-05-23 22:57:35.647208", "msg": "non-zero return code", "rc": 2, "start": "2024-05-23 22:57:35.570017", "stderr": "/bin/sh: 3: Syntax error: \"&&\" unexpected", "stderr_lines": ["/bin/sh: 3: Syntax error: \"&&\" unexpected"], "stdout": "", "stdout_lines": []}
2024-05-23 22:57:35,676 p=206673 u=root n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2024-05-23 22:57:35,677 p=206673 u=root n=ansible | localhost                  : ok=15   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 23:01:37,585 p=209536 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 23:01:37,731 p=209536 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 23:01:37,739 p=209536 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 23:01:38,470 p=209536 u=root n=ansible | ok: [localhost]
2024-05-23 23:01:38,487 p=209536 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 23:01:39,311 p=209536 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716485229, "cache_updated": false, "changed": false}
2024-05-23 23:01:39,317 p=209536 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 23:01:39,326 p=209536 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 23:01:39,357 p=209536 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 23:01:39,367 p=209536 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 23:01:39,375 p=209536 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 23:01:42,466 p=209536 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716485501, "cache_updated": true, "changed": true}
2024-05-23 23:01:42,476 p=209536 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 23:01:42,493 p=209536 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 23:01:42,501 p=209536 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 23:01:42,527 p=209536 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 23:01:42,550 p=209536 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 23:01:42,576 p=209536 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 23:01:42,606 p=209536 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 23:01:42,629 p=209536 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "nvm_source_command": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n  [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "pip_tools": ["thefuck", "pyright", "pylint"], "setup_dir": "/home/vinayak"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 23:01:42,643 p=209536 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 23:01:43,817 p=209536 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716485501, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 23:01:44,816 p=209536 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716485501, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 23:01:45,999 p=209536 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716485501, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 23:01:47,181 p=209536 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716485501, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 23:01:47,990 p=209536 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716485501, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 23:01:48,827 p=209536 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716485501, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 23:01:50,269 p=209536 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716485501, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 23:01:51,468 p=209536 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716485501, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 23:01:52,374 p=209536 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716485501, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 23:01:53,212 p=209536 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716485501, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 23:01:54,008 p=209536 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716485501, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 23:01:54,818 p=209536 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716485501, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 23:01:55,602 p=209536 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716485501, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 23:01:56,461 p=209536 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716485501, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 23:01:57,520 p=209536 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716485501, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 23:01:58,580 p=209536 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716485501, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 23:01:58,592 p=209536 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 23:01:58,620 p=209536 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 23:01:58,625 p=209536 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 23:01:58,633 p=209536 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 23:01:58,641 p=209536 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 23:01:58,645 p=209536 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 23:01:58,650 p=209536 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 23:01:58,651 p=209536 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 23:01:58,657 p=209536 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 23:01:58,663 p=209536 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 23:01:58,664 p=209536 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 23:01:58,669 p=209536 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 23:01:58,673 p=209536 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 23:01:58,674 p=209536 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 23:01:58,681 p=209536 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 23:01:58,682 p=209536 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 23:01:58,683 p=209536 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 23:01:58,684 p=209536 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 23:01:58,694 p=209536 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 23:02:00,846 p=209536 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.780452", "end": "2024-05-23 23:02:00.818207", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 23:01:59.037755", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 23:02:02,563 p=209536 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.549700", "end": "2024-05-23 23:02:02.544063", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 23:02:00.994363", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 23:02:04,324 p=209536 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.618905", "end": "2024-05-23 23:02:04.307533", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 23:02:02.688628", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 23:02:04,343 p=209536 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 23:02:04,357 p=209536 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 23:02:04,367 p=209536 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 23:02:05,185 p=209536 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716485501, "cache_updated": false, "changed": false}
2024-05-23 23:02:05,194 p=209536 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 23:02:05,206 p=209536 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 23:02:05,215 p=209536 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 23:02:05,501 p=209536 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 23:02:05,508 p=209536 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 23:02:06,516 p=209536 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 23:02:06,528 p=209536 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 23:02:06,539 p=209536 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 23:02:06,572 p=209536 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 23:02:06,591 p=209536 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 23:02:06,600 p=209536 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 23:02:07,010 p=209536 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716485526.8968108-7civqty6/tmpbhvxfish", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 23:02:07,018 p=209536 u=root n=ansible | TASK [setup : Ensure NVM directory exists] ***************************************************************************************************************************************************
2024-05-23 23:02:07,183 p=209536 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.nvm", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 23:02:07,194 p=209536 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 23:02:07,368 p=209536 u=root n=ansible | ok: [localhost] => {"changed": false, "cmd": "bash /tmp/install_nvm.sh", "delta": null, "end": null, "msg": "Did not run command since '/home/vinayak/.nvm' exists", "rc": 0, "start": null, "stderr": "", "stderr_lines": [], "stdout": "skipped, since /home/vinayak/.nvm exists", "stdout_lines": ["skipped, since /home/vinayak/.nvm exists"]}
2024-05-23 23:02:07,375 p=209536 u=root n=ansible | TASK [setup : print NVM version to confirm installation and check if NVM is working] *********************************************************************************************************
2024-05-23 23:02:07,555 p=209536 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": "\"export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n  [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n\nnvm -v\"\n", "delta": "0:00:00.002873", "end": "2024-05-23 23:02:07.535634", "msg": "non-zero return code", "rc": 127, "start": "2024-05-23 23:02:07.532761", "stderr": "/bin/sh: 4: export NVM_DIR=/home/vinayak/.nvm\n  [ -s /nvm.sh ] && \\. /nvm.sh\n\nnvm -v: not found", "stderr_lines": ["/bin/sh: 4: export NVM_DIR=/home/vinayak/.nvm", "  [ -s /nvm.sh ] && \\. /nvm.sh", "", "nvm -v: not found"], "stdout": "", "stdout_lines": []}
2024-05-23 23:02:07,557 p=209536 u=root n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2024-05-23 23:02:07,557 p=209536 u=root n=ansible | localhost                  : ok=15   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 23:04:30,680 p=212152 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 23:04:30,834 p=212152 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 23:04:30,842 p=212152 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 23:04:31,659 p=212152 u=root n=ansible | ok: [localhost]
2024-05-23 23:04:31,677 p=212152 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 23:04:32,602 p=212152 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716485501, "cache_updated": false, "changed": false}
2024-05-23 23:04:32,633 p=212152 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 23:04:32,643 p=212152 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 23:04:32,651 p=212152 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 23:04:32,663 p=212152 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 23:04:32,672 p=212152 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 23:04:36,046 p=212152 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716485675, "cache_updated": true, "changed": true}
2024-05-23 23:04:36,055 p=212152 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 23:04:36,067 p=212152 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 23:04:36,076 p=212152 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 23:04:36,091 p=212152 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 23:04:36,101 p=212152 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 23:04:36,113 p=212152 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 23:04:36,132 p=212152 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 23:04:36,144 p=212152 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "nvm_source_command": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n  [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "pip_tools": ["thefuck", "pyright", "pylint"], "setup_dir": "/home/vinayak"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 23:04:36,159 p=212152 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 23:04:36,928 p=212152 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716485675, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 23:04:37,685 p=212152 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716485675, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 23:04:38,444 p=212152 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716485675, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 23:04:39,206 p=212152 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716485675, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 23:04:40,177 p=212152 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716485675, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 23:04:40,930 p=212152 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716485675, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 23:04:41,680 p=212152 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716485675, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 23:04:42,444 p=212152 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716485675, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 23:04:43,211 p=212152 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716485675, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 23:04:43,967 p=212152 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716485675, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 23:04:44,724 p=212152 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716485675, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 23:04:45,490 p=212152 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716485675, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 23:04:46,234 p=212152 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716485675, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 23:04:46,990 p=212152 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716485675, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 23:04:47,738 p=212152 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716485675, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 23:04:48,486 p=212152 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716485675, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 23:04:48,498 p=212152 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 23:04:48,515 p=212152 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 23:04:48,519 p=212152 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 23:04:48,524 p=212152 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 23:04:48,531 p=212152 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 23:04:48,537 p=212152 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 23:04:48,544 p=212152 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 23:04:48,546 p=212152 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 23:04:48,549 p=212152 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 23:04:48,551 p=212152 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 23:04:48,552 p=212152 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 23:04:48,552 p=212152 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 23:04:48,552 p=212152 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 23:04:48,556 p=212152 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 23:04:48,560 p=212152 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 23:04:48,561 p=212152 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 23:04:48,561 p=212152 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 23:04:48,562 p=212152 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 23:04:48,573 p=212152 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 23:04:50,307 p=212152 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.468248", "end": "2024-05-23 23:04:50.285085", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 23:04:48.816837", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 23:04:51,916 p=212152 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.459010", "end": "2024-05-23 23:04:51.892255", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 23:04:50.433245", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 23:04:53,565 p=212152 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.503111", "end": "2024-05-23 23:04:53.544255", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 23:04:52.041144", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 23:04:53,574 p=212152 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 23:04:53,586 p=212152 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 23:04:53,595 p=212152 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 23:04:54,382 p=212152 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716485675, "cache_updated": false, "changed": false}
2024-05-23 23:04:54,389 p=212152 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 23:04:54,403 p=212152 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 23:04:54,411 p=212152 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 23:04:54,658 p=212152 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 23:04:54,668 p=212152 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 23:04:55,653 p=212152 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 23:04:55,661 p=212152 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 23:04:55,677 p=212152 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 23:04:55,688 p=212152 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 23:04:55,705 p=212152 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 23:04:55,713 p=212152 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 23:04:56,129 p=212152 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716485696.0236514-29a73gmp/tmpv4qjt43o", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 23:04:56,137 p=212152 u=root n=ansible | TASK [setup : Ensure NVM directory exists] ***************************************************************************************************************************************************
2024-05-23 23:04:56,310 p=212152 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.nvm", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 23:04:56,346 p=212152 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 23:04:56,503 p=212152 u=root n=ansible | ok: [localhost] => {"changed": false, "cmd": "bash /tmp/install_nvm.sh", "delta": null, "end": null, "msg": "Did not run command since '/home/vinayak/.nvm' exists", "rc": 0, "start": null, "stderr": "", "stderr_lines": [], "stdout": "skipped, since /home/vinayak/.nvm exists", "stdout_lines": ["skipped, since /home/vinayak/.nvm exists"]}
2024-05-23 23:04:56,510 p=212152 u=root n=ansible | TASK [setup : print NVM version to confirm installation and check if NVM is working] *********************************************************************************************************
2024-05-23 23:04:56,669 p=212152 u=root n=ansible | fatal: [localhost]: FAILED! => {"changed": true, "cmd": "\"export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n  [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n\"\nnvm -v\n", "delta": "0:00:00.003064", "end": "2024-05-23 23:04:56.649263", "msg": "non-zero return code", "rc": 127, "start": "2024-05-23 23:04:56.646199", "stderr": "/bin/sh: 3: export NVM_DIR=/home/vinayak/.nvm\n  [ -s /nvm.sh ] && \\. /nvm.sh\n: not found\n/bin/sh: 4: nvm: not found", "stderr_lines": ["/bin/sh: 3: export NVM_DIR=/home/vinayak/.nvm", "  [ -s /nvm.sh ] && \\. /nvm.sh", ": not found", "/bin/sh: 4: nvm: not found"], "stdout": "", "stdout_lines": []}
2024-05-23 23:04:56,670 p=212152 u=root n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2024-05-23 23:04:56,670 p=212152 u=root n=ansible | localhost                  : ok=15   changed=2    unreachable=0    failed=1    skipped=7    rescued=0    ignored=0   
2024-05-23 23:05:23,120 p=214345 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 23:05:23,264 p=214345 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 23:05:23,272 p=214345 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 23:05:24,071 p=214345 u=root n=ansible | ok: [localhost]
2024-05-23 23:05:24,090 p=214345 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 23:05:24,509 p=214345 u=root n=ansible |  [ERROR]: User interrupted execution

2024-05-23 23:06:21,214 p=214878 u=root n=ansible | Using /home/vinayak/ansible_config/ansible.cfg as config file
2024-05-23 23:06:21,371 p=214878 u=root n=ansible | PLAY [Configure local machine] ***************************************************************************************************************************************************************
2024-05-23 23:06:21,379 p=214878 u=root n=ansible | TASK [Gathering Facts] ***********************************************************************************************************************************************************************
2024-05-23 23:06:22,180 p=214878 u=root n=ansible | ok: [localhost]
2024-05-23 23:06:22,204 p=214878 u=root n=ansible | TASK [pre_task : Install aptitude on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 23:06:23,076 p=214878 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716485675, "cache_updated": false, "changed": false}
2024-05-23 23:06:23,109 p=214878 u=root n=ansible | TASK [pre_task : Install or update Homebrew on macOS] ****************************************************************************************************************************************
2024-05-23 23:06:23,120 p=214878 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 23:06:23,128 p=214878 u=root n=ansible | TASK [pre_task : Debug message for Homebrew installation] ************************************************************************************************************************************
2024-05-23 23:06:23,138 p=214878 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 23:06:23,146 p=214878 u=root n=ansible | TASK [pre_task : Update APT cache on Debian-based systems] ***********************************************************************************************************************************
2024-05-23 23:06:26,670 p=214878 u=root n=ansible | changed: [localhost] => {"cache_update_time": 1716485786, "cache_updated": true, "changed": true}
2024-05-23 23:06:26,677 p=214878 u=root n=ansible | TASK [pre_task : Debug message for APT cache update] *****************************************************************************************************************************************
2024-05-23 23:06:26,695 p=214878 u=root n=ansible | ok: [localhost] => {
    "msg": "APT cache updated on Debian"
}
2024-05-23 23:06:26,706 p=214878 u=root n=ansible | TASK [pre_task : Update Homebrew on macOS] ***************************************************************************************************************************************************
2024-05-23 23:06:26,725 p=214878 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 23:06:26,737 p=214878 u=root n=ansible | TASK [pre_task : Debug message for Homebrew update] ******************************************************************************************************************************************
2024-05-23 23:06:26,747 p=214878 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 23:06:26,768 p=214878 u=root n=ansible | TASK [setup : include_vars] ******************************************************************************************************************************************************************
2024-05-23 23:06:26,780 p=214878 u=root n=ansible | ok: [localhost] => {"ansible_facts": {"cli_tools": ["git", "curl", "wget", "btop", "tree", "jq", "fzf", "ripgrep", "fd-find", "bat", "exa", "python3-dev", "python3-pip", "python3-setuptools", "python3-venv", "python3-full"], "local_user": "vinayak", "neovim_config_dir": "/home/vinayak/.config/nvim", "neovim_config_repo": "https://github.com/itsvinayak/TurboNvimConfig.nvim.git", "node_version": 22, "nvm_install_script_url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh", "nvm_source_command": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n  [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n", "pip_tools": ["thefuck", "pyright", "pylint"], "setup_dir": "/home/vinayak"}, "ansible_included_var_files": ["/home/vinayak/ansible_config/roles/setup/vars/main.yml"], "changed": false}
2024-05-23 23:06:26,789 p=214878 u=root n=ansible | TASK [setup : install all command line tool on Debian-based systems] *************************************************************************************************************************
2024-05-23 23:06:27,766 p=214878 u=root n=ansible | ok: [localhost] => (item=git) => {"ansible_loop_var": "item", "cache_update_time": 1716485786, "cache_updated": false, "changed": false, "item": "git"}
2024-05-23 23:06:28,679 p=214878 u=root n=ansible | ok: [localhost] => (item=curl) => {"ansible_loop_var": "item", "cache_update_time": 1716485786, "cache_updated": false, "changed": false, "item": "curl"}
2024-05-23 23:06:29,429 p=214878 u=root n=ansible | ok: [localhost] => (item=wget) => {"ansible_loop_var": "item", "cache_update_time": 1716485786, "cache_updated": false, "changed": false, "item": "wget"}
2024-05-23 23:06:30,187 p=214878 u=root n=ansible | ok: [localhost] => (item=btop) => {"ansible_loop_var": "item", "cache_update_time": 1716485786, "cache_updated": false, "changed": false, "item": "btop"}
2024-05-23 23:06:31,123 p=214878 u=root n=ansible | ok: [localhost] => (item=tree) => {"ansible_loop_var": "item", "cache_update_time": 1716485786, "cache_updated": false, "changed": false, "item": "tree"}
2024-05-23 23:06:31,885 p=214878 u=root n=ansible | ok: [localhost] => (item=jq) => {"ansible_loop_var": "item", "cache_update_time": 1716485786, "cache_updated": false, "changed": false, "item": "jq"}
2024-05-23 23:06:32,668 p=214878 u=root n=ansible | ok: [localhost] => (item=fzf) => {"ansible_loop_var": "item", "cache_update_time": 1716485786, "cache_updated": false, "changed": false, "item": "fzf"}
2024-05-23 23:06:33,418 p=214878 u=root n=ansible | ok: [localhost] => (item=ripgrep) => {"ansible_loop_var": "item", "cache_update_time": 1716485786, "cache_updated": false, "changed": false, "item": "ripgrep"}
2024-05-23 23:06:34,173 p=214878 u=root n=ansible | ok: [localhost] => (item=fd-find) => {"ansible_loop_var": "item", "cache_update_time": 1716485786, "cache_updated": false, "changed": false, "item": "fd-find"}
2024-05-23 23:06:34,929 p=214878 u=root n=ansible | ok: [localhost] => (item=bat) => {"ansible_loop_var": "item", "cache_update_time": 1716485786, "cache_updated": false, "changed": false, "item": "bat"}
2024-05-23 23:06:35,705 p=214878 u=root n=ansible | ok: [localhost] => (item=exa) => {"ansible_loop_var": "item", "cache_update_time": 1716485786, "cache_updated": false, "changed": false, "item": "exa"}
2024-05-23 23:06:36,451 p=214878 u=root n=ansible | ok: [localhost] => (item=python3-dev) => {"ansible_loop_var": "item", "cache_update_time": 1716485786, "cache_updated": false, "changed": false, "item": "python3-dev"}
2024-05-23 23:06:37,201 p=214878 u=root n=ansible | ok: [localhost] => (item=python3-pip) => {"ansible_loop_var": "item", "cache_update_time": 1716485786, "cache_updated": false, "changed": false, "item": "python3-pip"}
2024-05-23 23:06:37,950 p=214878 u=root n=ansible | ok: [localhost] => (item=python3-setuptools) => {"ansible_loop_var": "item", "cache_update_time": 1716485786, "cache_updated": false, "changed": false, "item": "python3-setuptools"}
2024-05-23 23:06:38,702 p=214878 u=root n=ansible | ok: [localhost] => (item=python3-venv) => {"ansible_loop_var": "item", "cache_update_time": 1716485786, "cache_updated": false, "changed": false, "item": "python3-venv"}
2024-05-23 23:06:39,450 p=214878 u=root n=ansible | ok: [localhost] => (item=python3-full) => {"ansible_loop_var": "item", "cache_update_time": 1716485786, "cache_updated": false, "changed": false, "item": "python3-full"}
2024-05-23 23:06:39,459 p=214878 u=root n=ansible | TASK [setup : install all command line tool on macOS] ****************************************************************************************************************************************
2024-05-23 23:06:39,477 p=214878 u=root n=ansible | skipping: [localhost] => (item=git)  => {"ansible_loop_var": "item", "changed": false, "item": "git", "skip_reason": "Conditional result was False"}
2024-05-23 23:06:39,483 p=214878 u=root n=ansible | skipping: [localhost] => (item=curl)  => {"ansible_loop_var": "item", "changed": false, "item": "curl", "skip_reason": "Conditional result was False"}
2024-05-23 23:06:39,488 p=214878 u=root n=ansible | skipping: [localhost] => (item=wget)  => {"ansible_loop_var": "item", "changed": false, "item": "wget", "skip_reason": "Conditional result was False"}
2024-05-23 23:06:39,488 p=214878 u=root n=ansible | skipping: [localhost] => (item=btop)  => {"ansible_loop_var": "item", "changed": false, "item": "btop", "skip_reason": "Conditional result was False"}
2024-05-23 23:06:39,488 p=214878 u=root n=ansible | skipping: [localhost] => (item=tree)  => {"ansible_loop_var": "item", "changed": false, "item": "tree", "skip_reason": "Conditional result was False"}
2024-05-23 23:06:39,494 p=214878 u=root n=ansible | skipping: [localhost] => (item=jq)  => {"ansible_loop_var": "item", "changed": false, "item": "jq", "skip_reason": "Conditional result was False"}
2024-05-23 23:06:39,502 p=214878 u=root n=ansible | skipping: [localhost] => (item=fzf)  => {"ansible_loop_var": "item", "changed": false, "item": "fzf", "skip_reason": "Conditional result was False"}
2024-05-23 23:06:39,506 p=214878 u=root n=ansible | skipping: [localhost] => (item=ripgrep)  => {"ansible_loop_var": "item", "changed": false, "item": "ripgrep", "skip_reason": "Conditional result was False"}
2024-05-23 23:06:39,511 p=214878 u=root n=ansible | skipping: [localhost] => (item=fd-find)  => {"ansible_loop_var": "item", "changed": false, "item": "fd-find", "skip_reason": "Conditional result was False"}
2024-05-23 23:06:39,511 p=214878 u=root n=ansible | skipping: [localhost] => (item=bat)  => {"ansible_loop_var": "item", "changed": false, "item": "bat", "skip_reason": "Conditional result was False"}
2024-05-23 23:06:39,512 p=214878 u=root n=ansible | skipping: [localhost] => (item=exa)  => {"ansible_loop_var": "item", "changed": false, "item": "exa", "skip_reason": "Conditional result was False"}
2024-05-23 23:06:39,512 p=214878 u=root n=ansible | skipping: [localhost] => (item=python3-dev)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-dev", "skip_reason": "Conditional result was False"}
2024-05-23 23:06:39,512 p=214878 u=root n=ansible | skipping: [localhost] => (item=python3-pip)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-pip", "skip_reason": "Conditional result was False"}
2024-05-23 23:06:39,513 p=214878 u=root n=ansible | skipping: [localhost] => (item=python3-setuptools)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-setuptools", "skip_reason": "Conditional result was False"}
2024-05-23 23:06:39,513 p=214878 u=root n=ansible | skipping: [localhost] => (item=python3-venv)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-venv", "skip_reason": "Conditional result was False"}
2024-05-23 23:06:39,513 p=214878 u=root n=ansible | skipping: [localhost] => (item=python3-full)  => {"ansible_loop_var": "item", "changed": false, "item": "python3-full", "skip_reason": "Conditional result was False"}
2024-05-23 23:06:39,514 p=214878 u=root n=ansible | skipping: [localhost] => {"changed": false, "msg": "All items skipped"}
2024-05-23 23:06:39,523 p=214878 u=root n=ansible | TASK [setup : install python tools] **********************************************************************************************************************************************************
2024-05-23 23:06:41,300 p=214878 u=root n=ansible | changed: [localhost] => (item=thefuck) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "thefuck", "--break-system-packages"], "delta": "0:00:01.505771", "end": "2024-05-23 23:06:41.278645", "item": "thefuck", "msg": "", "rc": 0, "start": "2024-05-23 23:06:39.772874", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)\nRequirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)\nRequirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)\nRequirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)\nRequirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)\nRequirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: thefuck in /usr/local/lib/python3.11/dist-packages (3.32)", "Requirement already satisfied: psutil in /usr/lib/python3/dist-packages (from thefuck) (5.9.4)", "Requirement already satisfied: colorama in /usr/lib/python3/dist-packages (from thefuck) (0.4.6)", "Requirement already satisfied: six in /usr/lib/python3/dist-packages (from thefuck) (1.16.0)", "Requirement already satisfied: decorator in /usr/lib/python3/dist-packages (from thefuck) (5.1.1)", "Requirement already satisfied: pyte in /usr/lib/python3/dist-packages (from thefuck) (0.8.0)"]}
2024-05-23 23:06:42,916 p=214878 u=root n=ansible | changed: [localhost] => (item=pyright) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pyright", "--break-system-packages"], "delta": "0:00:01.465036", "end": "2024-05-23 23:06:42.892009", "item": "pyright", "msg": "", "rc": 0, "start": "2024-05-23 23:06:41.426973", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)\nRequirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)\nRequirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pyright in /usr/local/lib/python3.11/dist-packages (1.1.363)", "Requirement already satisfied: nodeenv>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from pyright) (1.8.0)", "Requirement already satisfied: setuptools in /usr/lib/python3/dist-packages (from nodeenv>=1.6.0->pyright) (68.1.2)"]}
2024-05-23 23:06:44,550 p=214878 u=root n=ansible | changed: [localhost] => (item=pylint) => {"ansible_loop_var": "item", "changed": true, "cmd": ["python3", "-m", "pip", "install", "pylint", "--break-system-packages"], "delta": "0:00:01.488114", "end": "2024-05-23 23:06:44.533326", "item": "pylint", "msg": "", "rc": 0, "start": "2024-05-23 23:06:43.045212", "stderr": "", "stderr_lines": [], "stdout": "Defaulting to user installation because normal site-packages is not writeable\nRequirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)\nRequirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)\nRequirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)\nRequirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)\nRequirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)\nRequirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)\nRequirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)", "stdout_lines": ["Defaulting to user installation because normal site-packages is not writeable", "Requirement already satisfied: pylint in /usr/local/lib/python3.11/dist-packages (3.2.1)", "Requirement already satisfied: platformdirs>=2.2.0 in /usr/lib/python3/dist-packages (from pylint) (3.10.0)", "Requirement already satisfied: astroid<=3.3.0-dev0,>=3.2.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (3.2.1)", "Requirement already satisfied: isort!=5.13.0,<6,>=4.2.5 in /usr/local/lib/python3.11/dist-packages (from pylint) (5.13.2)", "Requirement already satisfied: mccabe<0.8,>=0.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.7.0)", "Requirement already satisfied: tomlkit>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.12.5)", "Requirement already satisfied: dill>=0.3.6 in /usr/local/lib/python3.11/dist-packages (from pylint) (0.3.8)"]}
2024-05-23 23:06:44,558 p=214878 u=root n=ansible | TASK [setup : checking Var require in scripts] ***********************************************************************************************************************************************
2024-05-23 23:06:44,573 p=214878 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim configuration directory: /home/vinayak/.config/nvim , Neovim config url: https://github.com/itsvinayak/TurboNvimConfig.nvim.git"
}
2024-05-23 23:06:44,584 p=214878 u=root n=ansible | TASK [setup : Install Neovim on Debian-based systems] ****************************************************************************************************************************************
2024-05-23 23:06:45,380 p=214878 u=root n=ansible | ok: [localhost] => {"cache_update_time": 1716485786, "cache_updated": false, "changed": false}
2024-05-23 23:06:45,386 p=214878 u=root n=ansible | TASK [setup : Install Neovim on macOS] *******************************************************************************************************************************************************
2024-05-23 23:06:45,400 p=214878 u=root n=ansible | skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
2024-05-23 23:06:45,409 p=214878 u=root n=ansible | TASK [setup : Ensure Neovim configuration directory exists] **********************************************************************************************************************************
2024-05-23 23:06:45,671 p=214878 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.config/nvim", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 23:06:45,680 p=214878 u=root n=ansible | TASK [setup : Clone the Neovim config] *******************************************************************************************************************************************************
2024-05-23 23:06:46,703 p=214878 u=root n=ansible | ok: [localhost] => {"after": "5a8b3fc47026034b1ddca11584b12503a12af754", "before": "5a8b3fc47026034b1ddca11584b12503a12af754", "changed": false, "remote_url_changed": false}
2024-05-23 23:06:46,710 p=214878 u=root n=ansible | TASK [setup : Debug message for Neovim installation on macOS] ********************************************************************************************************************************
2024-05-23 23:06:46,723 p=214878 u=root n=ansible | skipping: [localhost] => {}
2024-05-23 23:06:46,735 p=214878 u=root n=ansible | TASK [setup : Debug message for Neovim installation on Debian-based systems] *****************************************************************************************************************
2024-05-23 23:06:46,752 p=214878 u=root n=ansible | ok: [localhost] => {
    "msg": "Neovim installed on Debian"
}
2024-05-23 23:06:46,760 p=214878 u=root n=ansible | TASK [setup : Download NVM install script] ***************************************************************************************************************************************************
2024-05-23 23:06:47,496 p=214878 u=root n=ansible | ok: [localhost] => {"changed": false, "checksum_dest": "62f52a11233fe970fe2ae60e1495840c68505195", "checksum_src": "62f52a11233fe970fe2ae60e1495840c68505195", "dest": "/tmp/install_nvm.sh", "elapsed": 0, "gid": 1000, "group": "vinayak", "md5sum": "b75afbe19092d5a3d0f64ec49de1535d", "mode": "0755", "msg": "OK (16555 bytes)", "owner": "vinayak", "size": 16555, "src": "/home/vinayak/.ansible/tmp/ansible-moduletmp-1716485807.0939963-0mgp_1yg/tmplb1rtudc", "state": "file", "status_code": 200, "uid": 1000, "url": "https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh"}
2024-05-23 23:06:47,507 p=214878 u=root n=ansible | TASK [setup : Ensure NVM directory exists] ***************************************************************************************************************************************************
2024-05-23 23:06:47,683 p=214878 u=root n=ansible | ok: [localhost] => {"changed": false, "gid": 1000, "group": "vinayak", "mode": "0755", "owner": "vinayak", "path": "/home/vinayak/.nvm", "size": 4096, "state": "directory", "uid": 1000}
2024-05-23 23:06:47,690 p=214878 u=root n=ansible | TASK [setup : Run NVM install script] ********************************************************************************************************************************************************
2024-05-23 23:06:47,852 p=214878 u=root n=ansible | ok: [localhost] => {"changed": false, "cmd": "bash /tmp/install_nvm.sh", "delta": null, "end": null, "msg": "Did not run command since '/home/vinayak/.nvm' exists", "rc": 0, "start": null, "stderr": "", "stderr_lines": [], "stdout": "skipped, since /home/vinayak/.nvm exists", "stdout_lines": ["skipped, since /home/vinayak/.nvm exists"]}
2024-05-23 23:06:47,859 p=214878 u=root n=ansible | TASK [setup : print NVM version to confirm installation and check if NVM is working] *********************************************************************************************************
2024-05-23 23:06:48,087 p=214878 u=root n=ansible | changed: [localhost] => {"changed": true, "cmd": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n  [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n\nnvm -v\n", "delta": "0:00:00.070107", "end": "2024-05-23 23:06:48.069536", "msg": "", "rc": 0, "start": "2024-05-23 23:06:47.999429", "stderr": "", "stderr_lines": [], "stdout": "0.39.7", "stdout_lines": ["0.39.7"]}
2024-05-23 23:06:48,097 p=214878 u=root n=ansible | TASK [setup : Install Node.js using NVM] *****************************************************************************************************************************************************
2024-05-23 23:06:49,299 p=214878 u=root n=ansible | changed: [localhost] => {"changed": true, "cmd": "export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n  [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n\nnvm install 22\n", "delta": "0:00:01.031126", "end": "2024-05-23 23:06:49.277796", "msg": "", "rc": 0, "start": "2024-05-23 23:06:48.246670", "stderr": "v22.2.0 is already installed.", "stderr_lines": ["v22.2.0 is already installed."], "stdout": "Now using node v22.2.0 (npm v10.7.0)", "stdout_lines": ["Now using node v22.2.0 (npm v10.7.0)"]}
2024-05-23 23:06:49,333 p=214878 u=root n=ansible | PLAY RECAP ***********************************************************************************************************************************************************************************
2024-05-23 23:06:49,333 p=214878 u=root n=ansible | localhost                  : ok=17   changed=4    unreachable=0    failed=0    skipped=7    rescued=0    ignored=0   
